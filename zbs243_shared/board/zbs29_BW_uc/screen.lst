                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module screen
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _setWindowXY
                                     12 	.globl _wdtSetResetVal
                                     13 	.globl _wdtOn
                                     14 	.globl _timerDelay
                                     15 	.globl _timerGet
                                     16 	.globl _sleepForMsec
                                     17 	.globl _spiTXByte
                                     18 	.globl _spiByte
                                     19 	.globl _barcodeNextBar
                                     20 	.globl _barcodeIsDone
                                     21 	.globl _memset
                                     22 	.globl _UART_TXE
                                     23 	.globl _UART_RXF
                                     24 	.globl _IEN_EA
                                     25 	.globl _IEN_RF2
                                     26 	.globl _IEN_RF1
                                     27 	.globl _IEN_TMR1
                                     28 	.globl _IEN_TMR0
                                     29 	.globl _IEN_UART0
                                     30 	.globl _P2_7
                                     31 	.globl _P2_6
                                     32 	.globl _P2_5
                                     33 	.globl _P2_4
                                     34 	.globl _P2_3
                                     35 	.globl _P2_2
                                     36 	.globl _P2_1
                                     37 	.globl _P2_0
                                     38 	.globl _P1_7
                                     39 	.globl _P1_6
                                     40 	.globl _P1_5
                                     41 	.globl _P1_4
                                     42 	.globl _P1_3
                                     43 	.globl _P1_2
                                     44 	.globl _P1_1
                                     45 	.globl _P1_0
                                     46 	.globl _P0_7
                                     47 	.globl _P0_6
                                     48 	.globl _P0_5
                                     49 	.globl _P0_4
                                     50 	.globl _P0_3
                                     51 	.globl _P0_2
                                     52 	.globl _P0_1
                                     53 	.globl _P0_0
                                     54 	.globl _CFGPAGE
                                     55 	.globl _TCON2
                                     56 	.globl _SETTINGS
                                     57 	.globl _TRIGGER
                                     58 	.globl _UNK_C1
                                     59 	.globl _RADIO_GOTLEN
                                     60 	.globl _RADIO_INITSEQ3
                                     61 	.globl _RADIO_RXLEN
                                     62 	.globl _RADIO_RXPTRH
                                     63 	.globl _RADIO_RXPTRL
                                     64 	.globl _RADIO_INITSEQ5
                                     65 	.globl _RADIO_INITSEQ4
                                     66 	.globl _RADIO_INITSEQ0
                                     67 	.globl _RADIO_TXLEN
                                     68 	.globl _RADIO_INITSEQ2
                                     69 	.globl _RADIO_INITSEQ1
                                     70 	.globl _RADIO_TXPTRH
                                     71 	.globl _RADIO_TXPTRL
                                     72 	.globl _TEMPCAL6
                                     73 	.globl _TEMPCAL5
                                     74 	.globl _TEMPCAL4
                                     75 	.globl _TEMPCAL3
                                     76 	.globl _TEMPRETL
                                     77 	.globl _TEMPRETH
                                     78 	.globl _TEMPCFG
                                     79 	.globl _TEMPCAL2
                                     80 	.globl _TEMPCAL1
                                     81 	.globl _FWRTHREE
                                     82 	.globl _FWRLENH
                                     83 	.globl _FWRLENL
                                     84 	.globl _FWRDSTH
                                     85 	.globl _FWRDSTL
                                     86 	.globl _FWRSRCH
                                     87 	.globl _FWRSRCL
                                     88 	.globl _FPGNO
                                     89 	.globl _T1
                                     90 	.globl _T0
                                     91 	.globl _TH1
                                     92 	.globl _TH0
                                     93 	.globl _TL1
                                     94 	.globl _TL0
                                     95 	.globl _TMOD
                                     96 	.globl _TCON
                                     97 	.globl _UARTBRGH
                                     98 	.globl _UARTBRGL
                                     99 	.globl _UARTBUF
                                    100 	.globl _UARTSTA
                                    101 	.globl _I2CUNKNOWN
                                    102 	.globl _I2CSPEED
                                    103 	.globl _I2CCTL
                                    104 	.globl _I2CBUF
                                    105 	.globl _I2CSTATE
                                    106 	.globl _SPIRX
                                    107 	.globl _SPITX
                                    108 	.globl _SPIENA
                                    109 	.globl _SPICFG
                                    110 	.globl _SPIUNKNOWN
                                    111 	.globl _WDTCONF
                                    112 	.globl _WDTRSTVALH
                                    113 	.globl _WDTRSTVALM
                                    114 	.globl _WDTRSTVALL
                                    115 	.globl _WDTPET
                                    116 	.globl _WDTENA
                                    117 	.globl _RESET
                                    118 	.globl _CLKEN
                                    119 	.globl _CLKSPEED
                                    120 	.globl _IEN1
                                    121 	.globl _IEN0
                                    122 	.globl _XPAGE
                                    123 	.globl _P2PULL
                                    124 	.globl _P1PULL
                                    125 	.globl _P0PULL
                                    126 	.globl _P2DIR
                                    127 	.globl _P1DIR
                                    128 	.globl _P0DIR
                                    129 	.globl _P2FUNC
                                    130 	.globl _P1FUNC
                                    131 	.globl _P0FUNC
                                    132 	.globl _P2CHSTA
                                    133 	.globl _P1CHSTA
                                    134 	.globl _P0CHSTA
                                    135 	.globl _P2INTEN
                                    136 	.globl _P1INTEN
                                    137 	.globl _P0INTEN
                                    138 	.globl _P2LVLSEL
                                    139 	.globl _P1LVLSEL
                                    140 	.globl _P0LVLSEL
                                    141 	.globl _P2
                                    142 	.globl _P1
                                    143 	.globl _P0
                                    144 	.globl _PERFMON4
                                    145 	.globl _PCL
                                    146 	.globl _PCH
                                    147 	.globl _PERFMON1
                                    148 	.globl _PERFMON0
                                    149 	.globl _PCON
                                    150 	.globl _DPS
                                    151 	.globl _DPH1
                                    152 	.globl _DPL1
                                    153 	.globl _DPH
                                    154 	.globl _DPL
                                    155 	.globl _ACC
                                    156 	.globl _B
                                    157 	.globl _waveform7
                                    158 	.globl _waveform10
                                    159 	.globl _epdGPIOActive
                                    160 	.globl _epdPrintBegin_PARM_5
                                    161 	.globl _epdPrintBegin_PARM_4
                                    162 	.globl _epdPrintBegin_PARM_3
                                    163 	.globl _epdPrintBegin_PARM_2
                                    164 	.globl _printBarcode_PARM_3
                                    165 	.globl _printBarcode_PARM_2
                                    166 	.globl _setColorMode_PARM_2
                                    167 	.globl _setWindowXY_PARM_4
                                    168 	.globl _setWindowXY_PARM_3
                                    169 	.globl _setWindowXY_PARM_2
                                    170 	.globl _waveformbuffer
                                    171 	.globl _epdConfigGPIO
                                    172 	.globl _epdEnterSleep
                                    173 	.globl _epdSetup
                                    174 	.globl _epdGetBattery
                                    175 	.globl _selectLUT
                                    176 	.globl _setColorMode
                                    177 	.globl _clearScreen
                                    178 	.globl _draw
                                    179 	.globl _drawNoWait
                                    180 	.globl _drawWithSleep
                                    181 	.globl _epdWaitRdy
                                    182 	.globl _beginFullscreenImage
                                    183 	.globl _beginWriteFramebuffer
                                    184 	.globl _endWriteFramebuffer
                                    185 	.globl _loadRawBitmap
                                    186 	.globl _printBarcode
                                    187 	.globl _writeCharEPD
                                    188 	.globl _epdPrintBegin
                                    189 	.globl _epdPrintEnd
                                    190 ;--------------------------------------------------------
                                    191 ; special function registers
                                    192 ;--------------------------------------------------------
                                    193 	.area RSEG    (ABS,DATA)
      000000                        194 	.org 0x0000
                           0000F0   195 _B	=	0x00f0
                           0000E0   196 _ACC	=	0x00e0
                           000082   197 _DPL	=	0x0082
                           000083   198 _DPH	=	0x0083
                           000084   199 _DPL1	=	0x0084
                           000085   200 _DPH1	=	0x0085
                           000092   201 _DPS	=	0x0092
                           000087   202 _PCON	=	0x0087
                           0000B2   203 _PERFMON0	=	0x00b2
                           0000B3   204 _PERFMON1	=	0x00b3
                           0000B4   205 _PCH	=	0x00b4
                           0000B5   206 _PCL	=	0x00b5
                           0000B6   207 _PERFMON4	=	0x00b6
                           000080   208 _P0	=	0x0080
                           000090   209 _P1	=	0x0090
                           0000A0   210 _P2	=	0x00a0
                           0000A3   211 _P0LVLSEL	=	0x00a3
                           0000A4   212 _P1LVLSEL	=	0x00a4
                           0000A5   213 _P2LVLSEL	=	0x00a5
                           0000A6   214 _P0INTEN	=	0x00a6
                           0000A7   215 _P1INTEN	=	0x00a7
                           0000A9   216 _P2INTEN	=	0x00a9
                           0000AA   217 _P0CHSTA	=	0x00aa
                           0000AB   218 _P1CHSTA	=	0x00ab
                           0000AC   219 _P2CHSTA	=	0x00ac
                           0000AD   220 _P0FUNC	=	0x00ad
                           0000AE   221 _P1FUNC	=	0x00ae
                           0000AF   222 _P2FUNC	=	0x00af
                           0000B9   223 _P0DIR	=	0x00b9
                           0000BA   224 _P1DIR	=	0x00ba
                           0000BB   225 _P2DIR	=	0x00bb
                           0000BC   226 _P0PULL	=	0x00bc
                           0000BD   227 _P1PULL	=	0x00bd
                           0000BE   228 _P2PULL	=	0x00be
                           0000A0   229 _XPAGE	=	0x00a0
                           0000A8   230 _IEN0	=	0x00a8
                           0000A1   231 _IEN1	=	0x00a1
                           00008E   232 _CLKSPEED	=	0x008e
                           0000B7   233 _CLKEN	=	0x00b7
                           00008F   234 _RESET	=	0x008f
                           0000BA   235 _WDTENA	=	0x00ba
                           0000BB   236 _WDTPET	=	0x00bb
                           0000BC   237 _WDTRSTVALL	=	0x00bc
                           0000BD   238 _WDTRSTVALM	=	0x00bd
                           0000BE   239 _WDTRSTVALH	=	0x00be
                           0000BF   240 _WDTCONF	=	0x00bf
                           0000EB   241 _SPIUNKNOWN	=	0x00eb
                           0000EC   242 _SPICFG	=	0x00ec
                           0000ED   243 _SPIENA	=	0x00ed
                           0000EE   244 _SPITX	=	0x00ee
                           0000EF   245 _SPIRX	=	0x00ef
                           000091   246 _I2CSTATE	=	0x0091
                           000094   247 _I2CBUF	=	0x0094
                           000095   248 _I2CCTL	=	0x0095
                           000096   249 _I2CSPEED	=	0x0096
                           0000A2   250 _I2CUNKNOWN	=	0x00a2
                           000098   251 _UARTSTA	=	0x0098
                           000099   252 _UARTBUF	=	0x0099
                           00009A   253 _UARTBRGL	=	0x009a
                           00009B   254 _UARTBRGH	=	0x009b
                           000088   255 _TCON	=	0x0088
                           000089   256 _TMOD	=	0x0089
                           00008A   257 _TL0	=	0x008a
                           00008B   258 _TL1	=	0x008b
                           00008C   259 _TH0	=	0x008c
                           00008D   260 _TH1	=	0x008d
                           008C8A   261 _T0	=	0x8c8a
                           008D8B   262 _T1	=	0x8d8b
                           0000D8   263 _FPGNO	=	0x00d8
                           0000D9   264 _FWRSRCL	=	0x00d9
                           0000DA   265 _FWRSRCH	=	0x00da
                           0000DB   266 _FWRDSTL	=	0x00db
                           0000DC   267 _FWRDSTH	=	0x00dc
                           0000DD   268 _FWRLENL	=	0x00dd
                           0000DE   269 _FWRLENH	=	0x00de
                           0000DF   270 _FWRTHREE	=	0x00df
                           0000E6   271 _TEMPCAL1	=	0x00e6
                           0000E7   272 _TEMPCAL2	=	0x00e7
                           0000F7   273 _TEMPCFG	=	0x00f7
                           0000F8   274 _TEMPRETH	=	0x00f8
                           0000F9   275 _TEMPRETL	=	0x00f9
                           0000FB   276 _TEMPCAL3	=	0x00fb
                           0000FC   277 _TEMPCAL4	=	0x00fc
                           0000FD   278 _TEMPCAL5	=	0x00fd
                           0000FE   279 _TEMPCAL6	=	0x00fe
                           0000C9   280 _RADIO_TXPTRL	=	0x00c9
                           0000CA   281 _RADIO_TXPTRH	=	0x00ca
                           0000CB   282 _RADIO_INITSEQ1	=	0x00cb
                           0000CC   283 _RADIO_INITSEQ2	=	0x00cc
                           0000CD   284 _RADIO_TXLEN	=	0x00cd
                           0000CE   285 _RADIO_INITSEQ0	=	0x00ce
                           0000D1   286 _RADIO_INITSEQ4	=	0x00d1
                           0000D2   287 _RADIO_INITSEQ5	=	0x00d2
                           0000D3   288 _RADIO_RXPTRL	=	0x00d3
                           0000D4   289 _RADIO_RXPTRH	=	0x00d4
                           0000D5   290 _RADIO_RXLEN	=	0x00d5
                           0000D6   291 _RADIO_INITSEQ3	=	0x00d6
                           0000FA   292 _RADIO_GOTLEN	=	0x00fa
                           0000C1   293 _UNK_C1	=	0x00c1
                           0000D7   294 _TRIGGER	=	0x00d7
                           0000C7   295 _SETTINGS	=	0x00c7
                           0000CF   296 _TCON2	=	0x00cf
                           0000FF   297 _CFGPAGE	=	0x00ff
                                    298 ;--------------------------------------------------------
                                    299 ; special function bits
                                    300 ;--------------------------------------------------------
                                    301 	.area RSEG    (ABS,DATA)
      000000                        302 	.org 0x0000
                           000080   303 _P0_0	=	0x0080
                           000081   304 _P0_1	=	0x0081
                           000082   305 _P0_2	=	0x0082
                           000083   306 _P0_3	=	0x0083
                           000084   307 _P0_4	=	0x0084
                           000085   308 _P0_5	=	0x0085
                           000086   309 _P0_6	=	0x0086
                           000087   310 _P0_7	=	0x0087
                           000090   311 _P1_0	=	0x0090
                           000091   312 _P1_1	=	0x0091
                           000092   313 _P1_2	=	0x0092
                           000093   314 _P1_3	=	0x0093
                           000094   315 _P1_4	=	0x0094
                           000095   316 _P1_5	=	0x0095
                           000096   317 _P1_6	=	0x0096
                           000097   318 _P1_7	=	0x0097
                           0000A0   319 _P2_0	=	0x00a0
                           0000A1   320 _P2_1	=	0x00a1
                           0000A2   321 _P2_2	=	0x00a2
                           0000A3   322 _P2_3	=	0x00a3
                           0000A4   323 _P2_4	=	0x00a4
                           0000A5   324 _P2_5	=	0x00a5
                           0000A6   325 _P2_6	=	0x00a6
                           0000A7   326 _P2_7	=	0x00a7
                           0000A8   327 _IEN_UART0	=	0x00a8
                           0000A9   328 _IEN_TMR0	=	0x00a9
                           0000AB   329 _IEN_TMR1	=	0x00ab
                           0000AC   330 _IEN_RF1	=	0x00ac
                           0000AD   331 _IEN_RF2	=	0x00ad
                           0000AF   332 _IEN_EA	=	0x00af
                           000098   333 _UART_RXF	=	0x0098
                           000099   334 _UART_TXE	=	0x0099
                                    335 ;--------------------------------------------------------
                                    336 ; overlayable register banks
                                    337 ;--------------------------------------------------------
                                    338 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        339 	.ds 8
                                    340 ;--------------------------------------------------------
                                    341 ; overlayable bit register bank
                                    342 ;--------------------------------------------------------
                                    343 	.area BIT_BANK	(REL,OVR,DATA)
      000000                        344 bits:
      000000                        345 	.ds 1
                           008000   346 	b0 = bits[0]
                           008100   347 	b1 = bits[1]
                           008200   348 	b2 = bits[2]
                           008300   349 	b3 = bits[3]
                           008400   350 	b4 = bits[4]
                           008500   351 	b5 = bits[5]
                           008600   352 	b6 = bits[6]
                           008700   353 	b7 = bits[7]
                                    354 ;--------------------------------------------------------
                                    355 ; internal ram data
                                    356 ;--------------------------------------------------------
                                    357 	.area DSEG    (DATA)
      000000                        358 _epdBusyWait_sloc0_1_0:
      000000                        359 	.ds 4
                                    360 ;--------------------------------------------------------
                                    361 ; overlayable items in internal ram
                                    362 ;--------------------------------------------------------
                                    363 ;--------------------------------------------------------
                                    364 ; indirectly addressable internal ram data
                                    365 ;--------------------------------------------------------
                                    366 	.area ISEG    (DATA)
                           000000   367 _R0	=	0x0000
                           000001   368 _R1	=	0x0001
                           000002   369 _R2	=	0x0002
                           000003   370 _R3	=	0x0003
                           000004   371 _R4	=	0x0004
                           000005   372 _R5	=	0x0005
                           000006   373 _R6	=	0x0006
                           000007   374 _R7	=	0x0007
                                    375 ;--------------------------------------------------------
                                    376 ; absolute internal ram data
                                    377 ;--------------------------------------------------------
                                    378 	.area IABS    (ABS,DATA)
                                    379 	.area IABS    (ABS,DATA)
                                    380 ;--------------------------------------------------------
                                    381 ; bit data
                                    382 ;--------------------------------------------------------
                                    383 	.area BSEG    (BIT)
                                    384 ;--------------------------------------------------------
                                    385 ; paged external ram data
                                    386 ;--------------------------------------------------------
                                    387 	.area PSEG    (PAG,XDATA)
                                    388 ;--------------------------------------------------------
                                    389 ; external ram data
                                    390 ;--------------------------------------------------------
                                    391 	.area XSEG    (XDATA)
                           00DF48   392 _RADIO_command	=	0xdf48
                           00DF70   393 _RADIO_calibration_70	=	0xdf70
                           00DF71   394 _RADIO_calibration_71	=	0xdf71
                           00DF80   395 _RADIO_FLAGS	=	0xdf80
                           00DF81   396 _RADIO_calibration_81	=	0xdf81
                           00DF83   397 _RADIO_unk_83	=	0xdf83
                           00DF84   398 _RADIO_currentRSSI	=	0xdf84
                           00DF86   399 _RADIO_calibration_86	=	0xdf86
                           00DF88   400 _RADIO_ownMac_7	=	0xdf88
                           00DF89   401 _RADIO_ownMac_6	=	0xdf89
                           00DF8A   402 _RADIO_ownMac_5	=	0xdf8a
                           00DF8B   403 _RADIO_ownMac_4	=	0xdf8b
                           00DF8C   404 _RADIO_ownMac_3	=	0xdf8c
                           00DF8D   405 _RADIO_ownMac_2	=	0xdf8d
                           00DF8E   406 _RADIO_ownMac_1	=	0xdf8e
                           00DF8F   407 _RADIO_ownMac_0	=	0xdf8f
                           00DF90   408 _RADIO_PANID_Hi	=	0xdf90
                           00DF91   409 _RADIO_PANID_Lo	=	0xdf91
                           00DF92   410 _RADIO_ownShortAddress_Hi	=	0xdf92
                           00DF93   411 _RADIO_ownShortAddress_Lo	=	0xdf93
                           00DF94   412 _RADIO_calibration_94	=	0xdf94
                           00DF95   413 _RADIO_calibration_95	=	0xdf95
                           00DF96   414 _RADIO_calibration_96	=	0xdf96
                           00DF98   415 _RADIO_rxFirstByte	=	0xdf98
                           00DF9B   416 _RADIO_curRfState	=	0xdf9b
                           00DF9D   417 _RADIO_calibration_9D	=	0xdf9d
                           00DFA1   418 _RADIO_calibration_A1	=	0xdfa1
                           00DFA5   419 _RADIO_unk_rxAckSta	=	0xdfa5
                           00DFA6   420 _RADIO_unk_A6	=	0xdfa6
                           00DFAD   421 _RADIO_IRQ4_pending	=	0xdfad
                           00DFAF   422 _RADIO_unk_AF	=	0xdfaf
                           00DFC0   423 _RADIO_channel	=	0xdfc0
                           00DFC1   424 _RADIO_unk_C1	=	0xdfc1
                           00DFC2   425 _RADIO_calibration_C2	=	0xdfc2
                           00DFC3   426 _RADIO_calibration_C3	=	0xdfc3
                           00DFC4   427 _RADIO_calibration_C4	=	0xdfc4
                           00DFC5   428 _RADIO_calibration_C5	=	0xdfc5
                           00DFC6   429 _RADIO_calibration_C6	=	0xdfc6
                           00DFC7   430 _RADIO_calibration_C7	=	0xdfc7
                           00DFC8   431 _RADIO_unk_C8	=	0xdfc8
                           00DFC9   432 _RADIO_txPower	=	0xdfc9
                           00DFCA   433 _RADIO_unk_CA	=	0xdfca
                           00DFCB   434 _RADIO_perChannelSetting2	=	0xdfcb
                           00DFCD   435 _RADIO_unk_CD	=	0xdfcd
                           00DFCE   436 _RADIO_unk_CE	=	0xdfce
                           00DFCF   437 _RADIO_calibration_CF	=	0xdfcf
                           00DFD0   438 _RADIO_calibration_D0	=	0xdfd0
                           00DFD1   439 _RADIO_calibration_D1	=	0xdfd1
                           00DFD2   440 _RADIO_calibration_D2	=	0xdfd2
                           00DFD3   441 _RADIO_calibration_D3	=	0xdfd3
                           00DFD4   442 _RADIO_calibration_D4	=	0xdfd4
                           00DFD5   443 _RADIO_calibration_D5	=	0xdfd5
                           00DFD7   444 _RADIO_unk_D7	=	0xdfd7
                           00DFD8   445 _RADIO_unk_D8	=	0xdfd8
                           00DFD9   446 _RADIO_SleepTimerHi	=	0xdfd9
                           00DFDA   447 _RADIO_SleepTimerMid	=	0xdfda
                           00DFDB   448 _RADIO_SleepTimerLo	=	0xdfdb
                           00DFE2   449 _RADIO_unk_E2	=	0xdfe2
                           00DFF0   450 _RADIO_unk_F0	=	0xdff0
                           00DFF3   451 _RADIO_SleepTimerSettings	=	0xdff3
                           00DFF4   452 _RADIO_RadioPowerCtl	=	0xdff4
                           00DFFB   453 _RADIO_Wake_Reason	=	0xdffb
                           00DFFD   454 _RADIO_perChannelSetting1	=	0xdffd
      000000                        455 _rbuffer:
      000000                        456 	.ds 32
      000020                        457 _waveformbuffer::
      000020                        458 	.ds 128
      0000A0                        459 _epdBusySleep_timeout_65536_115:
      0000A0                        460 	.ds 4
      0000A4                        461 _epdBusySleep_tmp_P2FUNC_65536_116:
      0000A4                        462 	.ds 1
      0000A5                        463 _epdBusySleep_tmp_P2DIR_65536_116:
      0000A5                        464 	.ds 1
      0000A6                        465 _epdBusySleep_tmp_P2PULL_65536_116:
      0000A6                        466 	.ds 1
      0000A7                        467 _epdBusySleep_tmp_P2LVLSEL_65536_116:
      0000A7                        468 	.ds 1
      0000A8                        469 _epdBusyWait_timeout_65536_118:
      0000A8                        470 	.ds 4
      0000AC                        471 _commandReadBegin_cmd_65536_121:
      0000AC                        472 	.ds 1
      0000AD                        473 _epdReadByte_val_65536_127:
      0000AD                        474 	.ds 1
      0000AE                        475 _shortCommand_cmd_65536_130:
      0000AE                        476 	.ds 1
      0000AF                        477 _shortCommand1_PARM_2:
      0000AF                        478 	.ds 1
      0000B0                        479 _shortCommand1_cmd_65536_135:
      0000B0                        480 	.ds 1
      0000B1                        481 _shortCommand2_PARM_2:
      0000B1                        482 	.ds 1
      0000B2                        483 _shortCommand2_PARM_3:
      0000B2                        484 	.ds 1
      0000B3                        485 _shortCommand2_cmd_65536_141:
      0000B3                        486 	.ds 1
      0000B4                        487 _commandBegin_cmd_65536_147:
      0000B4                        488 	.ds 1
      0000B5                        489 _epdConfigGPIO_setup_65536_153:
      0000B5                        490 	.ds 1
      0000B6                        491 _epdDrawDirection_direction_65536_158:
      0000B6                        492 	.ds 1
      0000B7                        493 _epdDrawDirection_psr_setting_65537_160:
      0000B7                        494 	.ds 1
      0000B8                        495 _selectLUT_lut_65536_170:
      0000B8                        496 	.ds 1
      0000B9                        497 _setWindowXY_PARM_2:
      0000B9                        498 	.ds 2
      0000BB                        499 _setWindowXY_PARM_3:
      0000BB                        500 	.ds 2
      0000BD                        501 _setWindowXY_PARM_4:
      0000BD                        502 	.ds 2
      0000BF                        503 _setWindowXY_xstart_65536_172:
      0000BF                        504 	.ds 2
      0000C1                        505 _setColorMode_PARM_2:
      0000C1                        506 	.ds 1
      0000C2                        507 _setColorMode_red_65536_175:
      0000C2                        508 	.ds 1
      0000C3                        509 _drawWithSleep_tmp_P2FUNC_65537_187:
      0000C3                        510 	.ds 1
      0000C4                        511 _drawWithSleep_tmp_P2DIR_65537_187:
      0000C4                        512 	.ds 1
      0000C5                        513 _drawWithSleep_tmp_P2PULL_65537_187:
      0000C5                        514 	.ds 1
      0000C6                        515 _drawWithSleep_tmp_P2LVLSEL_65537_187:
      0000C6                        516 	.ds 1
      0000C7                        517 _beginWriteFramebuffer_color_65536_191:
      0000C7                        518 	.ds 1
      0000C8                        519 _printBarcode_PARM_2:
      0000C8                        520 	.ds 2
      0000CA                        521 _printBarcode_PARM_3:
      0000CA                        522 	.ds 2
      0000CC                        523 _printBarcode_string_65536_210:
      0000CC                        524 	.ds 3
      0000CF                        525 _printBarcode_bci_65537_212:
      0000CF                        526 	.ds 9
      0000D8                        527 _pushXFontBytesToEPD_PARM_2:
      0000D8                        528 	.ds 1
      0000D9                        529 _pushXFontBytesToEPD_byte1_65536_217:
      0000D9                        530 	.ds 1
      0000DA                        531 _pushXFontBytesToEPD_offset_131072_219:
      0000DA                        532 	.ds 1
      0000DB                        533 _pushXFontBytesToEPD_offset_131072_224:
      0000DB                        534 	.ds 1
      0000DC                        535 _bufferByteShift_byte_65536_234:
      0000DC                        536 	.ds 1
      0000DD                        537 _pushYFontBytesToEPD_PARM_2:
      0000DD                        538 	.ds 1
      0000DE                        539 _pushYFontBytesToEPD_byte1_65536_239:
      0000DE                        540 	.ds 1
      0000DF                        541 _pushYFontBytesToEPD_c_262144_243:
      0000DF                        542 	.ds 1
      0000E0                        543 _writeCharEPD_c_65536_251:
      0000E0                        544 	.ds 1
      0000E1                        545 _writeCharEPD_empty_65537_253:
      0000E1                        546 	.ds 1
      0000E2                        547 _writeCharEPD_begin_65538_261:
      0000E2                        548 	.ds 1
      0000E3                        549 _writeCharEPD_end_65539_263:
      0000E3                        550 	.ds 1
      0000E4                        551 _writeCharEPD_pos_131075_265:
      0000E4                        552 	.ds 1
      0000E5                        553 _epdPrintBegin_PARM_2:
      0000E5                        554 	.ds 2
      0000E7                        555 _epdPrintBegin_PARM_3:
      0000E7                        556 	.ds 1
      0000E8                        557 _epdPrintBegin_PARM_4:
      0000E8                        558 	.ds 1
      0000E9                        559 _epdPrintBegin_PARM_5:
      0000E9                        560 	.ds 1
      0000EA                        561 _epdPrintBegin_x_65536_271:
      0000EA                        562 	.ds 2
      0000EC                        563 _epdPrintBegin_extra_131072_273:
      0000EC                        564 	.ds 1
                                    565 ;--------------------------------------------------------
                                    566 ; absolute external ram data
                                    567 ;--------------------------------------------------------
                                    568 	.area XABS    (ABS,XDATA)
                                    569 ;--------------------------------------------------------
                                    570 ; external initialized ram data
                                    571 ;--------------------------------------------------------
                                    572 	.area XISEG   (XDATA)
      000000                        573 _epdCharSize:
      000000                        574 	.ds 1
      000001                        575 _directionY:
      000001                        576 	.ds 1
      000002                        577 _fontCurXpos:
      000002                        578 	.ds 2
      000004                        579 _fontCurYpos:
      000004                        580 	.ds 2
      000006                        581 _currentLut:
      000006                        582 	.ds 1
      000007                        583 _dispLutSize:
      000007                        584 	.ds 1
      000008                        585 _drawDirection:
      000008                        586 	.ds 1
      000009                        587 _isInited:
      000009                        588 	.ds 1
      00000A                        589 _epdGPIOActive::
      00000A                        590 	.ds 1
      00000B                        591 _waveform10::
      00000B                        592 	.ds 3
      00000E                        593 _waveform7::
      00000E                        594 	.ds 3
                                    595 	.area HOME    (CODE)
                                    596 	.area GSINIT0 (CODE)
                                    597 	.area GSINIT1 (CODE)
                                    598 	.area GSINIT2 (CODE)
                                    599 	.area GSINIT3 (CODE)
                                    600 	.area GSINIT4 (CODE)
                                    601 	.area GSINIT5 (CODE)
                                    602 	.area GSINIT  (CODE)
                                    603 	.area GSFINAL (CODE)
                                    604 	.area CSEG    (CODE)
                                    605 ;--------------------------------------------------------
                                    606 ; global & static initialisations
                                    607 ;--------------------------------------------------------
                                    608 	.area HOME    (CODE)
                                    609 	.area GSINIT  (CODE)
                                    610 	.area GSFINAL (CODE)
                                    611 	.area GSINIT  (CODE)
                                    612 ;--------------------------------------------------------
                                    613 ; Home
                                    614 ;--------------------------------------------------------
                                    615 	.area HOME    (CODE)
                                    616 	.area HOME    (CODE)
                                    617 ;--------------------------------------------------------
                                    618 ; code
                                    619 ;--------------------------------------------------------
                                    620 	.area CSEG    (CODE)
                                    621 ;------------------------------------------------------------
                                    622 ;Allocation info for local variables in function 'epdBusySleep'
                                    623 ;------------------------------------------------------------
                                    624 ;timeout                   Allocated with name '_epdBusySleep_timeout_65536_115'
                                    625 ;tmp_P2FUNC                Allocated with name '_epdBusySleep_tmp_P2FUNC_65536_116'
                                    626 ;tmp_P2DIR                 Allocated with name '_epdBusySleep_tmp_P2DIR_65536_116'
                                    627 ;tmp_P2PULL                Allocated with name '_epdBusySleep_tmp_P2PULL_65536_116'
                                    628 ;tmp_P2LVLSEL              Allocated with name '_epdBusySleep_tmp_P2LVLSEL_65536_116'
                                    629 ;------------------------------------------------------------
                                    630 ;	board/zbs29_BW_uc/../uc8151.c:206: static void epdBusySleep(uint32_t timeout) {
                                    631 ;	-----------------------------------------
                                    632 ;	 function epdBusySleep
                                    633 ;	-----------------------------------------
      000000                        634 _epdBusySleep:
                           000007   635 	ar7 = 0x07
                           000006   636 	ar6 = 0x06
                           000005   637 	ar5 = 0x05
                           000004   638 	ar4 = 0x04
                           000003   639 	ar3 = 0x03
                           000002   640 	ar2 = 0x02
                           000001   641 	ar1 = 0x01
                           000000   642 	ar0 = 0x00
      000000 C0 07            [24]  643 	push	ar7
      000002 C0 06            [24]  644 	push	ar6
      000004 C0 05            [24]  645 	push	ar5
      000006 C0 04            [24]  646 	push	ar4
      000008 AF 82            [24]  647 	mov	r7,dpl
      00000A AE 83            [24]  648 	mov	r6,dph
      00000C AD F0            [24]  649 	mov	r5,b
      00000E FC               [12]  650 	mov	r4,a
      00000F 90r00rA0         [24]  651 	mov	dptr,#_epdBusySleep_timeout_65536_115
      000012 EF               [12]  652 	mov	a,r7
      000013 F0               [24]  653 	movx	@dptr,a
      000014 EE               [12]  654 	mov	a,r6
      000015 A3               [24]  655 	inc	dptr
      000016 F0               [24]  656 	movx	@dptr,a
      000017 ED               [12]  657 	mov	a,r5
      000018 A3               [24]  658 	inc	dptr
      000019 F0               [24]  659 	movx	@dptr,a
      00001A EC               [12]  660 	mov	a,r4
      00001B A3               [24]  661 	inc	dptr
      00001C F0               [24]  662 	movx	@dptr,a
                                    663 ;	board/zbs29_BW_uc/../uc8151.c:207: uint8_t tmp_P2FUNC = P2FUNC;
      00001D 90r00rA4         [24]  664 	mov	dptr,#_epdBusySleep_tmp_P2FUNC_65536_116
      000020 E5 AF            [12]  665 	mov	a,_P2FUNC
      000022 F0               [24]  666 	movx	@dptr,a
                                    667 ;	board/zbs29_BW_uc/../uc8151.c:208: uint8_t tmp_P2DIR = P2DIR;
      000023 90r00rA5         [24]  668 	mov	dptr,#_epdBusySleep_tmp_P2DIR_65536_116
      000026 E5 BB            [12]  669 	mov	a,_P2DIR
      000028 F0               [24]  670 	movx	@dptr,a
                                    671 ;	board/zbs29_BW_uc/../uc8151.c:209: uint8_t tmp_P2PULL = P2PULL;
      000029 90r00rA6         [24]  672 	mov	dptr,#_epdBusySleep_tmp_P2PULL_65536_116
      00002C E5 BE            [12]  673 	mov	a,_P2PULL
      00002E F0               [24]  674 	movx	@dptr,a
                                    675 ;	board/zbs29_BW_uc/../uc8151.c:210: uint8_t tmp_P2LVLSEL = P2LVLSEL;
      00002F 90r00rA7         [24]  676 	mov	dptr,#_epdBusySleep_tmp_P2LVLSEL_65536_116
      000032 E5 A5            [12]  677 	mov	a,_P2LVLSEL
      000034 F0               [24]  678 	movx	@dptr,a
                                    679 ;	board/zbs29_BW_uc/../uc8151.c:211: P2FUNC &= 0xfd;
      000035 53 AF FD         [24]  680 	anl	_P2FUNC,#0xfd
                                    681 ;	board/zbs29_BW_uc/../uc8151.c:212: P2DIR |= 2;
      000038 43 BB 02         [24]  682 	orl	_P2DIR,#0x02
                                    683 ;	board/zbs29_BW_uc/../uc8151.c:213: P2PULL |= 2;
      00003B 43 BE 02         [24]  684 	orl	_P2PULL,#0x02
                                    685 ;	board/zbs29_BW_uc/../uc8151.c:214: P2LVLSEL &= ~(2);
      00003E 53 A5 FD         [24]  686 	anl	_P2LVLSEL,#0xfd
                                    687 ;	board/zbs29_BW_uc/../uc8151.c:216: P2CHSTA &= 0xfd;
      000041 53 AC FD         [24]  688 	anl	_P2CHSTA,#0xfd
                                    689 ;	board/zbs29_BW_uc/../uc8151.c:217: P2INTEN |= 2;
      000044 43 A9 02         [24]  690 	orl	_P2INTEN,#0x02
                                    691 ;	board/zbs29_BW_uc/../uc8151.c:218: P2CHSTA &= 0xfd;
      000047 53 AC FD         [24]  692 	anl	_P2CHSTA,#0xfd
                                    693 ;	board/zbs29_BW_uc/../uc8151.c:219: sleepForMsec(timeout);
      00004A 90r00rA0         [24]  694 	mov	dptr,#_epdBusySleep_timeout_65536_115
      00004D E0               [24]  695 	movx	a,@dptr
      00004E FC               [12]  696 	mov	r4,a
      00004F A3               [24]  697 	inc	dptr
      000050 E0               [24]  698 	movx	a,@dptr
      000051 FD               [12]  699 	mov	r5,a
      000052 A3               [24]  700 	inc	dptr
      000053 E0               [24]  701 	movx	a,@dptr
      000054 FE               [12]  702 	mov	r6,a
      000055 A3               [24]  703 	inc	dptr
      000056 E0               [24]  704 	movx	a,@dptr
      000057 FF               [12]  705 	mov	r7,a
      000058 8C 82            [24]  706 	mov	dpl,r4
      00005A 8D 83            [24]  707 	mov	dph,r5
      00005C 8E F0            [24]  708 	mov	b,r6
      00005E C0 07            [24]  709 	push	ar7
      000060 C0 06            [24]  710 	push	ar6
      000062 C0 05            [24]  711 	push	ar5
      000064 C0 04            [24]  712 	push	ar4
      000066 C0 03            [24]  713 	push	ar3
      000068 C0 02            [24]  714 	push	ar2
      00006A C0 01            [24]  715 	push	ar1
      00006C C0 00            [24]  716 	push	ar0
      00006E 12r00r00         [24]  717 	lcall	_sleepForMsec
      000071 D0 00            [24]  718 	pop	ar0
      000073 D0 01            [24]  719 	pop	ar1
      000075 D0 02            [24]  720 	pop	ar2
      000077 D0 03            [24]  721 	pop	ar3
      000079 D0 04            [24]  722 	pop	ar4
      00007B D0 05            [24]  723 	pop	ar5
      00007D D0 06            [24]  724 	pop	ar6
      00007F D0 07            [24]  725 	pop	ar7
                                    726 ;	board/zbs29_BW_uc/../uc8151.c:220: wdtOn();
      000081 12r00r00         [24]  727 	lcall	_wdtOn
                                    728 ;	board/zbs29_BW_uc/../uc8151.c:221: P2CHSTA &= 0xfd;
      000084 53 AC FD         [24]  729 	anl	_P2CHSTA,#0xfd
                                    730 ;	board/zbs29_BW_uc/../uc8151.c:222: P2INTEN &= 0xfd;
      000087 53 A9 FD         [24]  731 	anl	_P2INTEN,#0xfd
                                    732 ;	board/zbs29_BW_uc/../uc8151.c:224: P2FUNC = tmp_P2FUNC;
      00008A 90r00rA4         [24]  733 	mov	dptr,#_epdBusySleep_tmp_P2FUNC_65536_116
      00008D E0               [24]  734 	movx	a,@dptr
      00008E F5 AF            [12]  735 	mov	_P2FUNC,a
                                    736 ;	board/zbs29_BW_uc/../uc8151.c:225: P2DIR = tmp_P2DIR;
      000090 90r00rA5         [24]  737 	mov	dptr,#_epdBusySleep_tmp_P2DIR_65536_116
      000093 E0               [24]  738 	movx	a,@dptr
      000094 F5 BB            [12]  739 	mov	_P2DIR,a
                                    740 ;	board/zbs29_BW_uc/../uc8151.c:226: P2PULL = tmp_P2PULL;
      000096 90r00rA6         [24]  741 	mov	dptr,#_epdBusySleep_tmp_P2PULL_65536_116
      000099 E0               [24]  742 	movx	a,@dptr
      00009A F5 BE            [12]  743 	mov	_P2PULL,a
                                    744 ;	board/zbs29_BW_uc/../uc8151.c:227: P2LVLSEL = tmp_P2LVLSEL;
      00009C 90r00rA7         [24]  745 	mov	dptr,#_epdBusySleep_tmp_P2LVLSEL_65536_116
      00009F E0               [24]  746 	movx	a,@dptr
      0000A0 F5 A5            [12]  747 	mov	_P2LVLSEL,a
                                    748 ;	board/zbs29_BW_uc/../uc8151.c:228: eepromPrvDeselect();
      0000A2 00               [12]  749 	nop
      0000A3 00               [12]  750 	nop
      0000A4 00               [12]  751 	nop
                                    752 ;	assignBit
      0000A5 D2 91            [12]  753 	setb	_P1_1
      0000A7 00               [12]  754 	nop
      0000A8 00               [12]  755 	nop
      0000A9 00               [12]  756 	nop
                                    757 ;	board/zbs29_BW_uc/../uc8151.c:229: }
      0000AA D0 04            [24]  758 	pop	ar4
      0000AC D0 05            [24]  759 	pop	ar5
      0000AE D0 06            [24]  760 	pop	ar6
      0000B0 D0 07            [24]  761 	pop	ar7
      0000B2 22               [24]  762 	ret
                                    763 ;------------------------------------------------------------
                                    764 ;Allocation info for local variables in function 'epdBusyWait'
                                    765 ;------------------------------------------------------------
                                    766 ;sloc0                     Allocated with name '_epdBusyWait_sloc0_1_0'
                                    767 ;timeout                   Allocated with name '_epdBusyWait_timeout_65536_118'
                                    768 ;start                     Allocated with name '_epdBusyWait_start_65536_119'
                                    769 ;------------------------------------------------------------
                                    770 ;	board/zbs29_BW_uc/../uc8151.c:230: static void epdBusyWait(uint32_t timeout) {
                                    771 ;	-----------------------------------------
                                    772 ;	 function epdBusyWait
                                    773 ;	-----------------------------------------
      0000B3                        774 _epdBusyWait:
      0000B3 C0 07            [24]  775 	push	ar7
      0000B5 C0 06            [24]  776 	push	ar6
      0000B7 C0 05            [24]  777 	push	ar5
      0000B9 C0 04            [24]  778 	push	ar4
      0000BB C0 03            [24]  779 	push	ar3
      0000BD C0 02            [24]  780 	push	ar2
      0000BF C0 01            [24]  781 	push	ar1
      0000C1 C0 00            [24]  782 	push	ar0
      0000C3 AF 82            [24]  783 	mov	r7,dpl
      0000C5 AE 83            [24]  784 	mov	r6,dph
      0000C7 AD F0            [24]  785 	mov	r5,b
      0000C9 FC               [12]  786 	mov	r4,a
      0000CA 90r00rA8         [24]  787 	mov	dptr,#_epdBusyWait_timeout_65536_118
      0000CD EF               [12]  788 	mov	a,r7
      0000CE F0               [24]  789 	movx	@dptr,a
      0000CF EE               [12]  790 	mov	a,r6
      0000D0 A3               [24]  791 	inc	dptr
      0000D1 F0               [24]  792 	movx	@dptr,a
      0000D2 ED               [12]  793 	mov	a,r5
      0000D3 A3               [24]  794 	inc	dptr
      0000D4 F0               [24]  795 	movx	@dptr,a
      0000D5 EC               [12]  796 	mov	a,r4
      0000D6 A3               [24]  797 	inc	dptr
      0000D7 F0               [24]  798 	movx	@dptr,a
                                    799 ;	board/zbs29_BW_uc/../uc8151.c:231: uint32_t __xdata start = timerGet();
      0000D8 12r00r00         [24]  800 	lcall	_timerGet
      0000DB AC 82            [24]  801 	mov	r4,dpl
      0000DD AD 83            [24]  802 	mov	r5,dph
      0000DF AE F0            [24]  803 	mov	r6,b
      0000E1 FF               [12]  804 	mov	r7,a
                                    805 ;	board/zbs29_BW_uc/../uc8151.c:233: while (timerGet() - start < timeout) {
      0000E2 90r00rA8         [24]  806 	mov	dptr,#_epdBusyWait_timeout_65536_118
      0000E5 E0               [24]  807 	movx	a,@dptr
      0000E6 F5*00            [12]  808 	mov	_epdBusyWait_sloc0_1_0,a
      0000E8 A3               [24]  809 	inc	dptr
      0000E9 E0               [24]  810 	movx	a,@dptr
      0000EA F5*01            [12]  811 	mov	(_epdBusyWait_sloc0_1_0 + 1),a
      0000EC A3               [24]  812 	inc	dptr
      0000ED E0               [24]  813 	movx	a,@dptr
      0000EE F5*02            [12]  814 	mov	(_epdBusyWait_sloc0_1_0 + 2),a
      0000F0 A3               [24]  815 	inc	dptr
      0000F1 E0               [24]  816 	movx	a,@dptr
      0000F2 F5*03            [12]  817 	mov	(_epdBusyWait_sloc0_1_0 + 3),a
      0000F4                        818 00103$:
      0000F4 12r00r00         [24]  819 	lcall	_timerGet
      0000F7 A8 82            [24]  820 	mov	r0,dpl
      0000F9 A9 83            [24]  821 	mov	r1,dph
      0000FB AA F0            [24]  822 	mov	r2,b
      0000FD FB               [12]  823 	mov	r3,a
      0000FE E8               [12]  824 	mov	a,r0
      0000FF C3               [12]  825 	clr	c
      000100 9C               [12]  826 	subb	a,r4
      000101 F8               [12]  827 	mov	r0,a
      000102 E9               [12]  828 	mov	a,r1
      000103 9D               [12]  829 	subb	a,r5
      000104 F9               [12]  830 	mov	r1,a
      000105 EA               [12]  831 	mov	a,r2
      000106 9E               [12]  832 	subb	a,r6
      000107 FA               [12]  833 	mov	r2,a
      000108 EB               [12]  834 	mov	a,r3
      000109 9F               [12]  835 	subb	a,r7
      00010A FB               [12]  836 	mov	r3,a
      00010B C3               [12]  837 	clr	c
      00010C E8               [12]  838 	mov	a,r0
      00010D 95*00            [12]  839 	subb	a,_epdBusyWait_sloc0_1_0
      00010F E9               [12]  840 	mov	a,r1
      000110 95*01            [12]  841 	subb	a,(_epdBusyWait_sloc0_1_0 + 1)
      000112 EA               [12]  842 	mov	a,r2
      000113 95*02            [12]  843 	subb	a,(_epdBusyWait_sloc0_1_0 + 2)
      000115 EB               [12]  844 	mov	a,r3
      000116 95*03            [12]  845 	subb	a,(_epdBusyWait_sloc0_1_0 + 3)
      000118 50 05            [24]  846 	jnc	00107$
                                    847 ;	board/zbs29_BW_uc/../uc8151.c:234: if (P2_1)
      00011A 30 A1 D7         [24]  848 	jnb	_P2_1,00103$
                                    849 ;	board/zbs29_BW_uc/../uc8151.c:235: return;
                                    850 ;	board/zbs29_BW_uc/../uc8151.c:240: while (1)
      00011D 80 02            [24]  851 	sjmp	00109$
      00011F                        852 00107$:
      00011F 80 FE            [24]  853 	sjmp	00107$
      000121                        854 00109$:
                                    855 ;	board/zbs29_BW_uc/../uc8151.c:242: }
      000121 D0 00            [24]  856 	pop	ar0
      000123 D0 01            [24]  857 	pop	ar1
      000125 D0 02            [24]  858 	pop	ar2
      000127 D0 03            [24]  859 	pop	ar3
      000129 D0 04            [24]  860 	pop	ar4
      00012B D0 05            [24]  861 	pop	ar5
      00012D D0 06            [24]  862 	pop	ar6
      00012F D0 07            [24]  863 	pop	ar7
      000131 22               [24]  864 	ret
                                    865 ;------------------------------------------------------------
                                    866 ;Allocation info for local variables in function 'commandReadBegin'
                                    867 ;------------------------------------------------------------
                                    868 ;cmd                       Allocated with name '_commandReadBegin_cmd_65536_121'
                                    869 ;------------------------------------------------------------
                                    870 ;	board/zbs29_BW_uc/../uc8151.c:243: static void commandReadBegin(uint8_t cmd) {
                                    871 ;	-----------------------------------------
                                    872 ;	 function commandReadBegin
                                    873 ;	-----------------------------------------
      000132                        874 _commandReadBegin:
      000132 E5 82            [12]  875 	mov	a,dpl
      000134 90r00rAC         [24]  876 	mov	dptr,#_commandReadBegin_cmd_65536_121
      000137 F0               [24]  877 	movx	@dptr,a
                                    878 ;	board/zbs29_BW_uc/../uc8151.c:244: epdSelect();
                                    879 ;	assignBit
      000138 C2 97            [12]  880 	clr	_P1_7
                                    881 ;	board/zbs29_BW_uc/../uc8151.c:245: markCommand();
                                    882 ;	assignBit
      00013A C2 A2            [12]  883 	clr	_P2_2
                                    884 ;	board/zbs29_BW_uc/../uc8151.c:246: spiByte(cmd);  // dump LUT
      00013C 90r00rAC         [24]  885 	mov	dptr,#_commandReadBegin_cmd_65536_121
      00013F E0               [24]  886 	movx	a,@dptr
      000140 F5 82            [12]  887 	mov	dpl,a
      000142 12r00r00         [24]  888 	lcall	_spiByte
                                    889 ;	board/zbs29_BW_uc/../uc8151.c:248: P0DIR = (P0DIR & ~(1 << 0)) | (1 << 1);
      000145 74 FE            [12]  890 	mov	a,#0xfe
      000147 55 B9            [12]  891 	anl	a,_P0DIR
      000149 44 02            [12]  892 	orl	a,#0x02
      00014B F5 B9            [12]  893 	mov	_P0DIR,a
                                    894 ;	board/zbs29_BW_uc/../uc8151.c:249: P0 &= ~(1 << 0);
      00014D 53 80 FE         [24]  895 	anl	_P0,#0xfe
                                    896 ;	board/zbs29_BW_uc/../uc8151.c:250: P0FUNC &= ~((1 << 0) | (1 << 1));
      000150 53 AD FC         [24]  897 	anl	_P0FUNC,#0xfc
                                    898 ;	board/zbs29_BW_uc/../uc8151.c:251: P2_2 = 1;
                                    899 ;	assignBit
      000153 D2 A2            [12]  900 	setb	_P2_2
                                    901 ;	board/zbs29_BW_uc/../uc8151.c:252: }
      000155 22               [24]  902 	ret
                                    903 ;------------------------------------------------------------
                                    904 ;Allocation info for local variables in function 'commandReadEnd'
                                    905 ;------------------------------------------------------------
                                    906 ;	board/zbs29_BW_uc/../uc8151.c:253: static void commandReadEnd() {
                                    907 ;	-----------------------------------------
                                    908 ;	 function commandReadEnd
                                    909 ;	-----------------------------------------
      000156                        910 _commandReadEnd:
                                    911 ;	board/zbs29_BW_uc/../uc8151.c:255: P0FUNC |= (1 << 0) | (1 << 1);
      000156 43 AD 03         [24]  912 	orl	_P0FUNC,#0x03
                                    913 ;	board/zbs29_BW_uc/../uc8151.c:256: epdDeselect();
                                    914 ;	assignBit
      000159 D2 97            [12]  915 	setb	_P1_7
                                    916 ;	board/zbs29_BW_uc/../uc8151.c:257: }
      00015B 22               [24]  917 	ret
                                    918 ;------------------------------------------------------------
                                    919 ;Allocation info for local variables in function 'epdReadByte'
                                    920 ;------------------------------------------------------------
                                    921 ;val                       Allocated with name '_epdReadByte_val_65536_127'
                                    922 ;i                         Allocated with name '_epdReadByte_i_65536_127'
                                    923 ;------------------------------------------------------------
                                    924 ;	board/zbs29_BW_uc/../uc8151.c:259: static uint8_t epdReadByte() {
                                    925 ;	-----------------------------------------
                                    926 ;	 function epdReadByte
                                    927 ;	-----------------------------------------
      00015C                        928 _epdReadByte:
      00015C C0 07            [24]  929 	push	ar7
      00015E C0 06            [24]  930 	push	ar6
                                    931 ;	board/zbs29_BW_uc/../uc8151.c:260: uint8_t val = 0, i;
      000160 90r00rAD         [24]  932 	mov	dptr,#_epdReadByte_val_65536_127
      000163 E4               [12]  933 	clr	a
      000164 F0               [24]  934 	movx	@dptr,a
                                    935 ;	board/zbs29_BW_uc/../uc8151.c:262: for (i = 0; i < 8; i++) {
      000165 7F 00            [12]  936 	mov	r7,#0x00
      000167                        937 00104$:
                                    938 ;	board/zbs29_BW_uc/../uc8151.c:263: P0_0 = 1;
                                    939 ;	assignBit
      000167 D2 80            [12]  940 	setb	_P0_0
                                    941 ;	board/zbs29_BW_uc/../uc8151.c:264: __asm__("nop\nnop\nnop\nnop\nnop\nnop\n");
      000169 00               [12]  942 	nop
      00016A 00               [12]  943 	nop
      00016B 00               [12]  944 	nop
      00016C 00               [12]  945 	nop
      00016D 00               [12]  946 	nop
      00016E 00               [12]  947 	nop
                                    948 ;	board/zbs29_BW_uc/../uc8151.c:265: val <<= 1;
      00016F 90r00rAD         [24]  949 	mov	dptr,#_epdReadByte_val_65536_127
      000172 E0               [24]  950 	movx	a,@dptr
      000173 25 E0            [12]  951 	add	a,acc
      000175 FE               [12]  952 	mov	r6,a
      000176 F0               [24]  953 	movx	@dptr,a
                                    954 ;	board/zbs29_BW_uc/../uc8151.c:266: if (P0_1)
      000177 30 81 07         [24]  955 	jnb	_P0_1,00102$
                                    956 ;	board/zbs29_BW_uc/../uc8151.c:267: val++;
      00017A 90r00rAD         [24]  957 	mov	dptr,#_epdReadByte_val_65536_127
      00017D E0               [24]  958 	movx	a,@dptr
      00017E 24 01            [12]  959 	add	a,#0x01
      000180 F0               [24]  960 	movx	@dptr,a
      000181                        961 00102$:
                                    962 ;	board/zbs29_BW_uc/../uc8151.c:268: P0_0 = 0;
                                    963 ;	assignBit
      000181 C2 80            [12]  964 	clr	_P0_0
                                    965 ;	board/zbs29_BW_uc/../uc8151.c:269: __asm__("nop\nnop\nnop\nnop\nnop\nnop\n");
      000183 00               [12]  966 	nop
      000184 00               [12]  967 	nop
      000185 00               [12]  968 	nop
      000186 00               [12]  969 	nop
      000187 00               [12]  970 	nop
      000188 00               [12]  971 	nop
                                    972 ;	board/zbs29_BW_uc/../uc8151.c:262: for (i = 0; i < 8; i++) {
      000189 0F               [12]  973 	inc	r7
      00018A BF 08 00         [24]  974 	cjne	r7,#0x08,00122$
      00018D                        975 00122$:
      00018D 40 D8            [24]  976 	jc	00104$
                                    977 ;	board/zbs29_BW_uc/../uc8151.c:272: return val;
      00018F 90r00rAD         [24]  978 	mov	dptr,#_epdReadByte_val_65536_127
      000192 E0               [24]  979 	movx	a,@dptr
      000193 F5 82            [12]  980 	mov	dpl,a
                                    981 ;	board/zbs29_BW_uc/../uc8151.c:273: }
      000195 D0 06            [24]  982 	pop	ar6
      000197 D0 07            [24]  983 	pop	ar7
      000199 22               [24]  984 	ret
                                    985 ;------------------------------------------------------------
                                    986 ;Allocation info for local variables in function 'shortCommand'
                                    987 ;------------------------------------------------------------
                                    988 ;cmd                       Allocated with name '_shortCommand_cmd_65536_130'
                                    989 ;------------------------------------------------------------
                                    990 ;	board/zbs29_BW_uc/../uc8151.c:274: static void shortCommand(uint8_t cmd) {
                                    991 ;	-----------------------------------------
                                    992 ;	 function shortCommand
                                    993 ;	-----------------------------------------
      00019A                        994 _shortCommand:
      00019A E5 82            [12]  995 	mov	a,dpl
      00019C 90r00rAE         [24]  996 	mov	dptr,#_shortCommand_cmd_65536_130
      00019F F0               [24]  997 	movx	@dptr,a
                                    998 ;	board/zbs29_BW_uc/../uc8151.c:275: epdSelect();
                                    999 ;	assignBit
      0001A0 C2 97            [12] 1000 	clr	_P1_7
                                   1001 ;	board/zbs29_BW_uc/../uc8151.c:276: markCommand();
                                   1002 ;	assignBit
      0001A2 C2 A2            [12] 1003 	clr	_P2_2
                                   1004 ;	board/zbs29_BW_uc/../uc8151.c:277: spiTXByte(cmd);
      0001A4 90r00rAE         [24] 1005 	mov	dptr,#_shortCommand_cmd_65536_130
      0001A7 E0               [24] 1006 	movx	a,@dptr
      0001A8 F5 82            [12] 1007 	mov	dpl,a
      0001AA 12r00r00         [24] 1008 	lcall	_spiTXByte
                                   1009 ;	board/zbs29_BW_uc/../uc8151.c:278: epdDeselect();
                                   1010 ;	assignBit
      0001AD D2 97            [12] 1011 	setb	_P1_7
                                   1012 ;	board/zbs29_BW_uc/../uc8151.c:279: }
      0001AF 22               [24] 1013 	ret
                                   1014 ;------------------------------------------------------------
                                   1015 ;Allocation info for local variables in function 'shortCommand1'
                                   1016 ;------------------------------------------------------------
                                   1017 ;arg                       Allocated with name '_shortCommand1_PARM_2'
                                   1018 ;cmd                       Allocated with name '_shortCommand1_cmd_65536_135'
                                   1019 ;------------------------------------------------------------
                                   1020 ;	board/zbs29_BW_uc/../uc8151.c:280: static void shortCommand1(uint8_t cmd, uint8_t arg) {
                                   1021 ;	-----------------------------------------
                                   1022 ;	 function shortCommand1
                                   1023 ;	-----------------------------------------
      0001B0                       1024 _shortCommand1:
      0001B0 E5 82            [12] 1025 	mov	a,dpl
      0001B2 90r00rB0         [24] 1026 	mov	dptr,#_shortCommand1_cmd_65536_135
      0001B5 F0               [24] 1027 	movx	@dptr,a
                                   1028 ;	board/zbs29_BW_uc/../uc8151.c:281: epdSelect();
                                   1029 ;	assignBit
      0001B6 C2 97            [12] 1030 	clr	_P1_7
                                   1031 ;	board/zbs29_BW_uc/../uc8151.c:282: markCommand();
                                   1032 ;	assignBit
      0001B8 C2 A2            [12] 1033 	clr	_P2_2
                                   1034 ;	board/zbs29_BW_uc/../uc8151.c:283: spiTXByte(cmd);
      0001BA 90r00rB0         [24] 1035 	mov	dptr,#_shortCommand1_cmd_65536_135
      0001BD E0               [24] 1036 	movx	a,@dptr
      0001BE F5 82            [12] 1037 	mov	dpl,a
      0001C0 12r00r00         [24] 1038 	lcall	_spiTXByte
                                   1039 ;	board/zbs29_BW_uc/../uc8151.c:284: markData();
                                   1040 ;	assignBit
      0001C3 D2 A2            [12] 1041 	setb	_P2_2
                                   1042 ;	board/zbs29_BW_uc/../uc8151.c:285: spiTXByte(arg);
      0001C5 90r00rAF         [24] 1043 	mov	dptr,#_shortCommand1_PARM_2
      0001C8 E0               [24] 1044 	movx	a,@dptr
      0001C9 F5 82            [12] 1045 	mov	dpl,a
      0001CB 12r00r00         [24] 1046 	lcall	_spiTXByte
                                   1047 ;	board/zbs29_BW_uc/../uc8151.c:286: epdDeselect();
                                   1048 ;	assignBit
      0001CE D2 97            [12] 1049 	setb	_P1_7
                                   1050 ;	board/zbs29_BW_uc/../uc8151.c:287: }
      0001D0 22               [24] 1051 	ret
                                   1052 ;------------------------------------------------------------
                                   1053 ;Allocation info for local variables in function 'shortCommand2'
                                   1054 ;------------------------------------------------------------
                                   1055 ;arg1                      Allocated with name '_shortCommand2_PARM_2'
                                   1056 ;arg2                      Allocated with name '_shortCommand2_PARM_3'
                                   1057 ;cmd                       Allocated with name '_shortCommand2_cmd_65536_141'
                                   1058 ;------------------------------------------------------------
                                   1059 ;	board/zbs29_BW_uc/../uc8151.c:288: static void shortCommand2(uint8_t cmd, uint8_t arg1, uint8_t arg2) {
                                   1060 ;	-----------------------------------------
                                   1061 ;	 function shortCommand2
                                   1062 ;	-----------------------------------------
      0001D1                       1063 _shortCommand2:
      0001D1 E5 82            [12] 1064 	mov	a,dpl
      0001D3 90r00rB3         [24] 1065 	mov	dptr,#_shortCommand2_cmd_65536_141
      0001D6 F0               [24] 1066 	movx	@dptr,a
                                   1067 ;	board/zbs29_BW_uc/../uc8151.c:289: epdSelect();
                                   1068 ;	assignBit
      0001D7 C2 97            [12] 1069 	clr	_P1_7
                                   1070 ;	board/zbs29_BW_uc/../uc8151.c:290: markCommand();
                                   1071 ;	assignBit
      0001D9 C2 A2            [12] 1072 	clr	_P2_2
                                   1073 ;	board/zbs29_BW_uc/../uc8151.c:291: spiTXByte(cmd);
      0001DB 90r00rB3         [24] 1074 	mov	dptr,#_shortCommand2_cmd_65536_141
      0001DE E0               [24] 1075 	movx	a,@dptr
      0001DF F5 82            [12] 1076 	mov	dpl,a
      0001E1 12r00r00         [24] 1077 	lcall	_spiTXByte
                                   1078 ;	board/zbs29_BW_uc/../uc8151.c:292: markData();
                                   1079 ;	assignBit
      0001E4 D2 A2            [12] 1080 	setb	_P2_2
                                   1081 ;	board/zbs29_BW_uc/../uc8151.c:293: spiTXByte(arg1);
      0001E6 90r00rB1         [24] 1082 	mov	dptr,#_shortCommand2_PARM_2
      0001E9 E0               [24] 1083 	movx	a,@dptr
      0001EA F5 82            [12] 1084 	mov	dpl,a
      0001EC 12r00r00         [24] 1085 	lcall	_spiTXByte
                                   1086 ;	board/zbs29_BW_uc/../uc8151.c:294: spiTXByte(arg2);
      0001EF 90r00rB2         [24] 1087 	mov	dptr,#_shortCommand2_PARM_3
      0001F2 E0               [24] 1088 	movx	a,@dptr
      0001F3 F5 82            [12] 1089 	mov	dpl,a
      0001F5 12r00r00         [24] 1090 	lcall	_spiTXByte
                                   1091 ;	board/zbs29_BW_uc/../uc8151.c:295: epdDeselect();
                                   1092 ;	assignBit
      0001F8 D2 97            [12] 1093 	setb	_P1_7
                                   1094 ;	board/zbs29_BW_uc/../uc8151.c:296: }
      0001FA 22               [24] 1095 	ret
                                   1096 ;------------------------------------------------------------
                                   1097 ;Allocation info for local variables in function 'commandBegin'
                                   1098 ;------------------------------------------------------------
                                   1099 ;cmd                       Allocated with name '_commandBegin_cmd_65536_147'
                                   1100 ;------------------------------------------------------------
                                   1101 ;	board/zbs29_BW_uc/../uc8151.c:297: static void commandBegin(uint8_t cmd) {
                                   1102 ;	-----------------------------------------
                                   1103 ;	 function commandBegin
                                   1104 ;	-----------------------------------------
      0001FB                       1105 _commandBegin:
      0001FB E5 82            [12] 1106 	mov	a,dpl
      0001FD 90r00rB4         [24] 1107 	mov	dptr,#_commandBegin_cmd_65536_147
      000200 F0               [24] 1108 	movx	@dptr,a
                                   1109 ;	board/zbs29_BW_uc/../uc8151.c:298: epdSelect();
                                   1110 ;	assignBit
      000201 C2 97            [12] 1111 	clr	_P1_7
                                   1112 ;	board/zbs29_BW_uc/../uc8151.c:299: markCommand();
                                   1113 ;	assignBit
      000203 C2 A2            [12] 1114 	clr	_P2_2
                                   1115 ;	board/zbs29_BW_uc/../uc8151.c:300: spiTXByte(cmd);
      000205 90r00rB4         [24] 1116 	mov	dptr,#_commandBegin_cmd_65536_147
      000208 E0               [24] 1117 	movx	a,@dptr
      000209 F5 82            [12] 1118 	mov	dpl,a
      00020B 12r00r00         [24] 1119 	lcall	_spiTXByte
                                   1120 ;	board/zbs29_BW_uc/../uc8151.c:301: markData();
                                   1121 ;	assignBit
      00020E D2 A2            [12] 1122 	setb	_P2_2
                                   1123 ;	board/zbs29_BW_uc/../uc8151.c:302: }
      000210 22               [24] 1124 	ret
                                   1125 ;------------------------------------------------------------
                                   1126 ;Allocation info for local variables in function 'epdReset'
                                   1127 ;------------------------------------------------------------
                                   1128 ;	board/zbs29_BW_uc/../uc8151.c:303: static void epdReset() {
                                   1129 ;	-----------------------------------------
                                   1130 ;	 function epdReset
                                   1131 ;	-----------------------------------------
      000211                       1132 _epdReset:
                                   1133 ;	board/zbs29_BW_uc/../uc8151.c:304: timerDelay(TIMER_TICKS_PER_SECOND / 1000);
      000211 90 05 35         [24] 1134 	mov	dptr,#0x0535
      000214 E4               [12] 1135 	clr	a
      000215 F5 F0            [12] 1136 	mov	b,a
      000217 12r00r00         [24] 1137 	lcall	_timerDelay
                                   1138 ;	board/zbs29_BW_uc/../uc8151.c:305: P2_0 = 0;
                                   1139 ;	assignBit
      00021A C2 A0            [12] 1140 	clr	_P2_0
                                   1141 ;	board/zbs29_BW_uc/../uc8151.c:306: timerDelay(TIMER_TICKS_PER_SECOND / 1000);
      00021C 90 05 35         [24] 1142 	mov	dptr,#0x0535
      00021F E4               [12] 1143 	clr	a
      000220 F5 F0            [12] 1144 	mov	b,a
      000222 12r00r00         [24] 1145 	lcall	_timerDelay
                                   1146 ;	board/zbs29_BW_uc/../uc8151.c:307: P2_0 = 1;
                                   1147 ;	assignBit
      000225 D2 A0            [12] 1148 	setb	_P2_0
                                   1149 ;	board/zbs29_BW_uc/../uc8151.c:308: timerDelay(TIMER_TICKS_PER_SECOND / 1000);
      000227 90 05 35         [24] 1150 	mov	dptr,#0x0535
      00022A E4               [12] 1151 	clr	a
      00022B F5 F0            [12] 1152 	mov	b,a
                                   1153 ;	board/zbs29_BW_uc/../uc8151.c:309: }
      00022D 02r00r00         [24] 1154 	ljmp	_timerDelay
                                   1155 ;------------------------------------------------------------
                                   1156 ;Allocation info for local variables in function 'epdConfigGPIO'
                                   1157 ;------------------------------------------------------------
                                   1158 ;setup                     Allocated with name '_epdConfigGPIO_setup_65536_153'
                                   1159 ;------------------------------------------------------------
                                   1160 ;	board/zbs29_BW_uc/../uc8151.c:310: void epdConfigGPIO(bool setup) {
                                   1161 ;	-----------------------------------------
                                   1162 ;	 function epdConfigGPIO
                                   1163 ;	-----------------------------------------
      000230                       1164 _epdConfigGPIO:
      000230 E5 82            [12] 1165 	mov	a,dpl
      000232 90r00rB5         [24] 1166 	mov	dptr,#_epdConfigGPIO_setup_65536_153
      000235 F0               [24] 1167 	movx	@dptr,a
                                   1168 ;	board/zbs29_BW_uc/../uc8151.c:320: if (epdGPIOActive == setup) return;
      000236 90r00r0A         [24] 1169 	mov	dptr,#_epdGPIOActive
      000239 E0               [24] 1170 	movx	a,@dptr
      00023A FF               [12] 1171 	mov	r7,a
      00023B 90r00rB5         [24] 1172 	mov	dptr,#_epdConfigGPIO_setup_65536_153
      00023E E0               [24] 1173 	movx	a,@dptr
      00023F FE               [12] 1174 	mov	r6,a
      000240 EF               [12] 1175 	mov	a,r7
      000241 B5 06 01         [24] 1176 	cjne	a,ar6,00102$
      000244 22               [24] 1177 	ret
      000245                       1178 00102$:
                                   1179 ;	board/zbs29_BW_uc/../uc8151.c:321: if (setup) {
      000245 EE               [12] 1180 	mov	a,r6
      000246 60 0F            [24] 1181 	jz	00104$
                                   1182 ;	board/zbs29_BW_uc/../uc8151.c:322: P2DIR |= (1 << 1);                // busy as input
      000248 43 BB 02         [24] 1183 	orl	_P2DIR,#0x02
                                   1184 ;	board/zbs29_BW_uc/../uc8151.c:323: P2DIR &= ~((1 << 2) | (1 << 0));  // D/C and Reset as output
      00024B 53 BB FA         [24] 1185 	anl	_P2DIR,#0xfa
                                   1186 ;	board/zbs29_BW_uc/../uc8151.c:324: P1DIR &= ~((1 << 7) | (1 << 2));  // select and bs1 as output
      00024E 53 BA 7B         [24] 1187 	anl	_P1DIR,#0x7b
                                   1188 ;	board/zbs29_BW_uc/../uc8151.c:325: P1_2 = 0;                         // select 4-wire SPI / BS1 = low
                                   1189 ;	assignBit
      000251 C2 92            [12] 1190 	clr	_P1_2
                                   1191 ;	board/zbs29_BW_uc/../uc8151.c:326: P1_7 = 1;                         // deselect EPD
                                   1192 ;	assignBit
      000253 D2 97            [12] 1193 	setb	_P1_7
      000255 80 0C            [24] 1194 	sjmp	00105$
      000257                       1195 00104$:
                                   1196 ;	board/zbs29_BW_uc/../uc8151.c:328: P2DIR |= ((1 << 2) | (1 << 0));  // DC and Reset as input
      000257 43 BB 05         [24] 1197 	orl	_P2DIR,#0x05
                                   1198 ;	board/zbs29_BW_uc/../uc8151.c:329: P2 &= ~((1 << 2) | (1 << 0));
      00025A 53 A0 FA         [24] 1199 	anl	_P2,#0xfa
                                   1200 ;	board/zbs29_BW_uc/../uc8151.c:330: P1DIR |= ((1 << 7) | (1 << 2));  // Select and BS1 as input
      00025D 43 BA 84         [24] 1201 	orl	_P1DIR,#0x84
                                   1202 ;	board/zbs29_BW_uc/../uc8151.c:331: P2 &= ~((1 << 7));
      000260 53 A0 7F         [24] 1203 	anl	_P2,#0x7f
      000263                       1204 00105$:
                                   1205 ;	board/zbs29_BW_uc/../uc8151.c:333: epdGPIOActive = setup;
      000263 90r00rB5         [24] 1206 	mov	dptr,#_epdConfigGPIO_setup_65536_153
      000266 E0               [24] 1207 	movx	a,@dptr
      000267 90r00r0A         [24] 1208 	mov	dptr,#_epdGPIOActive
      00026A F0               [24] 1209 	movx	@dptr,a
                                   1210 ;	board/zbs29_BW_uc/../uc8151.c:334: }
      00026B 22               [24] 1211 	ret
                                   1212 ;------------------------------------------------------------
                                   1213 ;Allocation info for local variables in function 'epdEnterSleep'
                                   1214 ;------------------------------------------------------------
                                   1215 ;	board/zbs29_BW_uc/../uc8151.c:335: void epdEnterSleep() {
                                   1216 ;	-----------------------------------------
                                   1217 ;	 function epdEnterSleep
                                   1218 ;	-----------------------------------------
      00026C                       1219 _epdEnterSleep:
                                   1220 ;	board/zbs29_BW_uc/../uc8151.c:336: timerDelay(20 * TIMER_TICKS_PER_MS);
      00026C 90 68 24         [24] 1221 	mov	dptr,#0x6824
      00026F E4               [12] 1222 	clr	a
      000270 F5 F0            [12] 1223 	mov	b,a
      000272 12r00r00         [24] 1224 	lcall	_timerDelay
                                   1225 ;	board/zbs29_BW_uc/../uc8151.c:337: epdReset();
      000275 12r02r11         [24] 1226 	lcall	_epdReset
                                   1227 ;	board/zbs29_BW_uc/../uc8151.c:338: timerDelay(20 * TIMER_TICKS_PER_MS);
      000278 90 68 24         [24] 1228 	mov	dptr,#0x6824
      00027B E4               [12] 1229 	clr	a
      00027C F5 F0            [12] 1230 	mov	b,a
      00027E 12r00r00         [24] 1231 	lcall	_timerDelay
                                   1232 ;	board/zbs29_BW_uc/../uc8151.c:339: shortCommand1(CMD_VCOM_INTERVAL, 0x17);
      000281 90r00rAF         [24] 1233 	mov	dptr,#_shortCommand1_PARM_2
      000284 74 17            [12] 1234 	mov	a,#0x17
      000286 F0               [24] 1235 	movx	@dptr,a
      000287 75 82 50         [24] 1236 	mov	dpl,#0x50
      00028A 12r01rB0         [24] 1237 	lcall	_shortCommand1
                                   1238 ;	board/zbs29_BW_uc/../uc8151.c:340: shortCommand1(CMD_VCOM_DC_SETTING, 0x00);
      00028D 90r00rAF         [24] 1239 	mov	dptr,#_shortCommand1_PARM_2
      000290 E4               [12] 1240 	clr	a
      000291 F0               [24] 1241 	movx	@dptr,a
      000292 75 82 82         [24] 1242 	mov	dpl,#0x82
      000295 12r01rB0         [24] 1243 	lcall	_shortCommand1
                                   1244 ;	board/zbs29_BW_uc/../uc8151.c:343: shortCommand1(CMD_DEEP_SLEEP, 0xA5);
      000298 90r00rAF         [24] 1245 	mov	dptr,#_shortCommand1_PARM_2
      00029B 74 A5            [12] 1246 	mov	a,#0xa5
      00029D F0               [24] 1247 	movx	@dptr,a
      00029E 75 82 07         [24] 1248 	mov	dpl,#0x07
      0002A1 12r01rB0         [24] 1249 	lcall	_shortCommand1
                                   1250 ;	board/zbs29_BW_uc/../uc8151.c:344: isInited = false;
      0002A4 90r00r09         [24] 1251 	mov	dptr,#_isInited
      0002A7 E4               [12] 1252 	clr	a
      0002A8 F0               [24] 1253 	movx	@dptr,a
                                   1254 ;	board/zbs29_BW_uc/../uc8151.c:345: }
      0002A9 22               [24] 1255 	ret
                                   1256 ;------------------------------------------------------------
                                   1257 ;Allocation info for local variables in function 'epdDrawDirection'
                                   1258 ;------------------------------------------------------------
                                   1259 ;direction                 Allocated with name '_epdDrawDirection_direction_65536_158'
                                   1260 ;psr_setting               Allocated with name '_epdDrawDirection_psr_setting_65537_160'
                                   1261 ;------------------------------------------------------------
                                   1262 ;	board/zbs29_BW_uc/../uc8151.c:347: static void epdDrawDirection(bool direction) {
                                   1263 ;	-----------------------------------------
                                   1264 ;	 function epdDrawDirection
                                   1265 ;	-----------------------------------------
      0002AA                       1266 _epdDrawDirection:
      0002AA E5 82            [12] 1267 	mov	a,dpl
      0002AC 90r00rB6         [24] 1268 	mov	dptr,#_epdDrawDirection_direction_65536_158
                                   1269 ;	board/zbs29_BW_uc/../uc8151.c:348: if (direction == drawDirection) return;
      0002AF F0               [24] 1270 	movx	@dptr,a ; Peephole dmitrygr.0005 - SRSLY, WTF?
      0002B0 FF               [12] 1271 	mov	r7,a
      0002B1 90r00r08         [24] 1272 	mov	dptr,#_drawDirection
      0002B4 E0               [24] 1273 	movx	a,@dptr
      0002B5 FE               [12] 1274 	mov	r6,a
      0002B6 EF               [12] 1275 	mov	a,r7
      0002B7 B5 06 01         [24] 1276 	cjne	a,ar6,00102$
      0002BA 22               [24] 1277 	ret
      0002BB                       1278 00102$:
                                   1279 ;	board/zbs29_BW_uc/../uc8151.c:350: drawDirection = direction;
      0002BB 90r00r08         [24] 1280 	mov	dptr,#_drawDirection
      0002BE EF               [12] 1281 	mov	a,r7
      0002BF F0               [24] 1282 	movx	@dptr,a
                                   1283 ;	board/zbs29_BW_uc/../uc8151.c:361: if (drawDirection) {
      0002C0 EF               [12] 1284 	mov	a,r7
      0002C1 60 08            [24] 1285 	jz	00104$
                                   1286 ;	board/zbs29_BW_uc/../uc8151.c:362: psr_setting |= SCAN_DOWN;
      0002C3 90r00rB7         [24] 1287 	mov	dptr,#_epdDrawDirection_psr_setting_65537_160
      0002C6 74 97            [12] 1288 	mov	a,#0x97
      0002C8 F0               [24] 1289 	movx	@dptr,a
      0002C9 80 06            [24] 1290 	sjmp	00105$
      0002CB                       1291 00104$:
                                   1292 ;	board/zbs29_BW_uc/../uc8151.c:364: psr_setting |= SCAN_UP;
      0002CB 90r00rB7         [24] 1293 	mov	dptr,#_epdDrawDirection_psr_setting_65537_160
      0002CE 74 9F            [12] 1294 	mov	a,#0x9f
      0002D0 F0               [24] 1295 	movx	@dptr,a
      0002D1                       1296 00105$:
                                   1297 ;	board/zbs29_BW_uc/../uc8151.c:366: shortCommand2(CMD_PANEL_SETTING, psr_setting, 0b00001011);
      0002D1 90r00rB7         [24] 1298 	mov	dptr,#_epdDrawDirection_psr_setting_65537_160
      0002D4 E0               [24] 1299 	movx	a,@dptr
      0002D5 90r00rB1         [24] 1300 	mov	dptr,#_shortCommand2_PARM_2
      0002D8 F0               [24] 1301 	movx	@dptr,a
      0002D9 90r00rB2         [24] 1302 	mov	dptr,#_shortCommand2_PARM_3
      0002DC 74 0B            [12] 1303 	mov	a,#0x0b
      0002DE F0               [24] 1304 	movx	@dptr,a
      0002DF 75 82 00         [24] 1305 	mov	dpl,#0x00
                                   1306 ;	board/zbs29_BW_uc/../uc8151.c:369: }
      0002E2 02r01rD1         [24] 1307 	ljmp	_shortCommand2
                                   1308 ;------------------------------------------------------------
                                   1309 ;Allocation info for local variables in function 'epdSetup'
                                   1310 ;------------------------------------------------------------
                                   1311 ;	board/zbs29_BW_uc/../uc8151.c:371: void epdSetup() {
                                   1312 ;	-----------------------------------------
                                   1313 ;	 function epdSetup
                                   1314 ;	-----------------------------------------
      0002E5                       1315 _epdSetup:
                                   1316 ;	board/zbs29_BW_uc/../uc8151.c:372: epdReset();
      0002E5 12r02r11         [24] 1317 	lcall	_epdReset
                                   1318 ;	board/zbs29_BW_uc/../uc8151.c:374: drawDirection = false;
      0002E8 90r00r08         [24] 1319 	mov	dptr,#_drawDirection
      0002EB E4               [12] 1320 	clr	a
      0002EC F0               [24] 1321 	movx	@dptr,a
                                   1322 ;	board/zbs29_BW_uc/../uc8151.c:375: epdDrawDirection(true);
      0002ED 75 82 01         [24] 1323 	mov	dpl,#0x01
      0002F0 12r02rAA         [24] 1324 	lcall	_epdDrawDirection
                                   1325 ;	board/zbs29_BW_uc/../uc8151.c:385: commandBegin(CMD_POWER_SETTING);
      0002F3 75 82 01         [24] 1326 	mov	dpl,#0x01
      0002F6 12r01rFB         [24] 1327 	lcall	_commandBegin
                                   1328 ;	board/zbs29_BW_uc/../uc8151.c:386: epdSend(VDS_INTERNAL | VDG_INTERNAL);
      0002F9 75 82 03         [24] 1329 	mov	dpl,#0x03
      0002FC 12r00r00         [24] 1330 	lcall	_spiTXByte
                                   1331 ;	board/zbs29_BW_uc/../uc8151.c:387: epdSend(VCOM_VD | VGHL_15V);
      0002FF 75 82 01         [24] 1332 	mov	dpl,#0x01
      000302 12r00r00         [24] 1333 	lcall	_spiTXByte
                                   1334 ;	board/zbs29_BW_uc/../uc8151.c:388: commandEnd();
                                   1335 ;	assignBit
      000305 D2 97            [12] 1336 	setb	_P1_7
                                   1337 ;	board/zbs29_BW_uc/../uc8151.c:392: commandBegin(CMD_BOOSTER_SOFT_START);
      000307 75 82 06         [24] 1338 	mov	dpl,#0x06
      00030A 12r01rFB         [24] 1339 	lcall	_commandBegin
                                   1340 ;	board/zbs29_BW_uc/../uc8151.c:393: epdSend(START_10MS | STRENGTH_3 | OFF_6_58US);
      00030D 75 82 17         [24] 1341 	mov	dpl,#0x17
      000310 12r00r00         [24] 1342 	lcall	_spiTXByte
                                   1343 ;	board/zbs29_BW_uc/../uc8151.c:394: epdSend(START_10MS | STRENGTH_3 | OFF_6_58US);
      000313 75 82 17         [24] 1344 	mov	dpl,#0x17
      000316 12r00r00         [24] 1345 	lcall	_spiTXByte
                                   1346 ;	board/zbs29_BW_uc/../uc8151.c:395: epdSend(START_10MS | STRENGTH_3 | OFF_6_58US);
      000319 75 82 17         [24] 1347 	mov	dpl,#0x17
      00031C 12r00r00         [24] 1348 	lcall	_spiTXByte
                                   1349 ;	board/zbs29_BW_uc/../uc8151.c:396: commandEnd();
                                   1350 ;	assignBit
      00031F D2 97            [12] 1351 	setb	_P1_7
                                   1352 ;	board/zbs29_BW_uc/../uc8151.c:398: shortCommand(CMD_POWER_ON);
      000321 75 82 04         [24] 1353 	mov	dpl,#0x04
      000324 12r01r9A         [24] 1354 	lcall	_shortCommand
                                   1355 ;	board/zbs29_BW_uc/../uc8151.c:399: epdWaitRdy();
      000327 12r05r30         [24] 1356 	lcall	_epdWaitRdy
                                   1357 ;	board/zbs29_BW_uc/../uc8151.c:402: commandBegin(CMD_RESOLUTION_SETING);
      00032A 75 82 61         [24] 1358 	mov	dpl,#0x61
      00032D 12r01rFB         [24] 1359 	lcall	_commandBegin
                                   1360 ;	board/zbs29_BW_uc/../uc8151.c:403: epdSend(SCREEN_WIDTH);
      000330 75 82 80         [24] 1361 	mov	dpl,#0x80
      000333 12r00r00         [24] 1362 	lcall	_spiTXByte
                                   1363 ;	board/zbs29_BW_uc/../uc8151.c:404: epdSend(SCREEN_HEIGHT >> 8);
      000336 75 82 01         [24] 1364 	mov	dpl,#0x01
      000339 12r00r00         [24] 1365 	lcall	_spiTXByte
                                   1366 ;	board/zbs29_BW_uc/../uc8151.c:405: epdSend(SCREEN_HEIGHT & 0xFF);
      00033C 75 82 28         [24] 1367 	mov	dpl,#0x28
      00033F 12r00r00         [24] 1368 	lcall	_spiTXByte
                                   1369 ;	board/zbs29_BW_uc/../uc8151.c:406: commandEnd();
                                   1370 ;	assignBit
      000342 D2 97            [12] 1371 	setb	_P1_7
                                   1372 ;	board/zbs29_BW_uc/../uc8151.c:407: shortCommand1(CMD_POWER_OFF_SEQUENCE, FRAMES_1);
      000344 90r00rAF         [24] 1373 	mov	dptr,#_shortCommand1_PARM_2
      000347 E4               [12] 1374 	clr	a
      000348 F0               [24] 1375 	movx	@dptr,a
      000349 75 82 03         [24] 1376 	mov	dpl,#0x03
      00034C 12r01rB0         [24] 1377 	lcall	_shortCommand1
                                   1378 ;	board/zbs29_BW_uc/../uc8151.c:408: shortCommand1(CMD_TEMPERATURE_SELECT, TEMP_INTERNAL | OFFSET_0);
      00034F 90r00rAF         [24] 1379 	mov	dptr,#_shortCommand1_PARM_2
      000352 E4               [12] 1380 	clr	a
      000353 F0               [24] 1381 	movx	@dptr,a
      000354 75 82 41         [24] 1382 	mov	dpl,#0x41
      000357 12r01rB0         [24] 1383 	lcall	_shortCommand1
                                   1384 ;	board/zbs29_BW_uc/../uc8151.c:409: shortCommand1(CMD_TCON_SETTING, 0x22);
      00035A 90r00rAF         [24] 1385 	mov	dptr,#_shortCommand1_PARM_2
      00035D 74 22            [12] 1386 	mov	a,#0x22
      00035F F0               [24] 1387 	movx	@dptr,a
      000360 75 82 60         [24] 1388 	mov	dpl,#0x60
      000363 12r01rB0         [24] 1389 	lcall	_shortCommand1
                                   1390 ;	board/zbs29_BW_uc/../uc8151.c:413: shortCommand1(CMD_VCOM_INTERVAL, 0x4d);  // 0x87
      000366 90r00rAF         [24] 1391 	mov	dptr,#_shortCommand1_PARM_2
      000369 74 4D            [12] 1392 	mov	a,#0x4d
      00036B F0               [24] 1393 	movx	@dptr,a
      00036C 75 82 50         [24] 1394 	mov	dpl,#0x50
      00036F 12r01rB0         [24] 1395 	lcall	_shortCommand1
                                   1396 ;	board/zbs29_BW_uc/../uc8151.c:415: shortCommand1(CMD_PLL_CONTROL, HZ_200);
      000372 90r00rAF         [24] 1397 	mov	dptr,#_shortCommand1_PARM_2
      000375 74 39            [12] 1398 	mov	a,#0x39
      000377 F0               [24] 1399 	movx	@dptr,a
      000378 75 82 30         [24] 1400 	mov	dpl,#0x30
      00037B 12r01rB0         [24] 1401 	lcall	_shortCommand1
                                   1402 ;	board/zbs29_BW_uc/../uc8151.c:416: epdWaitRdy();
      00037E 12r05r30         [24] 1403 	lcall	_epdWaitRdy
                                   1404 ;	board/zbs29_BW_uc/../uc8151.c:417: shortCommand(CMD_POWER_ON);
      000381 75 82 04         [24] 1405 	mov	dpl,#0x04
      000384 12r01r9A         [24] 1406 	lcall	_shortCommand
                                   1407 ;	board/zbs29_BW_uc/../uc8151.c:418: epdWaitRdy();
                                   1408 ;	board/zbs29_BW_uc/../uc8151.c:419: }
      000387 02r05r30         [24] 1409 	ljmp	_epdWaitRdy
                                   1410 ;------------------------------------------------------------
                                   1411 ;Allocation info for local variables in function 'epdGetStatus'
                                   1412 ;------------------------------------------------------------
                                   1413 ;sta                       Allocated with name '_epdGetStatus_sta_65536_167'
                                   1414 ;------------------------------------------------------------
                                   1415 ;	board/zbs29_BW_uc/../uc8151.c:420: static uint8_t epdGetStatus() {
                                   1416 ;	-----------------------------------------
                                   1417 ;	 function epdGetStatus
                                   1418 ;	-----------------------------------------
      00038A                       1419 _epdGetStatus:
                                   1420 ;	board/zbs29_BW_uc/../uc8151.c:422: commandReadBegin(0x2F);
      00038A 75 82 2F         [24] 1421 	mov	dpl,#0x2f
      00038D 12r01r32         [24] 1422 	lcall	_commandReadBegin
                                   1423 ;	board/zbs29_BW_uc/../uc8151.c:423: sta = epdReadByte();
      000390 12r01r5C         [24] 1424 	lcall	_epdReadByte
      000393 AF 82            [24] 1425 	mov	r7,dpl
                                   1426 ;	board/zbs29_BW_uc/../uc8151.c:424: commandReadEnd();
      000395 C0 07            [24] 1427 	push	ar7
      000397 12r01r56         [24] 1428 	lcall	_commandReadEnd
      00039A D0 07            [24] 1429 	pop	ar7
                                   1430 ;	board/zbs29_BW_uc/../uc8151.c:425: return sta;
      00039C 8F 82            [24] 1431 	mov	dpl,r7
                                   1432 ;	board/zbs29_BW_uc/../uc8151.c:426: }
      00039E 22               [24] 1433 	ret
                                   1434 ;------------------------------------------------------------
                                   1435 ;Allocation info for local variables in function 'epdGetBattery'
                                   1436 ;------------------------------------------------------------
                                   1437 ;sta                       Allocated with name '_epdGetBattery_sta_65536_169'
                                   1438 ;------------------------------------------------------------
                                   1439 ;	board/zbs29_BW_uc/../uc8151.c:427: uint16_t epdGetBattery(void) {
                                   1440 ;	-----------------------------------------
                                   1441 ;	 function epdGetBattery
                                   1442 ;	-----------------------------------------
      00039F                       1443 _epdGetBattery:
                                   1444 ;	board/zbs29_BW_uc/../uc8151.c:429: commandReadBegin(0x51);
      00039F 75 82 51         [24] 1445 	mov	dpl,#0x51
      0003A2 12r01r32         [24] 1446 	lcall	_commandReadBegin
                                   1447 ;	board/zbs29_BW_uc/../uc8151.c:430: sta = epdReadByte();
      0003A5 12r01r5C         [24] 1448 	lcall	_epdReadByte
      0003A8 AF 82            [24] 1449 	mov	r7,dpl
                                   1450 ;	board/zbs29_BW_uc/../uc8151.c:431: commandReadEnd();
      0003AA C0 07            [24] 1451 	push	ar7
      0003AC 12r01r56         [24] 1452 	lcall	_commandReadEnd
      0003AF D0 07            [24] 1453 	pop	ar7
                                   1454 ;	board/zbs29_BW_uc/../uc8151.c:432: if (sta) return 3000;
      0003B1 EF               [12] 1455 	mov	a,r7
      0003B2 60 04            [24] 1456 	jz	00102$
      0003B4 90 0B B8         [24] 1457 	mov	dptr,#0x0bb8
      0003B7 22               [24] 1458 	ret
      0003B8                       1459 00102$:
                                   1460 ;	board/zbs29_BW_uc/../uc8151.c:433: return 2100;
      0003B8 90 08 34         [24] 1461 	mov	dptr,#0x0834
                                   1462 ;	board/zbs29_BW_uc/../uc8151.c:434: }
      0003BB 22               [24] 1463 	ret
                                   1464 ;------------------------------------------------------------
                                   1465 ;Allocation info for local variables in function 'selectLUT'
                                   1466 ;------------------------------------------------------------
                                   1467 ;lut                       Allocated with name '_selectLUT_lut_65536_170'
                                   1468 ;------------------------------------------------------------
                                   1469 ;	board/zbs29_BW_uc/../uc8151.c:437: void selectLUT(uint8_t lut) {
                                   1470 ;	-----------------------------------------
                                   1471 ;	 function selectLUT
                                   1472 ;	-----------------------------------------
      0003BC                       1473 _selectLUT:
      0003BC E5 82            [12] 1474 	mov	a,dpl
      0003BE 90r00rB8         [24] 1475 	mov	dptr,#_selectLUT_lut_65536_170
                                   1476 ;	board/zbs29_BW_uc/../uc8151.c:440: lut += 1;                    // make the compiler a happy camper
      0003C1 F0               [24] 1477 	movx	@dptr,a ; Peephole dmitrygr.0005 - SRSLY, WTF?
      0003C2 04               [12] 1478 	inc	a
      0003C3 F0               [24] 1479 	movx	@dptr,a
                                   1480 ;	board/zbs29_BW_uc/../uc8151.c:441: wdtSetResetVal(0xFF8E797F);  // 120 s
      0003C4 90 79 7F         [24] 1481 	mov	dptr,#0x797f
      0003C7 75 F0 8E         [24] 1482 	mov	b,#0x8e
      0003CA 74 FF            [12] 1483 	mov	a,#0xff
      0003CC 12r00r00         [24] 1484 	lcall	_wdtSetResetVal
                                   1485 ;	board/zbs29_BW_uc/../uc8151.c:442: wdtOn();
                                   1486 ;	board/zbs29_BW_uc/../uc8151.c:443: return;
                                   1487 ;	board/zbs29_BW_uc/../uc8151.c:444: }
      0003CF 02r00r00         [24] 1488 	ljmp	_wdtOn
                                   1489 ;------------------------------------------------------------
                                   1490 ;Allocation info for local variables in function 'setWindowXY'
                                   1491 ;------------------------------------------------------------
                                   1492 ;xend                      Allocated with name '_setWindowXY_PARM_2'
                                   1493 ;ystart                    Allocated with name '_setWindowXY_PARM_3'
                                   1494 ;yend                      Allocated with name '_setWindowXY_PARM_4'
                                   1495 ;xstart                    Allocated with name '_setWindowXY_xstart_65536_172'
                                   1496 ;------------------------------------------------------------
                                   1497 ;	board/zbs29_BW_uc/../uc8151.c:446: void setWindowXY(uint16_t xstart, uint16_t xend, uint16_t ystart, uint16_t yend) {
                                   1498 ;	-----------------------------------------
                                   1499 ;	 function setWindowXY
                                   1500 ;	-----------------------------------------
      0003D2                       1501 _setWindowXY:
      0003D2 AF 83            [24] 1502 	mov	r7,dph
      0003D4 E5 82            [12] 1503 	mov	a,dpl
      0003D6 90r00rBF         [24] 1504 	mov	dptr,#_setWindowXY_xstart_65536_172
      0003D9 F0               [24] 1505 	movx	@dptr,a
      0003DA EF               [12] 1506 	mov	a,r7
      0003DB A3               [24] 1507 	inc	dptr
      0003DC F0               [24] 1508 	movx	@dptr,a
                                   1509 ;	board/zbs29_BW_uc/../uc8151.c:447: shortCommand(CMD_PARTIAL_IN);
      0003DD 75 82 91         [24] 1510 	mov	dpl,#0x91
      0003E0 12r01r9A         [24] 1511 	lcall	_shortCommand
                                   1512 ;	board/zbs29_BW_uc/../uc8151.c:448: commandBegin(CMD_PARTIAL_WINDOW);
      0003E3 75 82 90         [24] 1513 	mov	dpl,#0x90
      0003E6 12r01rFB         [24] 1514 	lcall	_commandBegin
                                   1515 ;	board/zbs29_BW_uc/../uc8151.c:449: epdSend((xstart / 8) << 3);
      0003E9 90r00rBF         [24] 1516 	mov	dptr,#_setWindowXY_xstart_65536_172
      0003EC E0               [24] 1517 	movx	a,@dptr
      0003ED FE               [12] 1518 	mov	r6,a
      0003EE A3               [24] 1519 	inc	dptr
      0003EF E0               [24] 1520 	movx	a,@dptr
      0003F0 C4               [12] 1521 	swap	a
      0003F1 23               [12] 1522 	rl	a
      0003F2 CE               [12] 1523 	xch	a,r6
      0003F3 C4               [12] 1524 	swap	a
      0003F4 23               [12] 1525 	rl	a
      0003F5 54 1F            [12] 1526 	anl	a,#0x1f
      0003F7 6E               [12] 1527 	xrl	a,r6
      0003F8 CE               [12] 1528 	xch	a,r6
      0003F9 54 1F            [12] 1529 	anl	a,#0x1f
      0003FB CE               [12] 1530 	xch	a,r6
      0003FC 6E               [12] 1531 	xrl	a,r6
      0003FD CE               [12] 1532 	xch	a,r6
      0003FE EE               [12] 1533 	mov	a,r6
      0003FF C4               [12] 1534 	swap	a
      000400 03               [12] 1535 	rr	a
      000401 54 F8            [12] 1536 	anl	a,#0xf8
      000403 F5 82            [12] 1537 	mov	dpl,a
      000405 12r00r00         [24] 1538 	lcall	_spiTXByte
                                   1539 ;	board/zbs29_BW_uc/../uc8151.c:450: epdSend(((xend / 8 - 1) << 3) | 0x07);
      000408 90r00rB9         [24] 1540 	mov	dptr,#_setWindowXY_PARM_2
      00040B E0               [24] 1541 	movx	a,@dptr
      00040C FE               [12] 1542 	mov	r6,a
      00040D A3               [24] 1543 	inc	dptr
      00040E E0               [24] 1544 	movx	a,@dptr
      00040F C4               [12] 1545 	swap	a
      000410 23               [12] 1546 	rl	a
      000411 CE               [12] 1547 	xch	a,r6
      000412 C4               [12] 1548 	swap	a
      000413 23               [12] 1549 	rl	a
      000414 54 1F            [12] 1550 	anl	a,#0x1f
      000416 6E               [12] 1551 	xrl	a,r6
      000417 CE               [12] 1552 	xch	a,r6
      000418 54 1F            [12] 1553 	anl	a,#0x1f
      00041A CE               [12] 1554 	xch	a,r6
      00041B 6E               [12] 1555 	xrl	a,r6
      00041C CE               [12] 1556 	xch	a,r6
      00041D 1E               [12] 1557 	dec	r6
      00041E EE               [12] 1558 	mov	a,r6
      00041F C4               [12] 1559 	swap	a
      000420 03               [12] 1560 	rr	a
      000421 54 F8            [12] 1561 	anl	a,#0xf8
      000423 FE               [12] 1562 	mov	r6,a
      000424 43 06 07         [24] 1563 	orl	ar6,#0x07
      000427 8E 82            [24] 1564 	mov	dpl,r6
      000429 12r00r00         [24] 1565 	lcall	_spiTXByte
                                   1566 ;	board/zbs29_BW_uc/../uc8151.c:451: epdSend(ystart >> 8);
      00042C 90r00rBB         [24] 1567 	mov	dptr,#_setWindowXY_PARM_3
      00042F E0               [24] 1568 	movx	a,@dptr
      000430 FE               [12] 1569 	mov	r6,a
      000431 A3               [24] 1570 	inc	dptr
      000432 E0               [24] 1571 	movx	a,@dptr
      000433 F5 82            [12] 1572 	mov	dpl,a
      000435 12r00r00         [24] 1573 	lcall	_spiTXByte
                                   1574 ;	board/zbs29_BW_uc/../uc8151.c:452: epdSend(ystart & 0xFF);
      000438 8E 82            [24] 1575 	mov	dpl,r6
      00043A 12r00r00         [24] 1576 	lcall	_spiTXByte
                                   1577 ;	board/zbs29_BW_uc/../uc8151.c:453: epdSend((yend - 1) >> 8);
      00043D 90r00rBD         [24] 1578 	mov	dptr,#_setWindowXY_PARM_4
      000440 E0               [24] 1579 	movx	a,@dptr
      000441 FE               [12] 1580 	mov	r6,a
      000442 A3               [24] 1581 	inc	dptr
      000443 E0               [24] 1582 	movx	a,@dptr
      000444 FF               [12] 1583 	mov	r7,a
      000445 8E 04            [24] 1584 	mov	ar4,r6
      000447 8F 05            [24] 1585 	mov	ar5,r7
      000449 1C               [12] 1586 	dec	r4
      00044A BC FF 01         [24] 1587 	cjne	r4,#0xff,00106$
      00044D 1D               [12] 1588 	dec	r5
      00044E                       1589 00106$:
      00044E 8D 04            [24] 1590 	mov	ar4,r5
      000450 8C 82            [24] 1591 	mov	dpl,r4
      000452 12r00r00         [24] 1592 	lcall	_spiTXByte
                                   1593 ;	board/zbs29_BW_uc/../uc8151.c:454: epdSend((yend - 1) & 0xff);
      000455 1E               [12] 1594 	dec	r6
      000456 8E 82            [24] 1595 	mov	dpl,r6
      000458 12r00r00         [24] 1596 	lcall	_spiTXByte
                                   1597 ;	board/zbs29_BW_uc/../uc8151.c:455: epdSend(0x01);
      00045B 75 82 01         [24] 1598 	mov	dpl,#0x01
      00045E 12r00r00         [24] 1599 	lcall	_spiTXByte
                                   1600 ;	board/zbs29_BW_uc/../uc8151.c:456: commandEnd();
                                   1601 ;	assignBit
      000461 D2 97            [12] 1602 	setb	_P1_7
                                   1603 ;	board/zbs29_BW_uc/../uc8151.c:457: }
      000463 22               [24] 1604 	ret
                                   1605 ;------------------------------------------------------------
                                   1606 ;Allocation info for local variables in function 'setColorMode'
                                   1607 ;------------------------------------------------------------
                                   1608 ;bw                        Allocated with name '_setColorMode_PARM_2'
                                   1609 ;red                       Allocated with name '_setColorMode_red_65536_175'
                                   1610 ;------------------------------------------------------------
                                   1611 ;	board/zbs29_BW_uc/../uc8151.c:459: void setColorMode(uint8_t red, uint8_t bw) {
                                   1612 ;	-----------------------------------------
                                   1613 ;	 function setColorMode
                                   1614 ;	-----------------------------------------
      000464                       1615 _setColorMode:
                                   1616 ;	board/zbs29_BW_uc/../uc8151.c:461: red = 1;
      000464 90r00rC2         [24] 1617 	mov	dptr,#_setColorMode_red_65536_175
      000467 74 01            [12] 1618 	mov	a,#0x01
      000469 F0               [24] 1619 	movx	@dptr,a
                                   1620 ;	board/zbs29_BW_uc/../uc8151.c:463: return;
                                   1621 ;	board/zbs29_BW_uc/../uc8151.c:464: }
      00046A 22               [24] 1622 	ret
                                   1623 ;------------------------------------------------------------
                                   1624 ;Allocation info for local variables in function 'clearScreen'
                                   1625 ;------------------------------------------------------------
                                   1626 ;c                         Allocated with name '_clearScreen_c_131072_178'
                                   1627 ;c                         Allocated with name '_clearScreen_c_131072_181'
                                   1628 ;------------------------------------------------------------
                                   1629 ;	board/zbs29_BW_uc/../uc8151.c:465: void clearScreen() {
                                   1630 ;	-----------------------------------------
                                   1631 ;	 function clearScreen
                                   1632 ;	-----------------------------------------
      00046B                       1633 _clearScreen:
                                   1634 ;	board/zbs29_BW_uc/../uc8151.c:466: shortCommand(CMD_PARTIAL_OUT);
      00046B 75 82 92         [24] 1635 	mov	dpl,#0x92
      00046E 12r01r9A         [24] 1636 	lcall	_shortCommand
                                   1637 ;	board/zbs29_BW_uc/../uc8151.c:467: commandBegin(CMD_DISPLAY_START_TRANSMISSION_DTM2);
      000471 75 82 13         [24] 1638 	mov	dpl,#0x13
      000474 12r01rFB         [24] 1639 	lcall	_commandBegin
                                   1640 ;	board/zbs29_BW_uc/../uc8151.c:468: for (uint16_t c = 0; c < ((1UL * SCREEN_HEIGHT * SCREEN_WIDTH) / 8); c++) {
      000477 7E 00            [12] 1641 	mov	r6,#0x00
      000479 7F 00            [12] 1642 	mov	r7,#0x00
      00047B                       1643 00110$:
      00047B C3               [12] 1644 	clr	c
      00047C EE               [12] 1645 	mov	a,r6
      00047D 94 80            [12] 1646 	subb	a,#0x80
      00047F EF               [12] 1647 	mov	a,r7
      000480 94 12            [12] 1648 	subb	a,#0x12
      000482 50 0D            [24] 1649 	jnc	00102$
                                   1650 ;	board/zbs29_BW_uc/../uc8151.c:469: epdSend(0x00);
      000484 75 82 00         [24] 1651 	mov	dpl,#0x00
      000487 12r00r00         [24] 1652 	lcall	_spiTXByte
                                   1653 ;	board/zbs29_BW_uc/../uc8151.c:468: for (uint16_t c = 0; c < ((1UL * SCREEN_HEIGHT * SCREEN_WIDTH) / 8); c++) {
      00048A 0E               [12] 1654 	inc	r6
                                   1655 ;	board/zbs29_BW_uc/../uc8151.c:471: commandEnd();
      00048B BE 00 ED         [24] 1656 	cjne	r6,#0x00,00110$
      00048E 0F               [12] 1657 	inc	r7
      00048F 80 EA            [24] 1658 	sjmp	00110$
      000491                       1659 00102$:
                                   1660 ;	assignBit
      000491 D2 97            [12] 1661 	setb	_P1_7
                                   1662 ;	board/zbs29_BW_uc/../uc8151.c:472: epdWaitRdy();
      000493 12r05r30         [24] 1663 	lcall	_epdWaitRdy
                                   1664 ;	board/zbs29_BW_uc/../uc8151.c:473: commandBegin(CMD_DISPLAY_START_TRANSMISSION_DTM1);
      000496 75 82 13         [24] 1665 	mov	dpl,#0x13
      000499 12r01rFB         [24] 1666 	lcall	_commandBegin
                                   1667 ;	board/zbs29_BW_uc/../uc8151.c:474: for (uint16_t c = 0; c < ((1UL * SCREEN_HEIGHT * SCREEN_WIDTH) / 8); c++) {
      00049C 7E 00            [12] 1668 	mov	r6,#0x00
      00049E 7F 00            [12] 1669 	mov	r7,#0x00
      0004A0                       1670 00113$:
      0004A0 C3               [12] 1671 	clr	c
      0004A1 EE               [12] 1672 	mov	a,r6
      0004A2 94 80            [12] 1673 	subb	a,#0x80
      0004A4 EF               [12] 1674 	mov	a,r7
      0004A5 94 12            [12] 1675 	subb	a,#0x12
      0004A7 50 0D            [24] 1676 	jnc	00106$
                                   1677 ;	board/zbs29_BW_uc/../uc8151.c:475: epdSend(0x00);
      0004A9 75 82 00         [24] 1678 	mov	dpl,#0x00
      0004AC 12r00r00         [24] 1679 	lcall	_spiTXByte
                                   1680 ;	board/zbs29_BW_uc/../uc8151.c:474: for (uint16_t c = 0; c < ((1UL * SCREEN_HEIGHT * SCREEN_WIDTH) / 8); c++) {
      0004AF 0E               [12] 1681 	inc	r6
                                   1682 ;	board/zbs29_BW_uc/../uc8151.c:477: commandEnd();
      0004B0 BE 00 ED         [24] 1683 	cjne	r6,#0x00,00113$
      0004B3 0F               [12] 1684 	inc	r7
      0004B4 80 EA            [24] 1685 	sjmp	00113$
      0004B6                       1686 00106$:
                                   1687 ;	assignBit
      0004B6 D2 97            [12] 1688 	setb	_P1_7
                                   1689 ;	board/zbs29_BW_uc/../uc8151.c:478: }
      0004B8 22               [24] 1690 	ret
                                   1691 ;------------------------------------------------------------
                                   1692 ;Allocation info for local variables in function 'draw'
                                   1693 ;------------------------------------------------------------
                                   1694 ;	board/zbs29_BW_uc/../uc8151.c:479: void draw() {
                                   1695 ;	-----------------------------------------
                                   1696 ;	 function draw
                                   1697 ;	-----------------------------------------
      0004B9                       1698 _draw:
                                   1699 ;	board/zbs29_BW_uc/../uc8151.c:480: shortCommand(CMD_DISPLAY_REFRESH);
      0004B9 75 82 12         [24] 1700 	mov	dpl,#0x12
      0004BC 12r01r9A         [24] 1701 	lcall	_shortCommand
                                   1702 ;	board/zbs29_BW_uc/../uc8151.c:481: epdWaitRdy();
                                   1703 ;	board/zbs29_BW_uc/../uc8151.c:482: }
      0004BF 02r05r30         [24] 1704 	ljmp	_epdWaitRdy
                                   1705 ;------------------------------------------------------------
                                   1706 ;Allocation info for local variables in function 'drawNoWait'
                                   1707 ;------------------------------------------------------------
                                   1708 ;	board/zbs29_BW_uc/../uc8151.c:483: void drawNoWait() {
                                   1709 ;	-----------------------------------------
                                   1710 ;	 function drawNoWait
                                   1711 ;	-----------------------------------------
      0004C2                       1712 _drawNoWait:
                                   1713 ;	board/zbs29_BW_uc/../uc8151.c:484: shortCommand(CMD_DISPLAY_REFRESH);
      0004C2 75 82 12         [24] 1714 	mov	dpl,#0x12
                                   1715 ;	board/zbs29_BW_uc/../uc8151.c:485: }
      0004C5 02r01r9A         [24] 1716 	ljmp	_shortCommand
                                   1717 ;------------------------------------------------------------
                                   1718 ;Allocation info for local variables in function 'drawWithSleep'
                                   1719 ;------------------------------------------------------------
                                   1720 ;tmp_P2FUNC                Allocated with name '_drawWithSleep_tmp_P2FUNC_65537_187'
                                   1721 ;tmp_P2DIR                 Allocated with name '_drawWithSleep_tmp_P2DIR_65537_187'
                                   1722 ;tmp_P2PULL                Allocated with name '_drawWithSleep_tmp_P2PULL_65537_187'
                                   1723 ;tmp_P2LVLSEL              Allocated with name '_drawWithSleep_tmp_P2LVLSEL_65537_187'
                                   1724 ;------------------------------------------------------------
                                   1725 ;	board/zbs29_BW_uc/../uc8151.c:486: void drawWithSleep() {
                                   1726 ;	-----------------------------------------
                                   1727 ;	 function drawWithSleep
                                   1728 ;	-----------------------------------------
      0004C8                       1729 _drawWithSleep:
                                   1730 ;	board/zbs29_BW_uc/../uc8151.c:487: shortCommand(CMD_DISPLAY_REFRESH);
      0004C8 75 82 12         [24] 1731 	mov	dpl,#0x12
      0004CB 12r01r9A         [24] 1732 	lcall	_shortCommand
                                   1733 ;	board/zbs29_BW_uc/../uc8151.c:488: uint8_t tmp_P2FUNC = P2FUNC;
      0004CE 90r00rC3         [24] 1734 	mov	dptr,#_drawWithSleep_tmp_P2FUNC_65537_187
      0004D1 E5 AF            [12] 1735 	mov	a,_P2FUNC
      0004D3 F0               [24] 1736 	movx	@dptr,a
                                   1737 ;	board/zbs29_BW_uc/../uc8151.c:489: uint8_t tmp_P2DIR = P2DIR;
      0004D4 90r00rC4         [24] 1738 	mov	dptr,#_drawWithSleep_tmp_P2DIR_65537_187
      0004D7 E5 BB            [12] 1739 	mov	a,_P2DIR
      0004D9 F0               [24] 1740 	movx	@dptr,a
                                   1741 ;	board/zbs29_BW_uc/../uc8151.c:490: uint8_t tmp_P2PULL = P2PULL;
      0004DA 90r00rC5         [24] 1742 	mov	dptr,#_drawWithSleep_tmp_P2PULL_65537_187
      0004DD E5 BE            [12] 1743 	mov	a,_P2PULL
      0004DF F0               [24] 1744 	movx	@dptr,a
                                   1745 ;	board/zbs29_BW_uc/../uc8151.c:491: uint8_t tmp_P2LVLSEL = P2LVLSEL;
      0004E0 90r00rC6         [24] 1746 	mov	dptr,#_drawWithSleep_tmp_P2LVLSEL_65537_187
      0004E3 E5 A5            [12] 1747 	mov	a,_P2LVLSEL
      0004E5 F0               [24] 1748 	movx	@dptr,a
                                   1749 ;	board/zbs29_BW_uc/../uc8151.c:492: P2FUNC &= 0xfd;
      0004E6 53 AF FD         [24] 1750 	anl	_P2FUNC,#0xfd
                                   1751 ;	board/zbs29_BW_uc/../uc8151.c:493: P2DIR |= 2;
      0004E9 43 BB 02         [24] 1752 	orl	_P2DIR,#0x02
                                   1753 ;	board/zbs29_BW_uc/../uc8151.c:494: P2PULL |= 2;
      0004EC 43 BE 02         [24] 1754 	orl	_P2PULL,#0x02
                                   1755 ;	board/zbs29_BW_uc/../uc8151.c:495: P2LVLSEL &= ~(2);
      0004EF 53 A5 FD         [24] 1756 	anl	_P2LVLSEL,#0xfd
                                   1757 ;	board/zbs29_BW_uc/../uc8151.c:497: P2CHSTA &= 0xfd;
      0004F2 53 AC FD         [24] 1758 	anl	_P2CHSTA,#0xfd
                                   1759 ;	board/zbs29_BW_uc/../uc8151.c:498: P2INTEN = 2;
      0004F5 75 A9 02         [24] 1760 	mov	_P2INTEN,#0x02
                                   1761 ;	board/zbs29_BW_uc/../uc8151.c:499: P2CHSTA &= 0xfd;
      0004F8 53 AC FD         [24] 1762 	anl	_P2CHSTA,#0xfd
                                   1763 ;	board/zbs29_BW_uc/../uc8151.c:500: sleepForMsec(TIMER_TICKS_PER_SECOND * 120);
      0004FB 90 67 D8         [24] 1764 	mov	dptr,#0x67d8
      0004FE 75 F0 89         [24] 1765 	mov	b,#0x89
      000501 74 09            [12] 1766 	mov	a,#0x09
      000503 12r00r00         [24] 1767 	lcall	_sleepForMsec
                                   1768 ;	board/zbs29_BW_uc/../uc8151.c:501: wdtOn();
      000506 12r00r00         [24] 1769 	lcall	_wdtOn
                                   1770 ;	board/zbs29_BW_uc/../uc8151.c:502: P2CHSTA &= 0xfd;
      000509 53 AC FD         [24] 1771 	anl	_P2CHSTA,#0xfd
                                   1772 ;	board/zbs29_BW_uc/../uc8151.c:503: P2INTEN &= 0xfd;
      00050C 53 A9 FD         [24] 1773 	anl	_P2INTEN,#0xfd
                                   1774 ;	board/zbs29_BW_uc/../uc8151.c:505: P2FUNC = tmp_P2FUNC;
      00050F 90r00rC3         [24] 1775 	mov	dptr,#_drawWithSleep_tmp_P2FUNC_65537_187
      000512 E0               [24] 1776 	movx	a,@dptr
      000513 F5 AF            [12] 1777 	mov	_P2FUNC,a
                                   1778 ;	board/zbs29_BW_uc/../uc8151.c:506: P2DIR = tmp_P2DIR;
      000515 90r00rC4         [24] 1779 	mov	dptr,#_drawWithSleep_tmp_P2DIR_65537_187
      000518 E0               [24] 1780 	movx	a,@dptr
      000519 F5 BB            [12] 1781 	mov	_P2DIR,a
                                   1782 ;	board/zbs29_BW_uc/../uc8151.c:507: P2PULL = tmp_P2PULL;
      00051B 90r00rC5         [24] 1783 	mov	dptr,#_drawWithSleep_tmp_P2PULL_65537_187
      00051E E0               [24] 1784 	movx	a,@dptr
      00051F F5 BE            [12] 1785 	mov	_P2PULL,a
                                   1786 ;	board/zbs29_BW_uc/../uc8151.c:508: P2LVLSEL = tmp_P2LVLSEL;
      000521 90r00rC6         [24] 1787 	mov	dptr,#_drawWithSleep_tmp_P2LVLSEL_65537_187
      000524 E0               [24] 1788 	movx	a,@dptr
      000525 F5 A5            [12] 1789 	mov	_P2LVLSEL,a
                                   1790 ;	board/zbs29_BW_uc/../uc8151.c:509: eepromPrvDeselect();
      000527 00               [12] 1791 	nop
      000528 00               [12] 1792 	nop
      000529 00               [12] 1793 	nop
                                   1794 ;	assignBit
      00052A D2 91            [12] 1795 	setb	_P1_1
      00052C 00               [12] 1796 	nop
      00052D 00               [12] 1797 	nop
      00052E 00               [12] 1798 	nop
                                   1799 ;	board/zbs29_BW_uc/../uc8151.c:510: }
      00052F 22               [24] 1800 	ret
                                   1801 ;------------------------------------------------------------
                                   1802 ;Allocation info for local variables in function 'epdWaitRdy'
                                   1803 ;------------------------------------------------------------
                                   1804 ;	board/zbs29_BW_uc/../uc8151.c:511: void epdWaitRdy() {
                                   1805 ;	-----------------------------------------
                                   1806 ;	 function epdWaitRdy
                                   1807 ;	-----------------------------------------
      000530                       1808 _epdWaitRdy:
                                   1809 ;	board/zbs29_BW_uc/../uc8151.c:512: epdBusyWait(TIMER_TICKS_PER_SECOND * 120);
      000530 90 67 D8         [24] 1810 	mov	dptr,#0x67d8
      000533 75 F0 89         [24] 1811 	mov	b,#0x89
      000536 74 09            [12] 1812 	mov	a,#0x09
                                   1813 ;	board/zbs29_BW_uc/../uc8151.c:513: }
      000538 02r00rB3         [24] 1814 	ljmp	_epdBusyWait
                                   1815 ;------------------------------------------------------------
                                   1816 ;Allocation info for local variables in function 'beginFullscreenImage'
                                   1817 ;------------------------------------------------------------
                                   1818 ;	board/zbs29_BW_uc/../uc8151.c:514: void beginFullscreenImage() {
                                   1819 ;	-----------------------------------------
                                   1820 ;	 function beginFullscreenImage
                                   1821 ;	-----------------------------------------
      00053B                       1822 _beginFullscreenImage:
                                   1823 ;	board/zbs29_BW_uc/../uc8151.c:515: shortCommand(CMD_PARTIAL_OUT);
      00053B 75 82 92         [24] 1824 	mov	dpl,#0x92
      00053E 12r01r9A         [24] 1825 	lcall	_shortCommand
                                   1826 ;	board/zbs29_BW_uc/../uc8151.c:516: epdDrawDirection(false);
      000541 75 82 00         [24] 1827 	mov	dpl,#0x00
                                   1828 ;	board/zbs29_BW_uc/../uc8151.c:519: }
      000544 02r02rAA         [24] 1829 	ljmp	_epdDrawDirection
                                   1830 ;------------------------------------------------------------
                                   1831 ;Allocation info for local variables in function 'beginWriteFramebuffer'
                                   1832 ;------------------------------------------------------------
                                   1833 ;color                     Allocated with name '_beginWriteFramebuffer_color_65536_191'
                                   1834 ;------------------------------------------------------------
                                   1835 ;	board/zbs29_BW_uc/../uc8151.c:520: void beginWriteFramebuffer(bool color) {
                                   1836 ;	-----------------------------------------
                                   1837 ;	 function beginWriteFramebuffer
                                   1838 ;	-----------------------------------------
      000547                       1839 _beginWriteFramebuffer:
      000547 E5 82            [12] 1840 	mov	a,dpl
      000549 90r00rC7         [24] 1841 	mov	dptr,#_beginWriteFramebuffer_color_65536_191
                                   1842 ;	board/zbs29_BW_uc/../uc8151.c:522: if (color == EPD_COLOR_RED) {
      00054C F0               [24] 1843 	movx	@dptr,a ; Peephole dmitrygr.0005 - SRSLY, WTF?
      00054D 60 08            [24] 1844 	jz	00102$
                                   1845 ;	board/zbs29_BW_uc/../uc8151.c:523: commandBegin(CMD_DISPLAY_START_TRANSMISSION_DTM2);
      00054F 75 82 13         [24] 1846 	mov	dpl,#0x13
      000552 12r01rFB         [24] 1847 	lcall	_commandBegin
      000555 80 06            [24] 1848 	sjmp	00104$
      000557                       1849 00102$:
                                   1850 ;	board/zbs29_BW_uc/../uc8151.c:525: commandBegin(CMD_DISPLAY_START_TRANSMISSION_DTM1);
      000557 75 82 13         [24] 1851 	mov	dpl,#0x13
      00055A 12r01rFB         [24] 1852 	lcall	_commandBegin
                                   1853 ;	board/zbs29_BW_uc/../uc8151.c:527: epdDeselect();
      00055D                       1854 00104$:
                                   1855 ;	assignBit
      00055D D2 97            [12] 1856 	setb	_P1_7
                                   1857 ;	board/zbs29_BW_uc/../uc8151.c:528: }
      00055F 22               [24] 1858 	ret
                                   1859 ;------------------------------------------------------------
                                   1860 ;Allocation info for local variables in function 'endWriteFramebuffer'
                                   1861 ;------------------------------------------------------------
                                   1862 ;	board/zbs29_BW_uc/../uc8151.c:529: void endWriteFramebuffer() {
                                   1863 ;	-----------------------------------------
                                   1864 ;	 function endWriteFramebuffer
                                   1865 ;	-----------------------------------------
      000560                       1866 _endWriteFramebuffer:
                                   1867 ;	board/zbs29_BW_uc/../uc8151.c:530: commandEnd();
                                   1868 ;	assignBit
      000560 D2 97            [12] 1869 	setb	_P1_7
                                   1870 ;	board/zbs29_BW_uc/../uc8151.c:531: }
      000562 22               [24] 1871 	ret
                                   1872 ;------------------------------------------------------------
                                   1873 ;Allocation info for local variables in function 'loadRawBitmap'
                                   1874 ;------------------------------------------------------------
                                   1875 ;x                         Allocated to stack - sp -13
                                   1876 ;y                         Allocated to stack - sp -15
                                   1877 ;color                     Allocated to stack - sp -16
                                   1878 ;bmp                       Allocated to registers 
                                   1879 ;xsize                     Allocated to stack - sp -3
                                   1880 ;ysize                     Allocated to registers 
                                   1881 ;size                      Allocated to registers 
                                   1882 ;c                         Allocated to stack - sp -1
                                   1883 ;curY                      Allocated to registers 
                                   1884 ;sloc0                     Allocated to stack - sp -9
                                   1885 ;sloc1                     Allocated to stack - sp -7
                                   1886 ;sloc2                     Allocated to stack - sp -5
                                   1887 ;------------------------------------------------------------
                                   1888 ;	board/zbs29_BW_uc/../uc8151.c:533: void loadRawBitmap(uint8_t* bmp, uint16_t x, uint16_t y, bool color) __reentrant {
                                   1889 ;	-----------------------------------------
                                   1890 ;	 function loadRawBitmap
                                   1891 ;	-----------------------------------------
      000563                       1892 _loadRawBitmap:
      000563 E5 81            [12] 1893 	mov	a,sp
      000565 24 0A            [12] 1894 	add	a,#0x0a
      000567 F5 81            [12] 1895 	mov	sp,a
                                   1896 ;	board/zbs29_BW_uc/../uc8151.c:537: uint16_t xsize = bmp[0] / 8;
      000569 AD 82            [24] 1897 	mov	r5,dpl
      00056B AE 83            [24] 1898 	mov	r6,dph
      00056D AF F0            [24] 1899 	mov	r7,b
      00056F 12r00r00         [24] 1900 	lcall	__gptrget
      000572 FC               [12] 1901 	mov	r4,a
      000573 E5 81            [12] 1902 	mov	a,sp
      000575 24 F7            [12] 1903 	add	a,#0xf7
      000577 F8               [12] 1904 	mov	r0,a
      000578 A6 04            [24] 1905 	mov	@r0,ar4
      00057A 08               [12] 1906 	inc	r0
      00057B 76 00            [12] 1907 	mov	@r0,#0x00
      00057D 90r00r00         [24] 1908 	mov	dptr,#__divsint_PARM_2
      000580 74 08            [12] 1909 	mov	a,#0x08
      000582 F0               [24] 1910 	movx	@dptr,a
      000583 E4               [12] 1911 	clr	a
      000584 A3               [24] 1912 	inc	dptr
      000585 F0               [24] 1913 	movx	@dptr,a
      000586 E5 81            [12] 1914 	mov	a,sp
      000588 24 F7            [12] 1915 	add	a,#0xf7
      00058A F8               [12] 1916 	mov	r0,a
      00058B 86 82            [24] 1917 	mov	dpl,@r0
      00058D 08               [12] 1918 	inc	r0
      00058E 86 83            [24] 1919 	mov	dph,@r0
      000590 C0 07            [24] 1920 	push	ar7
      000592 C0 06            [24] 1921 	push	ar6
      000594 C0 05            [24] 1922 	push	ar5
      000596 12r00r00         [24] 1923 	lcall	__divsint
      000599 AA 82            [24] 1924 	mov	r2,dpl
      00059B AC 83            [24] 1925 	mov	r4,dph
      00059D D0 05            [24] 1926 	pop	ar5
      00059F D0 06            [24] 1927 	pop	ar6
      0005A1 D0 07            [24] 1928 	pop	ar7
      0005A3 E5 81            [12] 1929 	mov	a,sp
      0005A5 24 FD            [12] 1930 	add	a,#0xfd
      0005A7 F8               [12] 1931 	mov	r0,a
      0005A8 A6 02            [24] 1932 	mov	@r0,ar2
      0005AA 08               [12] 1933 	inc	r0
      0005AB A6 04            [24] 1934 	mov	@r0,ar4
                                   1935 ;	board/zbs29_BW_uc/../uc8151.c:538: if (bmp[0] % 8) xsize++;
      0005AD E5 81            [12] 1936 	mov	a,sp
      0005AF 24 F7            [12] 1937 	add	a,#0xf7
      0005B1 F8               [12] 1938 	mov	r0,a
      0005B2 E6               [12] 1939 	mov	a,@r0
      0005B3 54 07            [12] 1940 	anl	a,#0x07
      0005B5 60 0B            [24] 1941 	jz	00102$
      0005B7 E5 81            [12] 1942 	mov	a,sp
      0005B9 24 FD            [12] 1943 	add	a,#0xfd
      0005BB F8               [12] 1944 	mov	r0,a
      0005BC 06               [12] 1945 	inc	@r0
      0005BD B6 00 02         [24] 1946 	cjne	@r0,#0x00,00156$
      0005C0 08               [12] 1947 	inc	r0
      0005C1 06               [12] 1948 	inc	@r0
      0005C2                       1949 00156$:
      0005C2                       1950 00102$:
                                   1951 ;	board/zbs29_BW_uc/../uc8151.c:540: uint16_t size = xsize * bmp[1];
      0005C2 74 01            [12] 1952 	mov	a,#0x01
      0005C4 2D               [12] 1953 	add	a,r5
      0005C5 FA               [12] 1954 	mov	r2,a
      0005C6 E4               [12] 1955 	clr	a
      0005C7 3E               [12] 1956 	addc	a,r6
      0005C8 FB               [12] 1957 	mov	r3,a
      0005C9 8F 04            [24] 1958 	mov	ar4,r7
      0005CB 8A 82            [24] 1959 	mov	dpl,r2
      0005CD 8B 83            [24] 1960 	mov	dph,r3
      0005CF 8C F0            [24] 1961 	mov	b,r4
      0005D1 12r00r00         [24] 1962 	lcall	__gptrget
      0005D4 90r00r00         [24] 1963 	mov	dptr,#__mulint_PARM_2
      0005D7 F0               [24] 1964 	movx	@dptr,a
      0005D8 E4               [12] 1965 	clr	a
      0005D9 A3               [24] 1966 	inc	dptr
      0005DA F0               [24] 1967 	movx	@dptr,a
      0005DB E5 81            [12] 1968 	mov	a,sp
      0005DD 24 FD            [12] 1969 	add	a,#0xfd
      0005DF F8               [12] 1970 	mov	r0,a
      0005E0 86 82            [24] 1971 	mov	dpl,@r0
      0005E2 08               [12] 1972 	inc	r0
      0005E3 86 83            [24] 1973 	mov	dph,@r0
      0005E5 C0 07            [24] 1974 	push	ar7
      0005E7 C0 06            [24] 1975 	push	ar6
      0005E9 C0 05            [24] 1976 	push	ar5
      0005EB 12r00r00         [24] 1977 	lcall	__mulint
      0005EE C8               [12] 1978 	xch	a,r0
      0005EF E5 81            [12] 1979 	mov	a,sp
      0005F1 24 F6            [12] 1980 	add	a,#0xf6
      0005F3 C8               [12] 1981 	xch	a,r0
      0005F4 A6 82            [24] 1982 	mov	@r0,dpl
      0005F6 08               [12] 1983 	inc	r0
      0005F7 A6 83            [24] 1984 	mov	@r0,dph
      0005F9 D0 05            [24] 1985 	pop	ar5
      0005FB D0 06            [24] 1986 	pop	ar6
      0005FD D0 07            [24] 1987 	pop	ar7
                                   1988 ;	board/zbs29_BW_uc/../uc8151.c:544: bmp += 2;
      0005FF 74 02            [12] 1989 	mov	a,#0x02
      000601 2D               [12] 1990 	add	a,r5
      000602 FD               [12] 1991 	mov	r5,a
      000603 E4               [12] 1992 	clr	a
      000604 3E               [12] 1993 	addc	a,r6
      000605 FE               [12] 1994 	mov	r6,a
                                   1995 ;	board/zbs29_BW_uc/../uc8151.c:547: uint16_t curY = y;
      000606 E5 81            [12] 1996 	mov	a,sp
      000608 24 F1            [12] 1997 	add	a,#0xf1
      00060A F8               [12] 1998 	mov	r0,a
      00060B E5 81            [12] 1999 	mov	a,sp
      00060D 24 F7            [12] 2000 	add	a,#0xf7
      00060F F9               [12] 2001 	mov	r1,a
      000610 E6               [12] 2002 	mov	a,@r0
      000611 F7               [12] 2003 	mov	@r1,a
      000612 08               [12] 2004 	inc	r0
      000613 E6               [12] 2005 	mov	a,@r0
      000614 09               [12] 2006 	inc	r1
      000615 F7               [12] 2007 	mov	@r1,a
                                   2008 ;	board/zbs29_BW_uc/../uc8151.c:548: while (1) {
      000616 A8 81            [24] 2009 	mov	r0,sp
      000618 18               [12] 2010 	dec	r0
      000619 E4               [12] 2011 	clr	a
      00061A F6               [12] 2012 	mov	@r0,a
      00061B 08               [12] 2013 	inc	r0
      00061C F6               [12] 2014 	mov	@r0,a
      00061D                       2015 00117$:
                                   2016 ;	board/zbs29_BW_uc/../uc8151.c:549: if (c % xsize == 0) {
      00061D E5 81            [12] 2017 	mov	a,sp
      00061F 24 FD            [12] 2018 	add	a,#0xfd
      000621 F8               [12] 2019 	mov	r0,a
      000622 90r00r00         [24] 2020 	mov	dptr,#__moduint_PARM_2
      000625 E6               [12] 2021 	mov	a,@r0
      000626 F0               [24] 2022 	movx	@dptr,a
      000627 08               [12] 2023 	inc	r0
      000628 E6               [12] 2024 	mov	a,@r0
      000629 A3               [24] 2025 	inc	dptr
      00062A F0               [24] 2026 	movx	@dptr,a
      00062B A8 81            [24] 2027 	mov	r0,sp
      00062D 18               [12] 2028 	dec	r0
      00062E 86 82            [24] 2029 	mov	dpl,@r0
      000630 08               [12] 2030 	inc	r0
      000631 86 83            [24] 2031 	mov	dph,@r0
      000633 C0 07            [24] 2032 	push	ar7
      000635 C0 06            [24] 2033 	push	ar6
      000637 C0 05            [24] 2034 	push	ar5
      000639 12r00r00         [24] 2035 	lcall	__moduint
      00063C E5 82            [12] 2036 	mov	a,dpl
      00063E 85 83 F0         [24] 2037 	mov	b,dph
      000641 D0 05            [24] 2038 	pop	ar5
      000643 D0 06            [24] 2039 	pop	ar6
      000645 D0 07            [24] 2040 	pop	ar7
      000647 45 F0            [12] 2041 	orl	a,b
      000649 60 03            [24] 2042 	jz	00157$
      00064B 02r07r92         [24] 2043 	ljmp	00113$
      00064E                       2044 00157$:
                                   2045 ;	board/zbs29_BW_uc/../uc8151.c:550: commandEnd();
                                   2046 ;	assignBit
      00064E D2 97            [12] 2047 	setb	_P1_7
                                   2048 ;	board/zbs29_BW_uc/../uc8151.c:551: if (drawDirection) {
      000650 90r00r08         [24] 2049 	mov	dptr,#_drawDirection
      000653 E0               [24] 2050 	movx	a,@dptr
      000654 70 03            [24] 2051 	jnz	00158$
      000656 02r06rDB         [24] 2052 	ljmp	00107$
      000659                       2053 00158$:
                                   2054 ;	board/zbs29_BW_uc/../uc8151.c:552: setWindowXY(x, x + xsize * 8, SCREEN_HEIGHT - curY - 1, SCREEN_HEIGHT - curY);
      000659 E5 81            [12] 2055 	mov	a,sp
      00065B 24 FD            [12] 2056 	add	a,#0xfd
      00065D F8               [12] 2057 	mov	r0,a
      00065E 86 03            [24] 2058 	mov	ar3,@r0
      000660 08               [12] 2059 	inc	r0
      000661 86 04            [24] 2060 	mov	ar4,@r0
      000663 E5 81            [12] 2061 	mov	a,sp
      000665 24 FB            [12] 2062 	add	a,#0xfb
      000667 F8               [12] 2063 	mov	r0,a
      000668 A6 03            [24] 2064 	mov	@r0,ar3
      00066A EC               [12] 2065 	mov	a,r4
      00066B C4               [12] 2066 	swap	a
      00066C 03               [12] 2067 	rr	a
      00066D 54 F8            [12] 2068 	anl	a,#0xf8
      00066F C6               [12] 2069 	xch	a,@r0
      000670 C4               [12] 2070 	swap	a
      000671 03               [12] 2071 	rr	a
      000672 C6               [12] 2072 	xch	a,@r0
      000673 66               [12] 2073 	xrl	a,@r0
      000674 C6               [12] 2074 	xch	a,@r0
      000675 54 F8            [12] 2075 	anl	a,#0xf8
      000677 C6               [12] 2076 	xch	a,@r0
      000678 66               [12] 2077 	xrl	a,@r0
      000679 08               [12] 2078 	inc	r0
      00067A F6               [12] 2079 	mov	@r0,a
      00067B E5 81            [12] 2080 	mov	a,sp
      00067D 24 F3            [12] 2081 	add	a,#0xf3
      00067F F8               [12] 2082 	mov	r0,a
      000680 86 02            [24] 2083 	mov	ar2,@r0
      000682 08               [12] 2084 	inc	r0
      000683 86 04            [24] 2085 	mov	ar4,@r0
      000685 E5 81            [12] 2086 	mov	a,sp
      000687 24 FB            [12] 2087 	add	a,#0xfb
      000689 F8               [12] 2088 	mov	r0,a
      00068A E6               [12] 2089 	mov	a,@r0
      00068B 2A               [12] 2090 	add	a,r2
      00068C FA               [12] 2091 	mov	r2,a
      00068D 08               [12] 2092 	inc	r0
      00068E E6               [12] 2093 	mov	a,@r0
      00068F 3C               [12] 2094 	addc	a,r4
      000690 FC               [12] 2095 	mov	r4,a
      000691 90r00rB9         [24] 2096 	mov	dptr,#_setWindowXY_PARM_2
      000694 EA               [12] 2097 	mov	a,r2
      000695 F0               [24] 2098 	movx	@dptr,a
      000696 EC               [12] 2099 	mov	a,r4
      000697 A3               [24] 2100 	inc	dptr
      000698 F0               [24] 2101 	movx	@dptr,a
      000699 E5 81            [12] 2102 	mov	a,sp
      00069B 24 F7            [12] 2103 	add	a,#0xf7
      00069D F8               [12] 2104 	mov	r0,a
      00069E 90r00rBB         [24] 2105 	mov	dptr,#_setWindowXY_PARM_3
      0006A1 74 27            [12] 2106 	mov	a,#0x27
      0006A3 C3               [12] 2107 	clr	c
      0006A4 96               [12] 2108 	subb	a,@r0
      0006A5 F0               [24] 2109 	movx	@dptr,a
      0006A6 74 01            [12] 2110 	mov	a,#0x01
      0006A8 08               [12] 2111 	inc	r0
      0006A9 96               [12] 2112 	subb	a,@r0
      0006AA A3               [24] 2113 	inc	dptr
      0006AB F0               [24] 2114 	movx	@dptr,a
      0006AC E5 81            [12] 2115 	mov	a,sp
      0006AE 24 F7            [12] 2116 	add	a,#0xf7
      0006B0 F8               [12] 2117 	mov	r0,a
      0006B1 90r00rBD         [24] 2118 	mov	dptr,#_setWindowXY_PARM_4
      0006B4 74 28            [12] 2119 	mov	a,#0x28
      0006B6 C3               [12] 2120 	clr	c
      0006B7 96               [12] 2121 	subb	a,@r0
      0006B8 F0               [24] 2122 	movx	@dptr,a
      0006B9 74 01            [12] 2123 	mov	a,#0x01
      0006BB 08               [12] 2124 	inc	r0
      0006BC 96               [12] 2125 	subb	a,@r0
      0006BD A3               [24] 2126 	inc	dptr
      0006BE F0               [24] 2127 	movx	@dptr,a
      0006BF E5 81            [12] 2128 	mov	a,sp
      0006C1 24 F3            [12] 2129 	add	a,#0xf3
      0006C3 F8               [12] 2130 	mov	r0,a
      0006C4 86 82            [24] 2131 	mov	dpl,@r0
      0006C6 08               [12] 2132 	inc	r0
      0006C7 86 83            [24] 2133 	mov	dph,@r0
      0006C9 C0 07            [24] 2134 	push	ar7
      0006CB C0 06            [24] 2135 	push	ar6
      0006CD C0 05            [24] 2136 	push	ar5
      0006CF 12r03rD2         [24] 2137 	lcall	_setWindowXY
      0006D2 D0 05            [24] 2138 	pop	ar5
      0006D4 D0 06            [24] 2139 	pop	ar6
      0006D6 D0 07            [24] 2140 	pop	ar7
      0006D8 02r07r59         [24] 2141 	ljmp	00108$
      0006DB                       2142 00107$:
                                   2143 ;	board/zbs29_BW_uc/../uc8151.c:554: setWindowXY(x, x + xsize * 8, curY - 1, curY);
      0006DB E5 81            [12] 2144 	mov	a,sp
      0006DD 24 FD            [12] 2145 	add	a,#0xfd
      0006DF F8               [12] 2146 	mov	r0,a
      0006E0 86 03            [24] 2147 	mov	ar3,@r0
      0006E2 08               [12] 2148 	inc	r0
      0006E3 86 04            [24] 2149 	mov	ar4,@r0
      0006E5 E5 81            [12] 2150 	mov	a,sp
      0006E7 24 FB            [12] 2151 	add	a,#0xfb
      0006E9 F8               [12] 2152 	mov	r0,a
      0006EA A6 03            [24] 2153 	mov	@r0,ar3
      0006EC EC               [12] 2154 	mov	a,r4
      0006ED C4               [12] 2155 	swap	a
      0006EE 03               [12] 2156 	rr	a
      0006EF 54 F8            [12] 2157 	anl	a,#0xf8
      0006F1 C6               [12] 2158 	xch	a,@r0
      0006F2 C4               [12] 2159 	swap	a
      0006F3 03               [12] 2160 	rr	a
      0006F4 C6               [12] 2161 	xch	a,@r0
      0006F5 66               [12] 2162 	xrl	a,@r0
      0006F6 C6               [12] 2163 	xch	a,@r0
      0006F7 54 F8            [12] 2164 	anl	a,#0xf8
      0006F9 C6               [12] 2165 	xch	a,@r0
      0006FA 66               [12] 2166 	xrl	a,@r0
      0006FB 08               [12] 2167 	inc	r0
      0006FC F6               [12] 2168 	mov	@r0,a
      0006FD E5 81            [12] 2169 	mov	a,sp
      0006FF 24 F3            [12] 2170 	add	a,#0xf3
      000701 F8               [12] 2171 	mov	r0,a
      000702 86 02            [24] 2172 	mov	ar2,@r0
      000704 08               [12] 2173 	inc	r0
      000705 86 04            [24] 2174 	mov	ar4,@r0
      000707 E5 81            [12] 2175 	mov	a,sp
      000709 24 FB            [12] 2176 	add	a,#0xfb
      00070B F8               [12] 2177 	mov	r0,a
      00070C E6               [12] 2178 	mov	a,@r0
      00070D 2A               [12] 2179 	add	a,r2
      00070E FA               [12] 2180 	mov	r2,a
      00070F 08               [12] 2181 	inc	r0
      000710 E6               [12] 2182 	mov	a,@r0
      000711 3C               [12] 2183 	addc	a,r4
      000712 FC               [12] 2184 	mov	r4,a
      000713 90r00rB9         [24] 2185 	mov	dptr,#_setWindowXY_PARM_2
      000716 EA               [12] 2186 	mov	a,r2
      000717 F0               [24] 2187 	movx	@dptr,a
      000718 EC               [12] 2188 	mov	a,r4
      000719 A3               [24] 2189 	inc	dptr
      00071A F0               [24] 2190 	movx	@dptr,a
      00071B E5 81            [12] 2191 	mov	a,sp
      00071D 24 F7            [12] 2192 	add	a,#0xf7
      00071F F8               [12] 2193 	mov	r0,a
      000720 86 03            [24] 2194 	mov	ar3,@r0
      000722 08               [12] 2195 	inc	r0
      000723 86 04            [24] 2196 	mov	ar4,@r0
      000725 1B               [12] 2197 	dec	r3
      000726 BB FF 01         [24] 2198 	cjne	r3,#0xff,00159$
      000729 1C               [12] 2199 	dec	r4
      00072A                       2200 00159$:
      00072A 90r00rBB         [24] 2201 	mov	dptr,#_setWindowXY_PARM_3
      00072D EB               [12] 2202 	mov	a,r3
      00072E F0               [24] 2203 	movx	@dptr,a
      00072F EC               [12] 2204 	mov	a,r4
      000730 A3               [24] 2205 	inc	dptr
      000731 F0               [24] 2206 	movx	@dptr,a
      000732 E5 81            [12] 2207 	mov	a,sp
      000734 24 F7            [12] 2208 	add	a,#0xf7
      000736 F8               [12] 2209 	mov	r0,a
      000737 90r00rBD         [24] 2210 	mov	dptr,#_setWindowXY_PARM_4
      00073A E6               [12] 2211 	mov	a,@r0
      00073B F0               [24] 2212 	movx	@dptr,a
      00073C 08               [12] 2213 	inc	r0
      00073D E6               [12] 2214 	mov	a,@r0
      00073E A3               [24] 2215 	inc	dptr
      00073F F0               [24] 2216 	movx	@dptr,a
      000740 E5 81            [12] 2217 	mov	a,sp
      000742 24 F3            [12] 2218 	add	a,#0xf3
      000744 F8               [12] 2219 	mov	r0,a
      000745 86 82            [24] 2220 	mov	dpl,@r0
      000747 08               [12] 2221 	inc	r0
      000748 86 83            [24] 2222 	mov	dph,@r0
      00074A C0 07            [24] 2223 	push	ar7
      00074C C0 06            [24] 2224 	push	ar6
      00074E C0 05            [24] 2225 	push	ar5
      000750 12r03rD2         [24] 2226 	lcall	_setWindowXY
      000753 D0 05            [24] 2227 	pop	ar5
      000755 D0 06            [24] 2228 	pop	ar6
      000757 D0 07            [24] 2229 	pop	ar7
                                   2230 ;	board/zbs29_BW_uc/../uc8151.c:568: shortCommand(CMD_PARTIAL_OUT);
                                   2231 ;	board/zbs29_BW_uc/../uc8151.c:554: setWindowXY(x, x + xsize * 8, curY - 1, curY);
      000759                       2232 00108$:
                                   2233 ;	board/zbs29_BW_uc/../uc8151.c:556: curY++;
      000759 E5 81            [12] 2234 	mov	a,sp
      00075B 24 F7            [12] 2235 	add	a,#0xf7
      00075D F8               [12] 2236 	mov	r0,a
      00075E 06               [12] 2237 	inc	@r0
      00075F B6 00 02         [24] 2238 	cjne	@r0,#0x00,00160$
      000762 08               [12] 2239 	inc	r0
      000763 06               [12] 2240 	inc	@r0
      000764                       2241 00160$:
                                   2242 ;	board/zbs29_BW_uc/../uc8151.c:557: if (color) {
      000764 E5 81            [12] 2243 	mov	a,sp
      000766 24 F0            [12] 2244 	add	a,#0xf0
      000768 F8               [12] 2245 	mov	r0,a
      000769 E6               [12] 2246 	mov	a,@r0
      00076A 60 14            [24] 2247 	jz	00110$
                                   2248 ;	board/zbs29_BW_uc/../uc8151.c:558: commandBegin(CMD_DISPLAY_START_TRANSMISSION_DTM2);
      00076C 75 82 13         [24] 2249 	mov	dpl,#0x13
      00076F C0 07            [24] 2250 	push	ar7
      000771 C0 06            [24] 2251 	push	ar6
      000773 C0 05            [24] 2252 	push	ar5
      000775 12r01rFB         [24] 2253 	lcall	_commandBegin
      000778 D0 05            [24] 2254 	pop	ar5
      00077A D0 06            [24] 2255 	pop	ar6
      00077C D0 07            [24] 2256 	pop	ar7
      00077E 80 12            [24] 2257 	sjmp	00113$
      000780                       2258 00110$:
                                   2259 ;	board/zbs29_BW_uc/../uc8151.c:560: commandBegin(CMD_DISPLAY_START_TRANSMISSION_DTM1);
      000780 75 82 13         [24] 2260 	mov	dpl,#0x13
      000783 C0 07            [24] 2261 	push	ar7
      000785 C0 06            [24] 2262 	push	ar6
      000787 C0 05            [24] 2263 	push	ar5
      000789 12r01rFB         [24] 2264 	lcall	_commandBegin
      00078C D0 05            [24] 2265 	pop	ar5
      00078E D0 06            [24] 2266 	pop	ar6
      000790 D0 07            [24] 2267 	pop	ar7
      000792                       2268 00113$:
                                   2269 ;	board/zbs29_BW_uc/../uc8151.c:563: epdSend(*(bmp++));
      000792 8D 82            [24] 2270 	mov	dpl,r5
      000794 8E 83            [24] 2271 	mov	dph,r6
      000796 8F F0            [24] 2272 	mov	b,r7
      000798 12r00r00         [24] 2273 	lcall	__gptrget
      00079B FB               [12] 2274 	mov	r3,a
      00079C A3               [24] 2275 	inc	dptr
      00079D AD 82            [24] 2276 	mov	r5,dpl
      00079F AE 83            [24] 2277 	mov	r6,dph
      0007A1 8B 82            [24] 2278 	mov	dpl,r3
      0007A3 12r00r00         [24] 2279 	lcall	_spiTXByte
                                   2280 ;	board/zbs29_BW_uc/../uc8151.c:564: c++;
      0007A6 A8 81            [24] 2281 	mov	r0,sp
      0007A8 18               [12] 2282 	dec	r0
      0007A9 06               [12] 2283 	inc	@r0
      0007AA B6 00 02         [24] 2284 	cjne	@r0,#0x00,00162$
      0007AD 08               [12] 2285 	inc	r0
      0007AE 06               [12] 2286 	inc	@r0
      0007AF                       2287 00162$:
                                   2288 ;	board/zbs29_BW_uc/../uc8151.c:565: if (!size--) break;
      0007AF E5 81            [12] 2289 	mov	a,sp
      0007B1 24 F9            [12] 2290 	add	a,#0xf9
      0007B3 F8               [12] 2291 	mov	r0,a
      0007B4 86 03            [24] 2292 	mov	ar3,@r0
      0007B6 08               [12] 2293 	inc	r0
      0007B7 86 04            [24] 2294 	mov	ar4,@r0
      0007B9 E5 81            [12] 2295 	mov	a,sp
      0007BB 24 F9            [12] 2296 	add	a,#0xf9
      0007BD F8               [12] 2297 	mov	r0,a
      0007BE 16               [12] 2298 	dec	@r0
      0007BF B6 FF 02         [24] 2299 	cjne	@r0,#0xff,00163$
      0007C2 08               [12] 2300 	inc	r0
      0007C3 16               [12] 2301 	dec	@r0
      0007C4                       2302 00163$:
      0007C4 EB               [12] 2303 	mov	a,r3
      0007C5 4C               [12] 2304 	orl	a,r4
      0007C6 60 03            [24] 2305 	jz	00164$
      0007C8 02r06r1D         [24] 2306 	ljmp	00117$
      0007CB                       2307 00164$:
                                   2308 ;	board/zbs29_BW_uc/../uc8151.c:567: commandEnd();
                                   2309 ;	assignBit
      0007CB D2 97            [12] 2310 	setb	_P1_7
                                   2311 ;	board/zbs29_BW_uc/../uc8151.c:568: shortCommand(CMD_PARTIAL_OUT);
      0007CD 75 82 92         [24] 2312 	mov	dpl,#0x92
      0007D0 12r01r9A         [24] 2313 	lcall	_shortCommand
                                   2314 ;	board/zbs29_BW_uc/../uc8151.c:569: }
      0007D3 E5 81            [12] 2315 	mov	a,sp
      0007D5 24 F6            [12] 2316 	add	a,#0xf6
      0007D7 F5 81            [12] 2317 	mov	sp,a
      0007D9 22               [24] 2318 	ret
                                   2319 ;------------------------------------------------------------
                                   2320 ;Allocation info for local variables in function 'printBarcode'
                                   2321 ;------------------------------------------------------------
                                   2322 ;x                         Allocated with name '_printBarcode_PARM_2'
                                   2323 ;y                         Allocated with name '_printBarcode_PARM_3'
                                   2324 ;string                    Allocated with name '_printBarcode_string_65536_210'
                                   2325 ;bci                       Allocated with name '_printBarcode_bci_65537_212'
                                   2326 ;------------------------------------------------------------
                                   2327 ;	board/zbs29_BW_uc/../uc8151.c:570: void printBarcode(const uint8_t* string, uint16_t x, uint16_t y) {
                                   2328 ;	-----------------------------------------
                                   2329 ;	 function printBarcode
                                   2330 ;	-----------------------------------------
      0007DA                       2331 _printBarcode:
      0007DA AF F0            [24] 2332 	mov	r7,b
      0007DC AE 83            [24] 2333 	mov	r6,dph
      0007DE E5 82            [12] 2334 	mov	a,dpl
      0007E0 90r00rCC         [24] 2335 	mov	dptr,#_printBarcode_string_65536_210
      0007E3 F0               [24] 2336 	movx	@dptr,a
      0007E4 EE               [12] 2337 	mov	a,r6
      0007E5 A3               [24] 2338 	inc	dptr
      0007E6 F0               [24] 2339 	movx	@dptr,a
      0007E7 EF               [12] 2340 	mov	a,r7
      0007E8 A3               [24] 2341 	inc	dptr
      0007E9 F0               [24] 2342 	movx	@dptr,a
                                   2343 ;	board/zbs29_BW_uc/../uc8151.c:571: setWindowXY(x, x + 8, SCREEN_HEIGHT - y, SCREEN_HEIGHT);
      0007EA 90r00rC8         [24] 2344 	mov	dptr,#_printBarcode_PARM_2
      0007ED E0               [24] 2345 	movx	a,@dptr
      0007EE FE               [12] 2346 	mov	r6,a
      0007EF A3               [24] 2347 	inc	dptr
      0007F0 E0               [24] 2348 	movx	a,@dptr
      0007F1 FF               [12] 2349 	mov	r7,a
      0007F2 8E 04            [24] 2350 	mov	ar4,r6
      0007F4 8F 05            [24] 2351 	mov	ar5,r7
      0007F6 74 08            [12] 2352 	mov	a,#0x08
      0007F8 2C               [12] 2353 	add	a,r4
      0007F9 FC               [12] 2354 	mov	r4,a
      0007FA E4               [12] 2355 	clr	a
      0007FB 3D               [12] 2356 	addc	a,r5
      0007FC FD               [12] 2357 	mov	r5,a
      0007FD 90r00rCA         [24] 2358 	mov	dptr,#_printBarcode_PARM_3
      000800 E0               [24] 2359 	movx	a,@dptr
      000801 FA               [12] 2360 	mov	r2,a
      000802 A3               [24] 2361 	inc	dptr
      000803 E0               [24] 2362 	movx	a,@dptr
      000804 FB               [12] 2363 	mov	r3,a
      000805 74 28            [12] 2364 	mov	a,#0x28
      000807 C3               [12] 2365 	clr	c
      000808 9A               [12] 2366 	subb	a,r2
      000809 FA               [12] 2367 	mov	r2,a
      00080A 74 01            [12] 2368 	mov	a,#0x01
      00080C 9B               [12] 2369 	subb	a,r3
      00080D FB               [12] 2370 	mov	r3,a
      00080E 90r00rB9         [24] 2371 	mov	dptr,#_setWindowXY_PARM_2
      000811 EC               [12] 2372 	mov	a,r4
      000812 F0               [24] 2373 	movx	@dptr,a
      000813 ED               [12] 2374 	mov	a,r5
      000814 A3               [24] 2375 	inc	dptr
      000815 F0               [24] 2376 	movx	@dptr,a
      000816 90r00rBB         [24] 2377 	mov	dptr,#_setWindowXY_PARM_3
      000819 EA               [12] 2378 	mov	a,r2
      00081A F0               [24] 2379 	movx	@dptr,a
      00081B EB               [12] 2380 	mov	a,r3
      00081C A3               [24] 2381 	inc	dptr
      00081D F0               [24] 2382 	movx	@dptr,a
      00081E 90r00rBD         [24] 2383 	mov	dptr,#_setWindowXY_PARM_4
      000821 74 28            [12] 2384 	mov	a,#0x28
      000823 F0               [24] 2385 	movx	@dptr,a
      000824 74 01            [12] 2386 	mov	a,#0x01
      000826 A3               [24] 2387 	inc	dptr
      000827 F0               [24] 2388 	movx	@dptr,a
      000828 8E 82            [24] 2389 	mov	dpl,r6
      00082A 8F 83            [24] 2390 	mov	dph,r7
      00082C 12r03rD2         [24] 2391 	lcall	_setWindowXY
                                   2392 ;	board/zbs29_BW_uc/../uc8151.c:572: commandBegin(CMD_DISPLAY_START_TRANSMISSION_DTM1);
      00082F 75 82 13         [24] 2393 	mov	dpl,#0x13
      000832 12r01rFB         [24] 2394 	lcall	_commandBegin
                                   2395 ;	board/zbs29_BW_uc/../uc8151.c:573: struct BarcodeInfo __xdata bci = {
      000835 90r00rCC         [24] 2396 	mov	dptr,#_printBarcode_string_65536_210
      000838 E0               [24] 2397 	movx	a,@dptr
      000839 FD               [12] 2398 	mov	r5,a
      00083A A3               [24] 2399 	inc	dptr
      00083B E0               [24] 2400 	movx	a,@dptr
      00083C FE               [12] 2401 	mov	r6,a
      00083D A3               [24] 2402 	inc	dptr
      00083E E0               [24] 2403 	movx	a,@dptr
      00083F FF               [12] 2404 	mov	r7,a
      000840 90r00rCF         [24] 2405 	mov	dptr,#_printBarcode_bci_65537_212
      000843 ED               [12] 2406 	mov	a,r5
      000844 F0               [24] 2407 	movx	@dptr,a
      000845 EE               [12] 2408 	mov	a,r6
      000846 A3               [24] 2409 	inc	dptr
      000847 F0               [24] 2410 	movx	@dptr,a
      000848 EF               [12] 2411 	mov	a,r7
      000849 A3               [24] 2412 	inc	dptr
      00084A F0               [24] 2413 	movx	@dptr,a
      00084B 90r00rD2         [24] 2414 	mov	dptr,#(_printBarcode_bci_65537_212 + 0x0003)
      00084E E4               [12] 2415 	clr	a
      00084F F0               [24] 2416 	movx	@dptr,a
      000850 A3               [24] 2417 	inc	dptr
      000851 F0               [24] 2418 	movx	@dptr,a
      000852 90r00rD4         [24] 2419 	mov	dptr,#(_printBarcode_bci_65537_212 + 0x0005)
      000855 F0               [24] 2420 	movx	@dptr,a
      000856 90r00rD5         [24] 2421 	mov	dptr,#(_printBarcode_bci_65537_212 + 0x0006)
      000859 F0               [24] 2422 	movx	@dptr,a
      00085A 90r00rD6         [24] 2423 	mov	dptr,#(_printBarcode_bci_65537_212 + 0x0007)
      00085D F0               [24] 2424 	movx	@dptr,a
      00085E 90r00rD7         [24] 2425 	mov	dptr,#(_printBarcode_bci_65537_212 + 0x0008)
      000861 F0               [24] 2426 	movx	@dptr,a
                                   2427 ;	board/zbs29_BW_uc/../uc8151.c:576: while (!barcodeIsDone(&bci)) {
      000862                       2428 00104$:
      000862 90r00rCF         [24] 2429 	mov	dptr,#_printBarcode_bci_65537_212
      000865 12r00r00         [24] 2430 	lcall	_barcodeIsDone
      000868 40 18            [24] 2431 	jc	00107$
                                   2432 ;	board/zbs29_BW_uc/../uc8151.c:577: if (barcodeNextBar(&bci)) {
      00086A 90r00rCF         [24] 2433 	mov	dptr,#_printBarcode_bci_65537_212
      00086D 12r00r00         [24] 2434 	lcall	_barcodeNextBar
      000870 50 08            [24] 2435 	jnc	00102$
                                   2436 ;	board/zbs29_BW_uc/../uc8151.c:578: epdSend(0xFF);
      000872 75 82 FF         [24] 2437 	mov	dpl,#0xff
      000875 12r00r00         [24] 2438 	lcall	_spiTXByte
      000878 80 E8            [24] 2439 	sjmp	00104$
      00087A                       2440 00102$:
                                   2441 ;	board/zbs29_BW_uc/../uc8151.c:580: epdSend(0x00);
      00087A 75 82 00         [24] 2442 	mov	dpl,#0x00
      00087D 12r00r00         [24] 2443 	lcall	_spiTXByte
                                   2444 ;	board/zbs29_BW_uc/../uc8151.c:583: commandEnd();
      000880 80 E0            [24] 2445 	sjmp	00104$
      000882                       2446 00107$:
                                   2447 ;	assignBit
      000882 D2 97            [12] 2448 	setb	_P1_7
                                   2449 ;	board/zbs29_BW_uc/../uc8151.c:584: shortCommand(CMD_PARTIAL_OUT);
      000884 75 82 92         [24] 2450 	mov	dpl,#0x92
                                   2451 ;	board/zbs29_BW_uc/../uc8151.c:585: }
      000887 02r01r9A         [24] 2452 	ljmp	_shortCommand
                                   2453 ;------------------------------------------------------------
                                   2454 ;Allocation info for local variables in function 'pushXFontBytesToEPD'
                                   2455 ;------------------------------------------------------------
                                   2456 ;byte2                     Allocated with name '_pushXFontBytesToEPD_PARM_2'
                                   2457 ;byte1                     Allocated with name '_pushXFontBytesToEPD_byte1_65536_217'
                                   2458 ;offset                    Allocated with name '_pushXFontBytesToEPD_offset_131072_219'
                                   2459 ;c                         Allocated with name '_pushXFontBytesToEPD_c_196608_220'
                                   2460 ;c                         Allocated with name '_pushXFontBytesToEPD_c_196608_222'
                                   2461 ;offset                    Allocated with name '_pushXFontBytesToEPD_offset_131072_224'
                                   2462 ;c                         Allocated with name '_pushXFontBytesToEPD_c_196608_225'
                                   2463 ;c                         Allocated with name '_pushXFontBytesToEPD_c_196608_228'
                                   2464 ;i                         Allocated with name '_pushXFontBytesToEPD_i_196608_232'
                                   2465 ;------------------------------------------------------------
                                   2466 ;	board/zbs29_BW_uc/../uc8151.c:587: static void pushXFontBytesToEPD(uint8_t byte1, uint8_t byte2) {
                                   2467 ;	-----------------------------------------
                                   2468 ;	 function pushXFontBytesToEPD
                                   2469 ;	-----------------------------------------
      00088A                       2470 _pushXFontBytesToEPD:
      00088A E5 82            [12] 2471 	mov	a,dpl
      00088C 90r00rD9         [24] 2472 	mov	dptr,#_pushXFontBytesToEPD_byte1_65536_217
      00088F F0               [24] 2473 	movx	@dptr,a
                                   2474 ;	board/zbs29_BW_uc/../uc8151.c:588: if (epdCharSize == 1) {
      000890 90r00r00         [24] 2475 	mov	dptr,#_epdCharSize
      000893 E0               [24] 2476 	movx	a,@dptr
      000894 FF               [12] 2477 	mov	r7,a
      000895 BF 01 02         [24] 2478 	cjne	r7,#0x01,00205$
      000898 80 03            [24] 2479 	sjmp	00206$
      00089A                       2480 00205$:
      00089A 02r09r86         [24] 2481 	ljmp	00114$
      00089D                       2482 00206$:
                                   2483 ;	board/zbs29_BW_uc/../uc8151.c:589: uint8_t offset = 7 - (fontCurXpos % 8);
      00089D 90r00r02         [24] 2484 	mov	dptr,#_fontCurXpos
      0008A0 E0               [24] 2485 	movx	a,@dptr
      0008A1 FE               [12] 2486 	mov	r6,a
      0008A2 A3               [24] 2487 	inc	dptr
      0008A3 E0               [24] 2488 	movx	a,@dptr
      0008A4 53 06 07         [24] 2489 	anl	ar6,#0x07
      0008A7 74 07            [12] 2490 	mov	a,#0x07
      0008A9 C3               [12] 2491 	clr	c
      0008AA 9E               [12] 2492 	subb	a,r6
      0008AB FE               [12] 2493 	mov	r6,a
      0008AC 90r00rDA         [24] 2494 	mov	dptr,#_pushXFontBytesToEPD_offset_131072_219
      0008AF F0               [24] 2495 	movx	@dptr,a
                                   2496 ;	board/zbs29_BW_uc/../uc8151.c:590: for (uint8_t c = 0; c < 8; c++) {
      0008B0 8E 07            [24] 2497 	mov	ar7,r6
      0008B2 90r00rD8         [24] 2498 	mov	dptr,#_pushXFontBytesToEPD_PARM_2
      0008B5 E0               [24] 2499 	movx	a,@dptr
      0008B6 FE               [12] 2500 	mov	r6,a
      0008B7 7D 00            [12] 2501 	mov	r5,#0x00
      0008B9                       2502 00120$:
      0008B9 BD 08 00         [24] 2503 	cjne	r5,#0x08,00207$
      0008BC                       2504 00207$:
      0008BC 50 4F            [24] 2505 	jnc	00103$
                                   2506 ;	board/zbs29_BW_uc/../uc8151.c:591: if (byte2 & (1 << (7 - c))) rbuffer[c] |= (1 << offset);
      0008BE 74 07            [12] 2507 	mov	a,#0x07
      0008C0 C3               [12] 2508 	clr	c
      0008C1 9D               [12] 2509 	subb	a,r5
      0008C2 FC               [12] 2510 	mov	r4,a
      0008C3 8C F0            [24] 2511 	mov	b,r4
      0008C5 05 F0            [12] 2512 	inc	b
      0008C7 7C 01            [12] 2513 	mov	r4,#0x01
      0008C9 7B 00            [12] 2514 	mov	r3,#0x00
      0008CB 80 06            [24] 2515 	sjmp	00210$
      0008CD                       2516 00209$:
      0008CD EC               [12] 2517 	mov	a,r4
      0008CE 2C               [12] 2518 	add	a,r4
      0008CF FC               [12] 2519 	mov	r4,a
      0008D0 EB               [12] 2520 	mov	a,r3
      0008D1 33               [12] 2521 	rlc	a
      0008D2 FB               [12] 2522 	mov	r3,a
      0008D3                       2523 00210$:
      0008D3 D5 F0 F7         [24] 2524 	djnz	b,00209$
      0008D6 8E 01            [24] 2525 	mov	ar1,r6
      0008D8 7A 00            [12] 2526 	mov	r2,#0x00
      0008DA E9               [12] 2527 	mov	a,r1
      0008DB 52 04            [12] 2528 	anl	ar4,a
      0008DD EA               [12] 2529 	mov	a,r2
      0008DE 52 03            [12] 2530 	anl	ar3,a
      0008E0 EC               [12] 2531 	mov	a,r4
      0008E1 4B               [12] 2532 	orl	a,r3
      0008E2 60 26            [24] 2533 	jz	00121$
      0008E4 ED               [12] 2534 	mov	a,r5
      0008E5 24r00            [12] 2535 	add	a,#_rbuffer
      0008E7 FB               [12] 2536 	mov	r3,a
      0008E8 E4               [12] 2537 	clr	a
      0008E9 34s00            [12] 2538 	addc	a,#(_rbuffer >> 8)
      0008EB FC               [12] 2539 	mov	r4,a
      0008EC 8B 82            [24] 2540 	mov	dpl,r3
      0008EE 8C 83            [24] 2541 	mov	dph,r4
      0008F0 E0               [24] 2542 	movx	a,@dptr
      0008F1 FA               [12] 2543 	mov	r2,a
      0008F2 8F 01            [24] 2544 	mov	ar1,r7
      0008F4 89 F0            [24] 2545 	mov	b,r1
      0008F6 05 F0            [12] 2546 	inc	b
      0008F8 74 01            [12] 2547 	mov	a,#0x01
      0008FA 80 02            [24] 2548 	sjmp	00214$
      0008FC                       2549 00212$:
      0008FC 25 E0            [12] 2550 	add	a,acc
      0008FE                       2551 00214$:
      0008FE D5 F0 FB         [24] 2552 	djnz	b,00212$
      000901 F9               [12] 2553 	mov	r1,a
      000902 42 02            [12] 2554 	orl	ar2,a
      000904 8B 82            [24] 2555 	mov	dpl,r3
      000906 8C 83            [24] 2556 	mov	dph,r4
      000908 EA               [12] 2557 	mov	a,r2
      000909 F0               [24] 2558 	movx	@dptr,a
      00090A                       2559 00121$:
                                   2560 ;	board/zbs29_BW_uc/../uc8151.c:590: for (uint8_t c = 0; c < 8; c++) {
      00090A 0D               [12] 2561 	inc	r5
      00090B 80 AC            [24] 2562 	sjmp	00120$
      00090D                       2563 00103$:
                                   2564 ;	board/zbs29_BW_uc/../uc8151.c:593: for (uint8_t c = 0; c < 8; c++) {
      00090D 90r00rDA         [24] 2565 	mov	dptr,#_pushXFontBytesToEPD_offset_131072_219
      000910 E0               [24] 2566 	movx	a,@dptr
      000911 FF               [12] 2567 	mov	r7,a
      000912 90r00rD9         [24] 2568 	mov	dptr,#_pushXFontBytesToEPD_byte1_65536_217
      000915 E0               [24] 2569 	movx	a,@dptr
      000916 FE               [12] 2570 	mov	r6,a
      000917 7D 00            [12] 2571 	mov	r5,#0x00
      000919                       2572 00123$:
      000919 BD 08 00         [24] 2573 	cjne	r5,#0x08,00215$
      00091C                       2574 00215$:
      00091C 50 59            [24] 2575 	jnc	00106$
                                   2576 ;	board/zbs29_BW_uc/../uc8151.c:594: if (byte1 & (1 << (7 - c))) rbuffer[8 + c] |= (1 << offset);
      00091E 74 07            [12] 2577 	mov	a,#0x07
      000920 C3               [12] 2578 	clr	c
      000921 9D               [12] 2579 	subb	a,r5
      000922 FC               [12] 2580 	mov	r4,a
      000923 8C F0            [24] 2581 	mov	b,r4
      000925 05 F0            [12] 2582 	inc	b
      000927 7C 01            [12] 2583 	mov	r4,#0x01
      000929 7B 00            [12] 2584 	mov	r3,#0x00
      00092B 80 06            [24] 2585 	sjmp	00218$
      00092D                       2586 00217$:
      00092D EC               [12] 2587 	mov	a,r4
      00092E 2C               [12] 2588 	add	a,r4
      00092F FC               [12] 2589 	mov	r4,a
      000930 EB               [12] 2590 	mov	a,r3
      000931 33               [12] 2591 	rlc	a
      000932 FB               [12] 2592 	mov	r3,a
      000933                       2593 00218$:
      000933 D5 F0 F7         [24] 2594 	djnz	b,00217$
      000936 8E 01            [24] 2595 	mov	ar1,r6
      000938 7A 00            [12] 2596 	mov	r2,#0x00
      00093A E9               [12] 2597 	mov	a,r1
      00093B 52 04            [12] 2598 	anl	ar4,a
      00093D EA               [12] 2599 	mov	a,r2
      00093E 52 03            [12] 2600 	anl	ar3,a
      000940 EC               [12] 2601 	mov	a,r4
      000941 4B               [12] 2602 	orl	a,r3
      000942 60 30            [24] 2603 	jz	00124$
      000944 8D 04            [24] 2604 	mov	ar4,r5
      000946 74 08            [12] 2605 	mov	a,#0x08
      000948 2C               [12] 2606 	add	a,r4
      000949 FC               [12] 2607 	mov	r4,a
      00094A 33               [12] 2608 	rlc	a
      00094B 95 E0            [12] 2609 	subb	a,acc
      00094D FB               [12] 2610 	mov	r3,a
      00094E EC               [12] 2611 	mov	a,r4
      00094F 24r00            [12] 2612 	add	a,#_rbuffer
      000951 FC               [12] 2613 	mov	r4,a
      000952 EB               [12] 2614 	mov	a,r3
      000953 34s00            [12] 2615 	addc	a,#(_rbuffer >> 8)
      000955 FB               [12] 2616 	mov	r3,a
      000956 8C 82            [24] 2617 	mov	dpl,r4
      000958 8B 83            [24] 2618 	mov	dph,r3
      00095A E0               [24] 2619 	movx	a,@dptr
      00095B FA               [12] 2620 	mov	r2,a
      00095C 8F 01            [24] 2621 	mov	ar1,r7
      00095E 89 F0            [24] 2622 	mov	b,r1
      000960 05 F0            [12] 2623 	inc	b
      000962 74 01            [12] 2624 	mov	a,#0x01
      000964 80 02            [24] 2625 	sjmp	00222$
      000966                       2626 00220$:
      000966 25 E0            [12] 2627 	add	a,acc
      000968                       2628 00222$:
      000968 D5 F0 FB         [24] 2629 	djnz	b,00220$
      00096B F9               [12] 2630 	mov	r1,a
      00096C 42 02            [12] 2631 	orl	ar2,a
      00096E 8C 82            [24] 2632 	mov	dpl,r4
      000970 8B 83            [24] 2633 	mov	dph,r3
      000972 EA               [12] 2634 	mov	a,r2
      000973 F0               [24] 2635 	movx	@dptr,a
      000974                       2636 00124$:
                                   2637 ;	board/zbs29_BW_uc/../uc8151.c:593: for (uint8_t c = 0; c < 8; c++) {
      000974 0D               [12] 2638 	inc	r5
      000975 80 A2            [24] 2639 	sjmp	00123$
      000977                       2640 00106$:
                                   2641 ;	board/zbs29_BW_uc/../uc8151.c:596: fontCurXpos++;
      000977 90r00r02         [24] 2642 	mov	dptr,#_fontCurXpos
      00097A E0               [24] 2643 	movx	a,@dptr
      00097B 24 01            [12] 2644 	add	a,#0x01
      00097D F0               [24] 2645 	movx	@dptr,a
      00097E A3               [24] 2646 	inc	dptr
      00097F E0               [24] 2647 	movx	a,@dptr
      000980 34 00            [12] 2648 	addc	a,#0x00
      000982 F0               [24] 2649 	movx	@dptr,a
      000983 02r0ArCA         [24] 2650 	ljmp	00115$
      000986                       2651 00114$:
                                   2652 ;	board/zbs29_BW_uc/../uc8151.c:598: uint8_t offset = 6 - (fontCurXpos % 8);
      000986 90r00r02         [24] 2653 	mov	dptr,#_fontCurXpos
      000989 E0               [24] 2654 	movx	a,@dptr
      00098A FE               [12] 2655 	mov	r6,a
      00098B A3               [24] 2656 	inc	dptr
      00098C E0               [24] 2657 	movx	a,@dptr
      00098D 53 06 07         [24] 2658 	anl	ar6,#0x07
      000990 74 06            [12] 2659 	mov	a,#0x06
      000992 C3               [12] 2660 	clr	c
      000993 9E               [12] 2661 	subb	a,r6
      000994 FE               [12] 2662 	mov	r6,a
      000995 90r00rDB         [24] 2663 	mov	dptr,#_pushXFontBytesToEPD_offset_131072_224
      000998 F0               [24] 2664 	movx	@dptr,a
                                   2665 ;	board/zbs29_BW_uc/../uc8151.c:600: for (uint8_t c = 0; c < 8; c++) {
      000999 8E 07            [24] 2666 	mov	ar7,r6
      00099B 90r00rD8         [24] 2667 	mov	dptr,#_pushXFontBytesToEPD_PARM_2
      00099E E0               [24] 2668 	movx	a,@dptr
      00099F FE               [12] 2669 	mov	r6,a
      0009A0 7D 00            [12] 2670 	mov	r5,#0x00
      0009A2                       2671 00126$:
      0009A2 BD 08 00         [24] 2672 	cjne	r5,#0x08,00223$
      0009A5                       2673 00223$:
      0009A5 40 03            [24] 2674 	jc	00224$
      0009A7 02r0Ar25         [24] 2675 	ljmp	00109$
      0009AA                       2676 00224$:
                                   2677 ;	board/zbs29_BW_uc/../uc8151.c:601: if (byte2 & (1 << (7 - c))) {
      0009AA 74 07            [12] 2678 	mov	a,#0x07
      0009AC C3               [12] 2679 	clr	c
      0009AD 9D               [12] 2680 	subb	a,r5
      0009AE FC               [12] 2681 	mov	r4,a
      0009AF 8C F0            [24] 2682 	mov	b,r4
      0009B1 05 F0            [12] 2683 	inc	b
      0009B3 7C 01            [12] 2684 	mov	r4,#0x01
      0009B5 7B 00            [12] 2685 	mov	r3,#0x00
      0009B7 80 06            [24] 2686 	sjmp	00226$
      0009B9                       2687 00225$:
      0009B9 EC               [12] 2688 	mov	a,r4
      0009BA 2C               [12] 2689 	add	a,r4
      0009BB FC               [12] 2690 	mov	r4,a
      0009BC EB               [12] 2691 	mov	a,r3
      0009BD 33               [12] 2692 	rlc	a
      0009BE FB               [12] 2693 	mov	r3,a
      0009BF                       2694 00226$:
      0009BF D5 F0 F7         [24] 2695 	djnz	b,00225$
      0009C2 8E 01            [24] 2696 	mov	ar1,r6
      0009C4 7A 00            [12] 2697 	mov	r2,#0x00
      0009C6 E9               [12] 2698 	mov	a,r1
      0009C7 52 04            [12] 2699 	anl	ar4,a
      0009C9 EA               [12] 2700 	mov	a,r2
      0009CA 52 03            [12] 2701 	anl	ar3,a
      0009CC EC               [12] 2702 	mov	a,r4
      0009CD 4B               [12] 2703 	orl	a,r3
      0009CE 60 51            [24] 2704 	jz	00127$
                                   2705 ;	board/zbs29_BW_uc/../uc8151.c:602: rbuffer[c * 2] |= (3 << offset);
      0009D0 8D 03            [24] 2706 	mov	ar3,r5
      0009D2 7C 00            [12] 2707 	mov	r4,#0x00
      0009D4 EB               [12] 2708 	mov	a,r3
      0009D5 2B               [12] 2709 	add	a,r3
      0009D6 FB               [12] 2710 	mov	r3,a
      0009D7 EC               [12] 2711 	mov	a,r4
      0009D8 33               [12] 2712 	rlc	a
      0009D9 FC               [12] 2713 	mov	r4,a
      0009DA EB               [12] 2714 	mov	a,r3
      0009DB 24r00            [12] 2715 	add	a,#_rbuffer
      0009DD FB               [12] 2716 	mov	r3,a
      0009DE EC               [12] 2717 	mov	a,r4
      0009DF 34s00            [12] 2718 	addc	a,#(_rbuffer >> 8)
      0009E1 FC               [12] 2719 	mov	r4,a
      0009E2 8B 82            [24] 2720 	mov	dpl,r3
      0009E4 8C 83            [24] 2721 	mov	dph,r4
      0009E6 E0               [24] 2722 	movx	a,@dptr
      0009E7 FA               [12] 2723 	mov	r2,a
      0009E8 8F 01            [24] 2724 	mov	ar1,r7
      0009EA 89 F0            [24] 2725 	mov	b,r1
      0009EC 05 F0            [12] 2726 	inc	b
      0009EE 74 03            [12] 2727 	mov	a,#0x03
      0009F0 80 02            [24] 2728 	sjmp	00230$
      0009F2                       2729 00228$:
      0009F2 25 E0            [12] 2730 	add	a,acc
      0009F4                       2731 00230$:
      0009F4 D5 F0 FB         [24] 2732 	djnz	b,00228$
      0009F7 F9               [12] 2733 	mov	r1,a
      0009F8 42 02            [12] 2734 	orl	ar2,a
      0009FA 8B 82            [24] 2735 	mov	dpl,r3
      0009FC 8C 83            [24] 2736 	mov	dph,r4
      0009FE EA               [12] 2737 	mov	a,r2
      0009FF F0               [24] 2738 	movx	@dptr,a
                                   2739 ;	board/zbs29_BW_uc/../uc8151.c:603: rbuffer[(c * 2) + 1] |= (3 << offset);
      000A00 8D 04            [24] 2740 	mov	ar4,r5
      000A02 EC               [12] 2741 	mov	a,r4
      000A03 2C               [12] 2742 	add	a,r4
      000A04 FC               [12] 2743 	mov	r4,a
      000A05 0C               [12] 2744 	inc	r4
      000A06 EC               [12] 2745 	mov	a,r4
      000A07 33               [12] 2746 	rlc	a
      000A08 95 E0            [12] 2747 	subb	a,acc
      000A0A FB               [12] 2748 	mov	r3,a
      000A0B EC               [12] 2749 	mov	a,r4
      000A0C 24r00            [12] 2750 	add	a,#_rbuffer
      000A0E FC               [12] 2751 	mov	r4,a
      000A0F EB               [12] 2752 	mov	a,r3
      000A10 34s00            [12] 2753 	addc	a,#(_rbuffer >> 8)
      000A12 FB               [12] 2754 	mov	r3,a
      000A13 8C 82            [24] 2755 	mov	dpl,r4
      000A15 8B 83            [24] 2756 	mov	dph,r3
      000A17 E0               [24] 2757 	movx	a,@dptr
      000A18 FA               [12] 2758 	mov	r2,a
      000A19 42 01            [12] 2759 	orl	ar1,a
      000A1B 8C 82            [24] 2760 	mov	dpl,r4
      000A1D 8B 83            [24] 2761 	mov	dph,r3
      000A1F E9               [12] 2762 	mov	a,r1
      000A20 F0               [24] 2763 	movx	@dptr,a
      000A21                       2764 00127$:
                                   2765 ;	board/zbs29_BW_uc/../uc8151.c:600: for (uint8_t c = 0; c < 8; c++) {
      000A21 0D               [12] 2766 	inc	r5
      000A22 02r09rA2         [24] 2767 	ljmp	00126$
      000A25                       2768 00109$:
                                   2769 ;	board/zbs29_BW_uc/../uc8151.c:606: for (uint8_t c = 0; c < 8; c++) {
      000A25 90r00rDB         [24] 2770 	mov	dptr,#_pushXFontBytesToEPD_offset_131072_224
      000A28 E0               [24] 2771 	movx	a,@dptr
      000A29 FF               [12] 2772 	mov	r7,a
      000A2A 90r00rD9         [24] 2773 	mov	dptr,#_pushXFontBytesToEPD_byte1_65536_217
      000A2D E0               [24] 2774 	movx	a,@dptr
      000A2E FE               [12] 2775 	mov	r6,a
      000A2F 7D 00            [12] 2776 	mov	r5,#0x00
      000A31                       2777 00129$:
      000A31 BD 08 00         [24] 2778 	cjne	r5,#0x08,00231$
      000A34                       2779 00231$:
      000A34 40 03            [24] 2780 	jc	00232$
      000A36 02r0ArB3         [24] 2781 	ljmp	00112$
      000A39                       2782 00232$:
                                   2783 ;	board/zbs29_BW_uc/../uc8151.c:607: if (byte1 & (1 << (7 - c))) {
      000A39 74 07            [12] 2784 	mov	a,#0x07
      000A3B C3               [12] 2785 	clr	c
      000A3C 9D               [12] 2786 	subb	a,r5
      000A3D FC               [12] 2787 	mov	r4,a
      000A3E 8C F0            [24] 2788 	mov	b,r4
      000A40 05 F0            [12] 2789 	inc	b
      000A42 7C 01            [12] 2790 	mov	r4,#0x01
      000A44 7B 00            [12] 2791 	mov	r3,#0x00
      000A46 80 06            [24] 2792 	sjmp	00234$
      000A48                       2793 00233$:
      000A48 EC               [12] 2794 	mov	a,r4
      000A49 2C               [12] 2795 	add	a,r4
      000A4A FC               [12] 2796 	mov	r4,a
      000A4B EB               [12] 2797 	mov	a,r3
      000A4C 33               [12] 2798 	rlc	a
      000A4D FB               [12] 2799 	mov	r3,a
      000A4E                       2800 00234$:
      000A4E D5 F0 F7         [24] 2801 	djnz	b,00233$
      000A51 8E 01            [24] 2802 	mov	ar1,r6
      000A53 7A 00            [12] 2803 	mov	r2,#0x00
      000A55 E9               [12] 2804 	mov	a,r1
      000A56 52 04            [12] 2805 	anl	ar4,a
      000A58 EA               [12] 2806 	mov	a,r2
      000A59 52 03            [12] 2807 	anl	ar3,a
      000A5B EC               [12] 2808 	mov	a,r4
      000A5C 4B               [12] 2809 	orl	a,r3
      000A5D 60 50            [24] 2810 	jz	00130$
                                   2811 ;	board/zbs29_BW_uc/../uc8151.c:608: rbuffer[(c * 2) + 16] |= (3 << offset);
      000A5F 8D 04            [24] 2812 	mov	ar4,r5
      000A61 EC               [12] 2813 	mov	a,r4
      000A62 2C               [12] 2814 	add	a,r4
      000A63 FC               [12] 2815 	mov	r4,a
      000A64 24 10            [12] 2816 	add	a,#0x10
      000A66 FB               [12] 2817 	mov	r3,a
      000A67 33               [12] 2818 	rlc	a
      000A68 95 E0            [12] 2819 	subb	a,acc
      000A6A FA               [12] 2820 	mov	r2,a
      000A6B EB               [12] 2821 	mov	a,r3
      000A6C 24r00            [12] 2822 	add	a,#_rbuffer
      000A6E FB               [12] 2823 	mov	r3,a
      000A6F EA               [12] 2824 	mov	a,r2
      000A70 34s00            [12] 2825 	addc	a,#(_rbuffer >> 8)
      000A72 FA               [12] 2826 	mov	r2,a
      000A73 8B 82            [24] 2827 	mov	dpl,r3
      000A75 8A 83            [24] 2828 	mov	dph,r2
      000A77 E0               [24] 2829 	movx	a,@dptr
      000A78 F9               [12] 2830 	mov	r1,a
      000A79 8F 00            [24] 2831 	mov	ar0,r7
      000A7B 88 F0            [24] 2832 	mov	b,r0
      000A7D 05 F0            [12] 2833 	inc	b
      000A7F 74 03            [12] 2834 	mov	a,#0x03
      000A81 80 02            [24] 2835 	sjmp	00238$
      000A83                       2836 00236$:
      000A83 25 E0            [12] 2837 	add	a,acc
      000A85                       2838 00238$:
      000A85 D5 F0 FB         [24] 2839 	djnz	b,00236$
      000A88 F8               [12] 2840 	mov	r0,a
      000A89 42 01            [12] 2841 	orl	ar1,a
      000A8B 8B 82            [24] 2842 	mov	dpl,r3
      000A8D 8A 83            [24] 2843 	mov	dph,r2
      000A8F E9               [12] 2844 	mov	a,r1
      000A90 F0               [24] 2845 	movx	@dptr,a
                                   2846 ;	board/zbs29_BW_uc/../uc8151.c:609: rbuffer[(c * 2) + 17] |= (3 << offset);
      000A91 74 11            [12] 2847 	mov	a,#0x11
      000A93 2C               [12] 2848 	add	a,r4
      000A94 FC               [12] 2849 	mov	r4,a
      000A95 33               [12] 2850 	rlc	a
      000A96 95 E0            [12] 2851 	subb	a,acc
      000A98 FB               [12] 2852 	mov	r3,a
      000A99 EC               [12] 2853 	mov	a,r4
      000A9A 24r00            [12] 2854 	add	a,#_rbuffer
      000A9C FC               [12] 2855 	mov	r4,a
      000A9D EB               [12] 2856 	mov	a,r3
      000A9E 34s00            [12] 2857 	addc	a,#(_rbuffer >> 8)
      000AA0 FB               [12] 2858 	mov	r3,a
      000AA1 8C 82            [24] 2859 	mov	dpl,r4
      000AA3 8B 83            [24] 2860 	mov	dph,r3
      000AA5 E0               [24] 2861 	movx	a,@dptr
      000AA6 FA               [12] 2862 	mov	r2,a
      000AA7 42 00            [12] 2863 	orl	ar0,a
      000AA9 8C 82            [24] 2864 	mov	dpl,r4
      000AAB 8B 83            [24] 2865 	mov	dph,r3
      000AAD E8               [12] 2866 	mov	a,r0
      000AAE F0               [24] 2867 	movx	@dptr,a
      000AAF                       2868 00130$:
                                   2869 ;	board/zbs29_BW_uc/../uc8151.c:606: for (uint8_t c = 0; c < 8; c++) {
      000AAF 0D               [12] 2870 	inc	r5
      000AB0 02r0Ar31         [24] 2871 	ljmp	00129$
      000AB3                       2872 00112$:
                                   2873 ;	board/zbs29_BW_uc/../uc8151.c:612: fontCurXpos += 2;
      000AB3 90r00r02         [24] 2874 	mov	dptr,#_fontCurXpos
      000AB6 E0               [24] 2875 	movx	a,@dptr
      000AB7 FE               [12] 2876 	mov	r6,a
      000AB8 A3               [24] 2877 	inc	dptr
      000AB9 E0               [24] 2878 	movx	a,@dptr
      000ABA FF               [12] 2879 	mov	r7,a
      000ABB 74 02            [12] 2880 	mov	a,#0x02
      000ABD 2E               [12] 2881 	add	a,r6
      000ABE FE               [12] 2882 	mov	r6,a
      000ABF E4               [12] 2883 	clr	a
      000AC0 3F               [12] 2884 	addc	a,r7
      000AC1 FF               [12] 2885 	mov	r7,a
      000AC2 90r00r02         [24] 2886 	mov	dptr,#_fontCurXpos
      000AC5 EE               [12] 2887 	mov	a,r6
      000AC6 F0               [24] 2888 	movx	@dptr,a
      000AC7 EF               [12] 2889 	mov	a,r7
      000AC8 A3               [24] 2890 	inc	dptr
      000AC9 F0               [24] 2891 	movx	@dptr,a
      000ACA                       2892 00115$:
                                   2893 ;	board/zbs29_BW_uc/../uc8151.c:614: if (fontCurXpos % 8 == 0) {
      000ACA 90r00r02         [24] 2894 	mov	dptr,#_fontCurXpos
      000ACD E0               [24] 2895 	movx	a,@dptr
      000ACE FE               [12] 2896 	mov	r6,a
      000ACF A3               [24] 2897 	inc	dptr
      000AD0 E0               [24] 2898 	movx	a,@dptr
      000AD1 EE               [12] 2899 	mov	a,r6
      000AD2 54 07            [12] 2900 	anl	a,#0x07
      000AD4 60 01            [24] 2901 	jz	00240$
      000AD6 22               [24] 2902 	ret
      000AD7                       2903 00240$:
                                   2904 ;	board/zbs29_BW_uc/../uc8151.c:616: for (uint8_t i = 0; i < (16 * epdCharSize); i++) {
      000AD7 7F 00            [12] 2905 	mov	r7,#0x00
      000AD9                       2906 00132$:
      000AD9 90r00r00         [24] 2907 	mov	dptr,#_epdCharSize
      000ADC E0               [24] 2908 	movx	a,@dptr
      000ADD FE               [12] 2909 	mov	r6,a
      000ADE E4               [12] 2910 	clr	a
      000ADF C4               [12] 2911 	swap	a
      000AE0 54 F0            [12] 2912 	anl	a,#0xf0
      000AE2 CE               [12] 2913 	xch	a,r6
      000AE3 C4               [12] 2914 	swap	a
      000AE4 CE               [12] 2915 	xch	a,r6
      000AE5 6E               [12] 2916 	xrl	a,r6
      000AE6 CE               [12] 2917 	xch	a,r6
      000AE7 54 F0            [12] 2918 	anl	a,#0xf0
      000AE9 CE               [12] 2919 	xch	a,r6
      000AEA 6E               [12] 2920 	xrl	a,r6
      000AEB FD               [12] 2921 	mov	r5,a
      000AEC 8F 03            [24] 2922 	mov	ar3,r7
      000AEE 7C 00            [12] 2923 	mov	r4,#0x00
      000AF0 C3               [12] 2924 	clr	c
      000AF1 EB               [12] 2925 	mov	a,r3
      000AF2 9E               [12] 2926 	subb	a,r6
      000AF3 EC               [12] 2927 	mov	a,r4
      000AF4 64 80            [12] 2928 	xrl	a,#0x80
      000AF6 8D F0            [24] 2929 	mov	b,r5
      000AF8 63 F0 80         [24] 2930 	xrl	b,#0x80
      000AFB 95 F0            [12] 2931 	subb	a,b
      000AFD 50 14            [24] 2932 	jnc	00116$
                                   2933 ;	board/zbs29_BW_uc/../uc8151.c:617: epdSend(rbuffer[i]);
      000AFF EF               [12] 2934 	mov	a,r7
      000B00 24r00            [12] 2935 	add	a,#_rbuffer
      000B02 F5 82            [12] 2936 	mov	dpl,a
      000B04 E4               [12] 2937 	clr	a
      000B05 34s00            [12] 2938 	addc	a,#(_rbuffer >> 8)
      000B07 F5 83            [12] 2939 	mov	dph,a
      000B09 E0               [24] 2940 	movx	a,@dptr
      000B0A FE               [12] 2941 	mov	r6,a
      000B0B F5 82            [12] 2942 	mov	dpl,a
      000B0D 12r00r00         [24] 2943 	lcall	_spiTXByte
                                   2944 ;	board/zbs29_BW_uc/../uc8151.c:616: for (uint8_t i = 0; i < (16 * epdCharSize); i++) {
      000B10 0F               [12] 2945 	inc	r7
      000B11 80 C6            [24] 2946 	sjmp	00132$
      000B13                       2947 00116$:
                                   2948 ;	board/zbs29_BW_uc/../uc8151.c:619: memset(rbuffer, 0, 32);
      000B13 90r00r00         [24] 2949 	mov	dptr,#_memset_PARM_2
      000B16 E4               [12] 2950 	clr	a
      000B17 F0               [24] 2951 	movx	@dptr,a
      000B18 90r00r00         [24] 2952 	mov	dptr,#_memset_PARM_3
      000B1B 74 20            [12] 2953 	mov	a,#0x20
      000B1D F0               [24] 2954 	movx	@dptr,a
      000B1E E4               [12] 2955 	clr	a
      000B1F A3               [24] 2956 	inc	dptr
      000B20 F0               [24] 2957 	movx	@dptr,a
      000B21 90r00r00         [24] 2958 	mov	dptr,#_rbuffer
      000B24 75 F0 00         [24] 2959 	mov	b,#0x00
                                   2960 ;	board/zbs29_BW_uc/../uc8151.c:621: }
      000B27 02r00r00         [24] 2961 	ljmp	_memset
                                   2962 ;------------------------------------------------------------
                                   2963 ;Allocation info for local variables in function 'bufferByteShift'
                                   2964 ;------------------------------------------------------------
                                   2965 ;byte                      Allocated with name '_bufferByteShift_byte_65536_234'
                                   2966 ;offset                    Allocated with name '_bufferByteShift_offset_131072_237'
                                   2967 ;------------------------------------------------------------
                                   2968 ;	board/zbs29_BW_uc/../uc8151.c:622: static void bufferByteShift(uint8_t byte) {
                                   2969 ;	-----------------------------------------
                                   2970 ;	 function bufferByteShift
                                   2971 ;	-----------------------------------------
      000B2A                       2972 _bufferByteShift:
      000B2A E5 82            [12] 2973 	mov	a,dpl
      000B2C 90r00rDC         [24] 2974 	mov	dptr,#_bufferByteShift_byte_65536_234
      000B2F F0               [24] 2975 	movx	@dptr,a
                                   2976 ;	board/zbs29_BW_uc/../uc8151.c:630: if (rbuffer[1] == 0) {
      000B30 90r00r01         [24] 2977 	mov	dptr,#(_rbuffer + 0x0001)
      000B33 E0               [24] 2978 	movx	a,@dptr
      000B34 FF               [12] 2979 	mov	r7,a
      000B35 70 09            [24] 2980 	jnz	00104$
                                   2981 ;	board/zbs29_BW_uc/../uc8151.c:631: epdSend(byte);
      000B37 90r00rDC         [24] 2982 	mov	dptr,#_bufferByteShift_byte_65536_234
      000B3A E0               [24] 2983 	movx	a,@dptr
      000B3B F5 82            [12] 2984 	mov	dpl,a
      000B3D 02r00r00         [24] 2985 	ljmp	_spiTXByte
      000B40                       2986 00104$:
                                   2987 ;	board/zbs29_BW_uc/../uc8151.c:634: rbuffer[0] |= (byte >> offset);
      000B40 90r00r00         [24] 2988 	mov	dptr,#_rbuffer
      000B43 E0               [24] 2989 	movx	a,@dptr
      000B44 FE               [12] 2990 	mov	r6,a
      000B45 90r00rDC         [24] 2991 	mov	dptr,#_bufferByteShift_byte_65536_234
      000B48 E0               [24] 2992 	movx	a,@dptr
      000B49 FD               [12] 2993 	mov	r5,a
      000B4A 8F F0            [24] 2994 	mov	b,r7
      000B4C 05 F0            [12] 2995 	inc	b
      000B4E ED               [12] 2996 	mov	a,r5
      000B4F 80 02            [24] 2997 	sjmp	00118$
      000B51                       2998 00117$:
      000B51 C3               [12] 2999 	clr	c
      000B52 13               [12] 3000 	rrc	a
      000B53                       3001 00118$:
      000B53 D5 F0 FB         [24] 3002 	djnz	b,00117$
      000B56 42 06            [12] 3003 	orl	ar6,a
      000B58 90r00r00         [24] 3004 	mov	dptr,#_rbuffer
      000B5B EE               [12] 3005 	mov	a,r6
      000B5C F0               [24] 3006 	movx	@dptr,a
                                   3007 ;	board/zbs29_BW_uc/../uc8151.c:635: epdSend(rbuffer[0]);
      000B5D 8E 82            [24] 3008 	mov	dpl,r6
      000B5F 12r00r00         [24] 3009 	lcall	_spiTXByte
                                   3010 ;	board/zbs29_BW_uc/../uc8151.c:637: rbuffer[0] = (byte << (8 - offset));
      000B62 74 08            [12] 3011 	mov	a,#0x08
      000B64 C3               [12] 3012 	clr	c
      000B65 9F               [12] 3013 	subb	a,r7
      000B66 FF               [12] 3014 	mov	r7,a
      000B67 8F F0            [24] 3015 	mov	b,r7
      000B69 05 F0            [12] 3016 	inc	b
      000B6B ED               [12] 3017 	mov	a,r5
      000B6C 80 02            [24] 3018 	sjmp	00121$
      000B6E                       3019 00119$:
      000B6E 25 E0            [12] 3020 	add	a,acc
      000B70                       3021 00121$:
      000B70 D5 F0 FB         [24] 3022 	djnz	b,00119$
      000B73 90r00r00         [24] 3023 	mov	dptr,#_rbuffer
      000B76 F0               [24] 3024 	movx	@dptr,a
                                   3025 ;	board/zbs29_BW_uc/../uc8151.c:638: rbuffer[2]++;
      000B77 90r00r02         [24] 3026 	mov	dptr,#(_rbuffer + 0x0002)
      000B7A E0               [24] 3027 	movx	a,@dptr
      000B7B FF               [12] 3028 	mov	r7,a
      000B7C 0F               [12] 3029 	inc	r7
      000B7D 90r00r02         [24] 3030 	mov	dptr,#(_rbuffer + 0x0002)
      000B80 EF               [12] 3031 	mov	a,r7
      000B81 F0               [24] 3032 	movx	@dptr,a
                                   3033 ;	board/zbs29_BW_uc/../uc8151.c:639: if (rbuffer[2] == rbuffer[3]) {
      000B82 90r00r03         [24] 3034 	mov	dptr,#(_rbuffer + 0x0003)
      000B85 E0               [24] 3035 	movx	a,@dptr
      000B86 FE               [12] 3036 	mov	r6,a
      000B87 EF               [12] 3037 	mov	a,r7
      000B88 B5 06 13         [24] 3038 	cjne	a,ar6,00106$
                                   3039 ;	board/zbs29_BW_uc/../uc8151.c:640: epdSend(rbuffer[0]);
      000B8B 90r00r00         [24] 3040 	mov	dptr,#_rbuffer
      000B8E E0               [24] 3041 	movx	a,@dptr
      000B8F FF               [12] 3042 	mov	r7,a
      000B90 F5 82            [12] 3043 	mov	dpl,a
      000B92 12r00r00         [24] 3044 	lcall	_spiTXByte
                                   3045 ;	board/zbs29_BW_uc/../uc8151.c:641: rbuffer[0] = 0;
      000B95 90r00r00         [24] 3046 	mov	dptr,#_rbuffer
      000B98 E4               [12] 3047 	clr	a
      000B99 F0               [24] 3048 	movx	@dptr,a
                                   3049 ;	board/zbs29_BW_uc/../uc8151.c:642: rbuffer[2] = 0;
      000B9A 90r00r02         [24] 3050 	mov	dptr,#(_rbuffer + 0x0002)
      000B9D F0               [24] 3051 	movx	@dptr,a
      000B9E                       3052 00106$:
                                   3053 ;	board/zbs29_BW_uc/../uc8151.c:645: }
      000B9E 22               [24] 3054 	ret
                                   3055 ;------------------------------------------------------------
                                   3056 ;Allocation info for local variables in function 'pushYFontBytesToEPD'
                                   3057 ;------------------------------------------------------------
                                   3058 ;byte2                     Allocated with name '_pushYFontBytesToEPD_PARM_2'
                                   3059 ;byte1                     Allocated with name '_pushYFontBytesToEPD_byte1_65536_239'
                                   3060 ;j                         Allocated with name '_pushYFontBytesToEPD_j_196608_242'
                                   3061 ;c                         Allocated with name '_pushYFontBytesToEPD_c_262144_243'
                                   3062 ;i                         Allocated with name '_pushYFontBytesToEPD_i_327680_244'
                                   3063 ;i                         Allocated with name '_pushYFontBytesToEPD_i_327680_247'
                                   3064 ;------------------------------------------------------------
                                   3065 ;	board/zbs29_BW_uc/../uc8151.c:646: static void pushYFontBytesToEPD(uint8_t byte1, uint8_t byte2) {
                                   3066 ;	-----------------------------------------
                                   3067 ;	 function pushYFontBytesToEPD
                                   3068 ;	-----------------------------------------
      000B9F                       3069 _pushYFontBytesToEPD:
      000B9F E5 82            [12] 3070 	mov	a,dpl
      000BA1 90r00rDE         [24] 3071 	mov	dptr,#_pushYFontBytesToEPD_byte1_65536_239
      000BA4 F0               [24] 3072 	movx	@dptr,a
                                   3073 ;	board/zbs29_BW_uc/../uc8151.c:647: if (epdCharSize == 2) {
      000BA5 90r00r00         [24] 3074 	mov	dptr,#_epdCharSize
      000BA8 E0               [24] 3075 	movx	a,@dptr
      000BA9 FF               [12] 3076 	mov	r7,a
      000BAA BF 02 02         [24] 3077 	cjne	r7,#0x02,00184$
      000BAD 80 03            [24] 3078 	sjmp	00185$
      000BAF                       3079 00184$:
      000BAF 02r0CrA1         [24] 3080 	ljmp	00113$
      000BB2                       3081 00185$:
                                   3082 ;	board/zbs29_BW_uc/../uc8151.c:648: for (uint8_t j = 0; j < 2; j++) {
      000BB2 90r00rDE         [24] 3083 	mov	dptr,#_pushYFontBytesToEPD_byte1_65536_239
      000BB5 E0               [24] 3084 	movx	a,@dptr
      000BB6 FF               [12] 3085 	mov	r7,a
      000BB7 90r00rDD         [24] 3086 	mov	dptr,#_pushYFontBytesToEPD_PARM_2
      000BBA E0               [24] 3087 	movx	a,@dptr
      000BBB FE               [12] 3088 	mov	r6,a
      000BBC 7D 00            [12] 3089 	mov	r5,#0x00
      000BBE                       3090 00122$:
      000BBE BD 02 00         [24] 3091 	cjne	r5,#0x02,00186$
      000BC1                       3092 00186$:
      000BC1 40 01            [24] 3093 	jc	00187$
      000BC3 22               [24] 3094 	ret
      000BC4                       3095 00187$:
                                   3096 ;	board/zbs29_BW_uc/../uc8151.c:649: uint8_t c = 0;
      000BC4 90r00rDF         [24] 3097 	mov	dptr,#_pushYFontBytesToEPD_c_262144_243
      000BC7 E4               [12] 3098 	clr	a
      000BC8 F0               [24] 3099 	movx	@dptr,a
                                   3100 ;	board/zbs29_BW_uc/../uc8151.c:650: for (uint8_t i = 7; i != 255; i--) {
      000BC9 7C 07            [12] 3101 	mov	r4,#0x07
      000BCB                       3102 00116$:
      000BCB BC FF 02         [24] 3103 	cjne	r4,#0xff,00188$
      000BCE 80 63            [24] 3104 	sjmp	00105$
      000BD0                       3105 00188$:
                                   3106 ;	board/zbs29_BW_uc/../uc8151.c:651: if (byte1 & (1 << i)) c |= (0x03 << ((i % 4) * 2));
      000BD0 8C F0            [24] 3107 	mov	b,r4
      000BD2 05 F0            [12] 3108 	inc	b
      000BD4 7A 01            [12] 3109 	mov	r2,#0x01
      000BD6 7B 00            [12] 3110 	mov	r3,#0x00
      000BD8 80 06            [24] 3111 	sjmp	00190$
      000BDA                       3112 00189$:
      000BDA EA               [12] 3113 	mov	a,r2
      000BDB 2A               [12] 3114 	add	a,r2
      000BDC FA               [12] 3115 	mov	r2,a
      000BDD EB               [12] 3116 	mov	a,r3
      000BDE 33               [12] 3117 	rlc	a
      000BDF FB               [12] 3118 	mov	r3,a
      000BE0                       3119 00190$:
      000BE0 D5 F0 F7         [24] 3120 	djnz	b,00189$
      000BE3 8F 00            [24] 3121 	mov	ar0,r7
      000BE5 79 00            [12] 3122 	mov	r1,#0x00
      000BE7 E8               [12] 3123 	mov	a,r0
      000BE8 52 02            [12] 3124 	anl	ar2,a
      000BEA E9               [12] 3125 	mov	a,r1
      000BEB 52 03            [12] 3126 	anl	ar3,a
      000BED EA               [12] 3127 	mov	a,r2
      000BEE 4B               [12] 3128 	orl	a,r3
      000BEF 60 1A            [24] 3129 	jz	00102$
      000BF1 74 03            [12] 3130 	mov	a,#0x03
      000BF3 5C               [12] 3131 	anl	a,r4
      000BF4 25 E0            [12] 3132 	add	a,acc
      000BF6 FB               [12] 3133 	mov	r3,a
      000BF7 8B F0            [24] 3134 	mov	b,r3
      000BF9 05 F0            [12] 3135 	inc	b
      000BFB 74 03            [12] 3136 	mov	a,#0x03
      000BFD 80 02            [24] 3137 	sjmp	00194$
      000BFF                       3138 00192$:
      000BFF 25 E0            [12] 3139 	add	a,acc
      000C01                       3140 00194$:
      000C01 D5 F0 FB         [24] 3141 	djnz	b,00192$
      000C04 FB               [12] 3142 	mov	r3,a
      000C05 90r00rDF         [24] 3143 	mov	dptr,#_pushYFontBytesToEPD_c_262144_243
      000C08 E0               [24] 3144 	movx	a,@dptr
      000C09 4B               [12] 3145 	orl	a,r3
      000C0A F0               [24] 3146 	movx	@dptr,a
      000C0B                       3147 00102$:
                                   3148 ;	board/zbs29_BW_uc/../uc8151.c:652: if ((i % 4) == 0) {
      000C0B EC               [12] 3149 	mov	a,r4
      000C0C 54 03            [12] 3150 	anl	a,#0x03
      000C0E 60 02            [24] 3151 	jz	00196$
      000C10 80 1E            [24] 3152 	sjmp	00117$
      000C12                       3153 00196$:
                                   3154 ;	board/zbs29_BW_uc/../uc8151.c:653: bufferByteShift(c);
      000C12 90r00rDF         [24] 3155 	mov	dptr,#_pushYFontBytesToEPD_c_262144_243
      000C15 E0               [24] 3156 	movx	a,@dptr
      000C16 F5 82            [12] 3157 	mov	dpl,a
      000C18 C0 07            [24] 3158 	push	ar7
      000C1A C0 06            [24] 3159 	push	ar6
      000C1C C0 05            [24] 3160 	push	ar5
      000C1E C0 04            [24] 3161 	push	ar4
      000C20 12r0Br2A         [24] 3162 	lcall	_bufferByteShift
      000C23 D0 04            [24] 3163 	pop	ar4
      000C25 D0 05            [24] 3164 	pop	ar5
      000C27 D0 06            [24] 3165 	pop	ar6
      000C29 D0 07            [24] 3166 	pop	ar7
                                   3167 ;	board/zbs29_BW_uc/../uc8151.c:654: c = 0;
      000C2B 90r00rDF         [24] 3168 	mov	dptr,#_pushYFontBytesToEPD_c_262144_243
      000C2E E4               [12] 3169 	clr	a
      000C2F F0               [24] 3170 	movx	@dptr,a
      000C30                       3171 00117$:
                                   3172 ;	board/zbs29_BW_uc/../uc8151.c:650: for (uint8_t i = 7; i != 255; i--) {
      000C30 1C               [12] 3173 	dec	r4
      000C31 80 98            [24] 3174 	sjmp	00116$
      000C33                       3175 00105$:
                                   3176 ;	board/zbs29_BW_uc/../uc8151.c:657: for (uint8_t i = 7; i != 255; i--) {
      000C33 7C 07            [12] 3177 	mov	r4,#0x07
      000C35                       3178 00119$:
      000C35 BC FF 02         [24] 3179 	cjne	r4,#0xff,00197$
      000C38 80 63            [24] 3180 	sjmp	00123$
      000C3A                       3181 00197$:
                                   3182 ;	board/zbs29_BW_uc/../uc8151.c:658: if (byte2 & (1 << i)) c |= (0x03 << ((i % 4) * 2));
      000C3A 8C F0            [24] 3183 	mov	b,r4
      000C3C 05 F0            [12] 3184 	inc	b
      000C3E 7A 01            [12] 3185 	mov	r2,#0x01
      000C40 7B 00            [12] 3186 	mov	r3,#0x00
      000C42 80 06            [24] 3187 	sjmp	00199$
      000C44                       3188 00198$:
      000C44 EA               [12] 3189 	mov	a,r2
      000C45 2A               [12] 3190 	add	a,r2
      000C46 FA               [12] 3191 	mov	r2,a
      000C47 EB               [12] 3192 	mov	a,r3
      000C48 33               [12] 3193 	rlc	a
      000C49 FB               [12] 3194 	mov	r3,a
      000C4A                       3195 00199$:
      000C4A D5 F0 F7         [24] 3196 	djnz	b,00198$
      000C4D 8E 00            [24] 3197 	mov	ar0,r6
      000C4F 79 00            [12] 3198 	mov	r1,#0x00
      000C51 E8               [12] 3199 	mov	a,r0
      000C52 52 02            [12] 3200 	anl	ar2,a
      000C54 E9               [12] 3201 	mov	a,r1
      000C55 52 03            [12] 3202 	anl	ar3,a
      000C57 EA               [12] 3203 	mov	a,r2
      000C58 4B               [12] 3204 	orl	a,r3
      000C59 60 1A            [24] 3205 	jz	00107$
      000C5B 74 03            [12] 3206 	mov	a,#0x03
      000C5D 5C               [12] 3207 	anl	a,r4
      000C5E 25 E0            [12] 3208 	add	a,acc
      000C60 FB               [12] 3209 	mov	r3,a
      000C61 8B F0            [24] 3210 	mov	b,r3
      000C63 05 F0            [12] 3211 	inc	b
      000C65 74 03            [12] 3212 	mov	a,#0x03
      000C67 80 02            [24] 3213 	sjmp	00203$
      000C69                       3214 00201$:
      000C69 25 E0            [12] 3215 	add	a,acc
      000C6B                       3216 00203$:
      000C6B D5 F0 FB         [24] 3217 	djnz	b,00201$
      000C6E FB               [12] 3218 	mov	r3,a
      000C6F 90r00rDF         [24] 3219 	mov	dptr,#_pushYFontBytesToEPD_c_262144_243
      000C72 E0               [24] 3220 	movx	a,@dptr
      000C73 4B               [12] 3221 	orl	a,r3
      000C74 F0               [24] 3222 	movx	@dptr,a
      000C75                       3223 00107$:
                                   3224 ;	board/zbs29_BW_uc/../uc8151.c:659: if ((i % 4) == 0) {
      000C75 EC               [12] 3225 	mov	a,r4
      000C76 54 03            [12] 3226 	anl	a,#0x03
      000C78 60 02            [24] 3227 	jz	00205$
      000C7A 80 1E            [24] 3228 	sjmp	00120$
      000C7C                       3229 00205$:
                                   3230 ;	board/zbs29_BW_uc/../uc8151.c:660: bufferByteShift(c);
      000C7C 90r00rDF         [24] 3231 	mov	dptr,#_pushYFontBytesToEPD_c_262144_243
      000C7F E0               [24] 3232 	movx	a,@dptr
      000C80 F5 82            [12] 3233 	mov	dpl,a
      000C82 C0 07            [24] 3234 	push	ar7
      000C84 C0 06            [24] 3235 	push	ar6
      000C86 C0 05            [24] 3236 	push	ar5
      000C88 C0 04            [24] 3237 	push	ar4
      000C8A 12r0Br2A         [24] 3238 	lcall	_bufferByteShift
      000C8D D0 04            [24] 3239 	pop	ar4
      000C8F D0 05            [24] 3240 	pop	ar5
      000C91 D0 06            [24] 3241 	pop	ar6
      000C93 D0 07            [24] 3242 	pop	ar7
                                   3243 ;	board/zbs29_BW_uc/../uc8151.c:661: c = 0;
      000C95 90r00rDF         [24] 3244 	mov	dptr,#_pushYFontBytesToEPD_c_262144_243
      000C98 E4               [12] 3245 	clr	a
      000C99 F0               [24] 3246 	movx	@dptr,a
      000C9A                       3247 00120$:
                                   3248 ;	board/zbs29_BW_uc/../uc8151.c:657: for (uint8_t i = 7; i != 255; i--) {
      000C9A 1C               [12] 3249 	dec	r4
      000C9B 80 98            [24] 3250 	sjmp	00119$
      000C9D                       3251 00123$:
                                   3252 ;	board/zbs29_BW_uc/../uc8151.c:648: for (uint8_t j = 0; j < 2; j++) {
      000C9D 0D               [12] 3253 	inc	r5
      000C9E 02r0BrBE         [24] 3254 	ljmp	00122$
      000CA1                       3255 00113$:
                                   3256 ;	board/zbs29_BW_uc/../uc8151.c:666: bufferByteShift(byte1);
      000CA1 90r00rDE         [24] 3257 	mov	dptr,#_pushYFontBytesToEPD_byte1_65536_239
      000CA4 E0               [24] 3258 	movx	a,@dptr
      000CA5 F5 82            [12] 3259 	mov	dpl,a
      000CA7 12r0Br2A         [24] 3260 	lcall	_bufferByteShift
                                   3261 ;	board/zbs29_BW_uc/../uc8151.c:667: bufferByteShift(byte2);
      000CAA 90r00rDD         [24] 3262 	mov	dptr,#_pushYFontBytesToEPD_PARM_2
      000CAD E0               [24] 3263 	movx	a,@dptr
      000CAE F5 82            [12] 3264 	mov	dpl,a
                                   3265 ;	board/zbs29_BW_uc/../uc8151.c:669: }
      000CB0 02r0Br2A         [24] 3266 	ljmp	_bufferByteShift
                                   3267 ;------------------------------------------------------------
                                   3268 ;Allocation info for local variables in function 'writeCharEPD'
                                   3269 ;------------------------------------------------------------
                                   3270 ;c                         Allocated with name '_writeCharEPD_c_65536_251'
                                   3271 ;empty                     Allocated with name '_writeCharEPD_empty_65537_253'
                                   3272 ;i                         Allocated with name '_writeCharEPD_i_131073_254'
                                   3273 ;i                         Allocated with name '_writeCharEPD_i_196609_257'
                                   3274 ;begin                     Allocated with name '_writeCharEPD_begin_65538_261'
                                   3275 ;end                       Allocated with name '_writeCharEPD_end_65539_263'
                                   3276 ;pos                       Allocated with name '_writeCharEPD_pos_131075_265'
                                   3277 ;------------------------------------------------------------
                                   3278 ;	board/zbs29_BW_uc/../uc8151.c:670: void writeCharEPD(uint8_t c) {
                                   3279 ;	-----------------------------------------
                                   3280 ;	 function writeCharEPD
                                   3281 ;	-----------------------------------------
      000CB3                       3282 _writeCharEPD:
      000CB3 E5 82            [12] 3283 	mov	a,dpl
      000CB5 90r00rE0         [24] 3284 	mov	dptr,#_writeCharEPD_c_65536_251
                                   3285 ;	board/zbs29_BW_uc/../uc8151.c:671: c-=0x20;
      000CB8 F0               [24] 3286 	movx	@dptr,a ; Peephole dmitrygr.0005 - SRSLY, WTF?
      000CB9 24 E0            [12] 3287 	add	a,#0xe0
      000CBB F0               [24] 3288 	movx	@dptr,a
                                   3289 ;	board/zbs29_BW_uc/../uc8151.c:673: bool empty = true;
      000CBC 90r00rE1         [24] 3290 	mov	dptr,#_writeCharEPD_empty_65537_253
      000CBF 74 01            [12] 3291 	mov	a,#0x01
      000CC1 F0               [24] 3292 	movx	@dptr,a
                                   3293 ;	board/zbs29_BW_uc/../uc8151.c:674: for (uint8_t i = 0; i < 20; i++) {
      000CC2 90r00rE0         [24] 3294 	mov	dptr,#_writeCharEPD_c_65536_251
      000CC5 E0               [24] 3295 	movx	a,@dptr
      000CC6 75 F0 14         [24] 3296 	mov	b,#0x14
      000CC9 A4               [48] 3297 	mul	ab
      000CCA 24r00            [12] 3298 	add	a,#_font
      000CCC FE               [12] 3299 	mov	r6,a
      000CCD 74s00            [12] 3300 	mov	a,#(_font >> 8)
      000CCF 35 F0            [12] 3301 	addc	a,b
      000CD1 FF               [12] 3302 	mov	r7,a
      000CD2 7D 00            [12] 3303 	mov	r5,#0x00
      000CD4                       3304 00126$:
      000CD4 BD 14 00         [24] 3305 	cjne	r5,#0x14,00206$
      000CD7                       3306 00206$:
      000CD7 50 16            [24] 3307 	jnc	00103$
                                   3308 ;	board/zbs29_BW_uc/../uc8151.c:675: if (font[c][i]) empty = false;
      000CD9 ED               [12] 3309 	mov	a,r5
      000CDA 2E               [12] 3310 	add	a,r6
      000CDB FB               [12] 3311 	mov	r3,a
      000CDC E4               [12] 3312 	clr	a
      000CDD 3F               [12] 3313 	addc	a,r7
      000CDE FC               [12] 3314 	mov	r4,a
      000CDF 8B 82            [24] 3315 	mov	dpl,r3
      000CE1 8C 83            [24] 3316 	mov	dph,r4
      000CE3 E4               [12] 3317 	clr	a
      000CE4 93               [24] 3318 	movc	a,@a+dptr
      000CE5 60 05            [24] 3319 	jz	00127$
      000CE7 90r00rE1         [24] 3320 	mov	dptr,#_writeCharEPD_empty_65537_253
      000CEA E4               [12] 3321 	clr	a
      000CEB F0               [24] 3322 	movx	@dptr,a
      000CEC                       3323 00127$:
                                   3324 ;	board/zbs29_BW_uc/../uc8151.c:674: for (uint8_t i = 0; i < 20; i++) {
      000CEC 0D               [12] 3325 	inc	r5
      000CED 80 E5            [24] 3326 	sjmp	00126$
      000CEF                       3327 00103$:
                                   3328 ;	board/zbs29_BW_uc/../uc8151.c:677: if (empty) {
      000CEF 90r00rE1         [24] 3329 	mov	dptr,#_writeCharEPD_empty_65537_253
      000CF2 E0               [24] 3330 	movx	a,@dptr
      000CF3 60 31            [24] 3331 	jz	00109$
                                   3332 ;	board/zbs29_BW_uc/../uc8151.c:678: for (uint8_t i = 0; i < 8; i++) {
      000CF5 7F 00            [12] 3333 	mov	r7,#0x00
      000CF7                       3334 00129$:
      000CF7 BF 08 00         [24] 3335 	cjne	r7,#0x08,00210$
      000CFA                       3336 00210$:
      000CFA 50 29            [24] 3337 	jnc	00107$
                                   3338 ;	board/zbs29_BW_uc/../uc8151.c:679: if (directionY) {
      000CFC 90r00r01         [24] 3339 	mov	dptr,#_directionY
      000CFF E0               [24] 3340 	movx	a,@dptr
      000D00 60 11            [24] 3341 	jz	00105$
                                   3342 ;	board/zbs29_BW_uc/../uc8151.c:680: pushYFontBytesToEPD(0x00, 0x00);
      000D02 90r00rDD         [24] 3343 	mov	dptr,#_pushYFontBytesToEPD_PARM_2
      000D05 E4               [12] 3344 	clr	a
      000D06 F0               [24] 3345 	movx	@dptr,a
      000D07 75 82 00         [24] 3346 	mov	dpl,#0x00
      000D0A C0 07            [24] 3347 	push	ar7
      000D0C 12r0Br9F         [24] 3348 	lcall	_pushYFontBytesToEPD
      000D0F D0 07            [24] 3349 	pop	ar7
      000D11 80 0F            [24] 3350 	sjmp	00130$
      000D13                       3351 00105$:
                                   3352 ;	board/zbs29_BW_uc/../uc8151.c:682: pushXFontBytesToEPD(0x00, 0x00);
      000D13 90r00rD8         [24] 3353 	mov	dptr,#_pushXFontBytesToEPD_PARM_2
      000D16 E4               [12] 3354 	clr	a
      000D17 F0               [24] 3355 	movx	@dptr,a
      000D18 75 82 00         [24] 3356 	mov	dpl,#0x00
      000D1B C0 07            [24] 3357 	push	ar7
      000D1D 12r08r8A         [24] 3358 	lcall	_pushXFontBytesToEPD
      000D20 D0 07            [24] 3359 	pop	ar7
      000D22                       3360 00130$:
                                   3361 ;	board/zbs29_BW_uc/../uc8151.c:678: for (uint8_t i = 0; i < 8; i++) {
      000D22 0F               [12] 3362 	inc	r7
      000D23 80 D2            [24] 3363 	sjmp	00129$
      000D25                       3364 00107$:
                                   3365 ;	board/zbs29_BW_uc/../uc8151.c:685: return;
      000D25 22               [24] 3366 	ret
      000D26                       3367 00109$:
                                   3368 ;	board/zbs29_BW_uc/../uc8151.c:688: uint8_t begin = 0;
      000D26 90r00rE2         [24] 3369 	mov	dptr,#_writeCharEPD_begin_65538_261
      000D29 E4               [12] 3370 	clr	a
      000D2A F0               [24] 3371 	movx	@dptr,a
                                   3372 ;	board/zbs29_BW_uc/../uc8151.c:689: while (font[c][begin] == 0x00 && font[c][begin + 1] == 0x00) {
      000D2B 90r00rE0         [24] 3373 	mov	dptr,#_writeCharEPD_c_65536_251
      000D2E E0               [24] 3374 	movx	a,@dptr
      000D2F 75 F0 14         [24] 3375 	mov	b,#0x14
      000D32 A4               [48] 3376 	mul	ab
      000D33 FE               [12] 3377 	mov	r6,a
      000D34 AF F0            [24] 3378 	mov	r7,b
      000D36 24r00            [12] 3379 	add	a,#_font
      000D38 FC               [12] 3380 	mov	r4,a
      000D39 EF               [12] 3381 	mov	a,r7
      000D3A 34s00            [12] 3382 	addc	a,#(_font >> 8)
      000D3C FD               [12] 3383 	mov	r5,a
      000D3D                       3384 00111$:
      000D3D 90r00rE2         [24] 3385 	mov	dptr,#_writeCharEPD_begin_65538_261
      000D40 E0               [24] 3386 	movx	a,@dptr
      000D41 FB               [12] 3387 	mov	r3,a
      000D42 2C               [12] 3388 	add	a,r4
      000D43 F9               [12] 3389 	mov	r1,a
      000D44 E4               [12] 3390 	clr	a
      000D45 3D               [12] 3391 	addc	a,r5
      000D46 FA               [12] 3392 	mov	r2,a
      000D47 89 82            [24] 3393 	mov	dpl,r1
      000D49 8A 83            [24] 3394 	mov	dph,r2
      000D4B E4               [12] 3395 	clr	a
      000D4C 93               [24] 3396 	movc	a,@a+dptr
      000D4D 70 20            [24] 3397 	jnz	00113$
      000D4F EE               [12] 3398 	mov	a,r6
      000D50 24r00            [12] 3399 	add	a,#_font
      000D52 F9               [12] 3400 	mov	r1,a
      000D53 EF               [12] 3401 	mov	a,r7
      000D54 34s00            [12] 3402 	addc	a,#(_font >> 8)
      000D56 FA               [12] 3403 	mov	r2,a
      000D57 EB               [12] 3404 	mov	a,r3
      000D58 04               [12] 3405 	inc	a
      000D59 29               [12] 3406 	add	a,r1
      000D5A F9               [12] 3407 	mov	r1,a
      000D5B E4               [12] 3408 	clr	a
      000D5C 3A               [12] 3409 	addc	a,r2
      000D5D FA               [12] 3410 	mov	r2,a
      000D5E 89 82            [24] 3411 	mov	dpl,r1
      000D60 8A 83            [24] 3412 	mov	dph,r2
      000D62 E4               [12] 3413 	clr	a
      000D63 93               [24] 3414 	movc	a,@a+dptr
      000D64 70 09            [24] 3415 	jnz	00113$
                                   3416 ;	board/zbs29_BW_uc/../uc8151.c:690: begin += 2;
      000D66 90r00rE2         [24] 3417 	mov	dptr,#_writeCharEPD_begin_65538_261
      000D69 74 02            [12] 3418 	mov	a,#0x02
      000D6B 2B               [12] 3419 	add	a,r3
      000D6C F0               [24] 3420 	movx	@dptr,a
      000D6D 80 CE            [24] 3421 	sjmp	00111$
      000D6F                       3422 00113$:
                                   3423 ;	board/zbs29_BW_uc/../uc8151.c:693: uint8_t end = 20;
      000D6F 90r00rE3         [24] 3424 	mov	dptr,#_writeCharEPD_end_65539_263
      000D72 74 14            [12] 3425 	mov	a,#0x14
      000D74 F0               [24] 3426 	movx	@dptr,a
                                   3427 ;	board/zbs29_BW_uc/../uc8151.c:694: while (font[c][end - 1] == 0x00 && font[c][end - 2] == 0x00) {
      000D75 90r00rE0         [24] 3428 	mov	dptr,#_writeCharEPD_c_65536_251
      000D78 E0               [24] 3429 	movx	a,@dptr
      000D79 75 F0 14         [24] 3430 	mov	b,#0x14
      000D7C A4               [48] 3431 	mul	ab
      000D7D FE               [12] 3432 	mov	r6,a
      000D7E AF F0            [24] 3433 	mov	r7,b
      000D80 24r00            [12] 3434 	add	a,#_font
      000D82 FC               [12] 3435 	mov	r4,a
      000D83 EF               [12] 3436 	mov	a,r7
      000D84 34s00            [12] 3437 	addc	a,#(_font >> 8)
      000D86 FD               [12] 3438 	mov	r5,a
      000D87                       3439 00115$:
      000D87 90r00rE3         [24] 3440 	mov	dptr,#_writeCharEPD_end_65539_263
      000D8A E0               [24] 3441 	movx	a,@dptr
      000D8B FB               [12] 3442 	mov	r3,a
      000D8C 14               [12] 3443 	dec	a
      000D8D 2C               [12] 3444 	add	a,r4
      000D8E F9               [12] 3445 	mov	r1,a
      000D8F E4               [12] 3446 	clr	a
      000D90 3D               [12] 3447 	addc	a,r5
      000D91 FA               [12] 3448 	mov	r2,a
      000D92 89 82            [24] 3449 	mov	dpl,r1
      000D94 8A 83            [24] 3450 	mov	dph,r2
      000D96 E4               [12] 3451 	clr	a
      000D97 93               [24] 3452 	movc	a,@a+dptr
      000D98 70 21            [24] 3453 	jnz	00117$
      000D9A EE               [12] 3454 	mov	a,r6
      000D9B 24r00            [12] 3455 	add	a,#_font
      000D9D F9               [12] 3456 	mov	r1,a
      000D9E EF               [12] 3457 	mov	a,r7
      000D9F 34s00            [12] 3458 	addc	a,#(_font >> 8)
      000DA1 FA               [12] 3459 	mov	r2,a
      000DA2 EB               [12] 3460 	mov	a,r3
      000DA3 24 FE            [12] 3461 	add	a,#0xfe
      000DA5 29               [12] 3462 	add	a,r1
      000DA6 F9               [12] 3463 	mov	r1,a
      000DA7 E4               [12] 3464 	clr	a
      000DA8 3A               [12] 3465 	addc	a,r2
      000DA9 FA               [12] 3466 	mov	r2,a
      000DAA 89 82            [24] 3467 	mov	dpl,r1
      000DAC 8A 83            [24] 3468 	mov	dph,r2
      000DAE E4               [12] 3469 	clr	a
      000DAF 93               [24] 3470 	movc	a,@a+dptr
      000DB0 70 09            [24] 3471 	jnz	00117$
                                   3472 ;	board/zbs29_BW_uc/../uc8151.c:695: end -= 2;
      000DB2 EB               [12] 3473 	mov	a,r3
      000DB3 24 FE            [12] 3474 	add	a,#0xfe
      000DB5 90r00rE3         [24] 3475 	mov	dptr,#_writeCharEPD_end_65539_263
      000DB8 F0               [24] 3476 	movx	@dptr,a
      000DB9 80 CC            [24] 3477 	sjmp	00115$
      000DBB                       3478 00117$:
                                   3479 ;	board/zbs29_BW_uc/../uc8151.c:698: for (uint8_t pos = begin; pos < end; pos += 2) {
      000DBB 90r00rE2         [24] 3480 	mov	dptr,#_writeCharEPD_begin_65538_261
      000DBE E0               [24] 3481 	movx	a,@dptr
      000DBF 90r00rE4         [24] 3482 	mov	dptr,#_writeCharEPD_pos_131075_265
      000DC2 F0               [24] 3483 	movx	@dptr,a
      000DC3 90r00rE0         [24] 3484 	mov	dptr,#_writeCharEPD_c_65536_251
      000DC6 E0               [24] 3485 	movx	a,@dptr
      000DC7 75 F0 14         [24] 3486 	mov	b,#0x14
      000DCA A4               [48] 3487 	mul	ab
      000DCB 24r00            [12] 3488 	add	a,#_font
      000DCD FE               [12] 3489 	mov	r6,a
      000DCE 74s00            [12] 3490 	mov	a,#(_font >> 8)
      000DD0 35 F0            [12] 3491 	addc	a,b
      000DD2 FF               [12] 3492 	mov	r7,a
      000DD3 8E 04            [24] 3493 	mov	ar4,r6
      000DD5 8F 05            [24] 3494 	mov	ar5,r7
      000DD7 90r00rE3         [24] 3495 	mov	dptr,#_writeCharEPD_end_65539_263
      000DDA E0               [24] 3496 	movx	a,@dptr
      000DDB FB               [12] 3497 	mov	r3,a
      000DDC                       3498 00132$:
      000DDC 90r00rE4         [24] 3499 	mov	dptr,#_writeCharEPD_pos_131075_265
      000DDF E0               [24] 3500 	movx	a,@dptr
      000DE0 FA               [12] 3501 	mov	r2,a
      000DE1 C3               [12] 3502 	clr	c
      000DE2 9B               [12] 3503 	subb	a,r3
      000DE3 50 7B            [24] 3504 	jnc	00121$
                                   3505 ;	board/zbs29_BW_uc/../uc8151.c:699: if (directionY) {
      000DE5 90r00r01         [24] 3506 	mov	dptr,#_directionY
      000DE8 E0               [24] 3507 	movx	a,@dptr
      000DE9 60 37            [24] 3508 	jz	00119$
                                   3509 ;	board/zbs29_BW_uc/../uc8151.c:700: pushYFontBytesToEPD(font[c][pos + 1], font[c][pos]);
      000DEB 8A 01            [24] 3510 	mov	ar1,r2
      000DED E9               [12] 3511 	mov	a,r1
      000DEE 04               [12] 3512 	inc	a
      000DEF 2C               [12] 3513 	add	a,r4
      000DF0 F5 82            [12] 3514 	mov	dpl,a
      000DF2 E4               [12] 3515 	clr	a
      000DF3 3D               [12] 3516 	addc	a,r5
      000DF4 F5 83            [12] 3517 	mov	dph,a
      000DF6 E4               [12] 3518 	clr	a
      000DF7 93               [24] 3519 	movc	a,@a+dptr
      000DF8 F9               [12] 3520 	mov	r1,a
      000DF9 EA               [12] 3521 	mov	a,r2
      000DFA 2C               [12] 3522 	add	a,r4
      000DFB F5 82            [12] 3523 	mov	dpl,a
      000DFD E4               [12] 3524 	clr	a
      000DFE 3D               [12] 3525 	addc	a,r5
      000DFF F5 83            [12] 3526 	mov	dph,a
      000E01 E4               [12] 3527 	clr	a
      000E02 93               [24] 3528 	movc	a,@a+dptr
      000E03 90r00rDD         [24] 3529 	mov	dptr,#_pushYFontBytesToEPD_PARM_2
      000E06 F0               [24] 3530 	movx	@dptr,a
      000E07 89 82            [24] 3531 	mov	dpl,r1
      000E09 C0 07            [24] 3532 	push	ar7
      000E0B C0 06            [24] 3533 	push	ar6
      000E0D C0 05            [24] 3534 	push	ar5
      000E0F C0 04            [24] 3535 	push	ar4
      000E11 C0 03            [24] 3536 	push	ar3
      000E13 12r0Br9F         [24] 3537 	lcall	_pushYFontBytesToEPD
      000E16 D0 03            [24] 3538 	pop	ar3
      000E18 D0 04            [24] 3539 	pop	ar4
      000E1A D0 05            [24] 3540 	pop	ar5
      000E1C D0 06            [24] 3541 	pop	ar6
      000E1E D0 07            [24] 3542 	pop	ar7
      000E20 80 33            [24] 3543 	sjmp	00133$
      000E22                       3544 00119$:
                                   3545 ;	board/zbs29_BW_uc/../uc8151.c:702: pushXFontBytesToEPD(font[c][pos], font[c][pos + 1]);
      000E22 EA               [12] 3546 	mov	a,r2
      000E23 2E               [12] 3547 	add	a,r6
      000E24 F5 82            [12] 3548 	mov	dpl,a
      000E26 E4               [12] 3549 	clr	a
      000E27 3F               [12] 3550 	addc	a,r7
      000E28 F5 83            [12] 3551 	mov	dph,a
      000E2A E4               [12] 3552 	clr	a
      000E2B 93               [24] 3553 	movc	a,@a+dptr
      000E2C F9               [12] 3554 	mov	r1,a
      000E2D EA               [12] 3555 	mov	a,r2
      000E2E 04               [12] 3556 	inc	a
      000E2F 2E               [12] 3557 	add	a,r6
      000E30 F5 82            [12] 3558 	mov	dpl,a
      000E32 E4               [12] 3559 	clr	a
      000E33 3F               [12] 3560 	addc	a,r7
      000E34 F5 83            [12] 3561 	mov	dph,a
      000E36 E4               [12] 3562 	clr	a
      000E37 93               [24] 3563 	movc	a,@a+dptr
      000E38 90r00rD8         [24] 3564 	mov	dptr,#_pushXFontBytesToEPD_PARM_2
      000E3B F0               [24] 3565 	movx	@dptr,a
      000E3C 89 82            [24] 3566 	mov	dpl,r1
      000E3E C0 07            [24] 3567 	push	ar7
      000E40 C0 06            [24] 3568 	push	ar6
      000E42 C0 05            [24] 3569 	push	ar5
      000E44 C0 04            [24] 3570 	push	ar4
      000E46 C0 03            [24] 3571 	push	ar3
      000E48 12r08r8A         [24] 3572 	lcall	_pushXFontBytesToEPD
      000E4B D0 03            [24] 3573 	pop	ar3
      000E4D D0 04            [24] 3574 	pop	ar4
      000E4F D0 05            [24] 3575 	pop	ar5
      000E51 D0 06            [24] 3576 	pop	ar6
      000E53 D0 07            [24] 3577 	pop	ar7
      000E55                       3578 00133$:
                                   3579 ;	board/zbs29_BW_uc/../uc8151.c:698: for (uint8_t pos = begin; pos < end; pos += 2) {
      000E55 90r00rE4         [24] 3580 	mov	dptr,#_writeCharEPD_pos_131075_265
      000E58 E0               [24] 3581 	movx	a,@dptr
      000E59 FA               [12] 3582 	mov	r2,a
      000E5A 24 02            [12] 3583 	add	a,#0x02
      000E5C F0               [24] 3584 	movx	@dptr,a
      000E5D 02r0DrDC         [24] 3585 	ljmp	00132$
      000E60                       3586 00121$:
                                   3587 ;	board/zbs29_BW_uc/../uc8151.c:707: if (directionY) {
      000E60 90r00r01         [24] 3588 	mov	dptr,#_directionY
      000E63 E0               [24] 3589 	movx	a,@dptr
      000E64 60 0B            [24] 3590 	jz	00123$
                                   3591 ;	board/zbs29_BW_uc/../uc8151.c:708: pushYFontBytesToEPD(0x00, 0x00);
      000E66 90r00rDD         [24] 3592 	mov	dptr,#_pushYFontBytesToEPD_PARM_2
      000E69 E4               [12] 3593 	clr	a
      000E6A F0               [24] 3594 	movx	@dptr,a
      000E6B 75 82 00         [24] 3595 	mov	dpl,#0x00
      000E6E 02r0Br9F         [24] 3596 	ljmp	_pushYFontBytesToEPD
      000E71                       3597 00123$:
                                   3598 ;	board/zbs29_BW_uc/../uc8151.c:710: pushXFontBytesToEPD(0x00, 0x00);
      000E71 90r00rD8         [24] 3599 	mov	dptr,#_pushXFontBytesToEPD_PARM_2
      000E74 E4               [12] 3600 	clr	a
      000E75 F0               [24] 3601 	movx	@dptr,a
      000E76 75 82 00         [24] 3602 	mov	dpl,#0x00
                                   3603 ;	board/zbs29_BW_uc/../uc8151.c:712: }
      000E79 02r08r8A         [24] 3604 	ljmp	_pushXFontBytesToEPD
                                   3605 ;------------------------------------------------------------
                                   3606 ;Allocation info for local variables in function 'epdPrintBegin'
                                   3607 ;------------------------------------------------------------
                                   3608 ;y                         Allocated with name '_epdPrintBegin_PARM_2'
                                   3609 ;direction                 Allocated with name '_epdPrintBegin_PARM_3'
                                   3610 ;fontsize                  Allocated with name '_epdPrintBegin_PARM_4'
                                   3611 ;color                     Allocated with name '_epdPrintBegin_PARM_5'
                                   3612 ;x                         Allocated with name '_epdPrintBegin_x_65536_271'
                                   3613 ;extra                     Allocated with name '_epdPrintBegin_extra_131072_273'
                                   3614 ;------------------------------------------------------------
                                   3615 ;	board/zbs29_BW_uc/../uc8151.c:715: void epdPrintBegin(uint16_t x, uint16_t y, bool direction, bool fontsize, bool color) {
                                   3616 ;	-----------------------------------------
                                   3617 ;	 function epdPrintBegin
                                   3618 ;	-----------------------------------------
      000E7C                       3619 _epdPrintBegin:
      000E7C AF 83            [24] 3620 	mov	r7,dph
      000E7E E5 82            [12] 3621 	mov	a,dpl
      000E80 90r00rEA         [24] 3622 	mov	dptr,#_epdPrintBegin_x_65536_271
      000E83 F0               [24] 3623 	movx	@dptr,a
      000E84 EF               [12] 3624 	mov	a,r7
      000E85 A3               [24] 3625 	inc	dptr
      000E86 F0               [24] 3626 	movx	@dptr,a
                                   3627 ;	board/zbs29_BW_uc/../uc8151.c:716: directionY = direction;
      000E87 90r00rE7         [24] 3628 	mov	dptr,#_epdPrintBegin_PARM_3
      000E8A E0               [24] 3629 	movx	a,@dptr
      000E8B FF               [12] 3630 	mov	r7,a
      000E8C 90r00r01         [24] 3631 	mov	dptr,#_directionY
      000E8F F0               [24] 3632 	movx	@dptr,a
                                   3633 ;	board/zbs29_BW_uc/../uc8151.c:717: epdCharSize = 1 + fontsize;
      000E90 90r00rE8         [24] 3634 	mov	dptr,#_epdPrintBegin_PARM_4
      000E93 E0               [24] 3635 	movx	a,@dptr
      000E94 FE               [12] 3636 	mov	r6,a
      000E95 0E               [12] 3637 	inc	r6
      000E96 90r00r00         [24] 3638 	mov	dptr,#_epdCharSize
      000E99 EE               [12] 3639 	mov	a,r6
      000E9A F0               [24] 3640 	movx	@dptr,a
                                   3641 ;	board/zbs29_BW_uc/../uc8151.c:718: if (directionY) {
      000E9B EF               [12] 3642 	mov	a,r7
      000E9C 70 03            [24] 3643 	jnz	00138$
      000E9E 02r0Fr8F         [24] 3644 	ljmp	00111$
      000EA1                       3645 00138$:
                                   3646 ;	board/zbs29_BW_uc/../uc8151.c:719: uint8_t extra = 0;
      000EA1 90r00rEC         [24] 3647 	mov	dptr,#_epdPrintBegin_extra_131072_273
      000EA4 E4               [12] 3648 	clr	a
      000EA5 F0               [24] 3649 	movx	@dptr,a
                                   3650 ;	board/zbs29_BW_uc/../uc8151.c:722: if (x % 8) {
      000EA6 90r00rEA         [24] 3651 	mov	dptr,#_epdPrintBegin_x_65536_271
      000EA9 E0               [24] 3652 	movx	a,@dptr
      000EAA FD               [12] 3653 	mov	r5,a
      000EAB A3               [24] 3654 	inc	dptr
      000EAC E0               [24] 3655 	movx	a,@dptr
      000EAD 53 05 07         [24] 3656 	anl	ar5,#0x07
      000EB0 7F 00            [12] 3657 	mov	r7,#0x00
      000EB2 ED               [12] 3658 	mov	a,r5
      000EB3 4F               [12] 3659 	orl	a,r7
      000EB4 60 22            [24] 3660 	jz	00102$
                                   3661 ;	board/zbs29_BW_uc/../uc8151.c:723: extra = 8;
      000EB6 90r00rEC         [24] 3662 	mov	dptr,#_epdPrintBegin_extra_131072_273
      000EB9 74 08            [12] 3663 	mov	a,#0x08
      000EBB F0               [24] 3664 	movx	@dptr,a
                                   3665 ;	board/zbs29_BW_uc/../uc8151.c:724: rbuffer[0] = 0;      // previous value
      000EBC 90r00r00         [24] 3666 	mov	dptr,#_rbuffer
      000EBF E4               [12] 3667 	clr	a
      000EC0 F0               [24] 3668 	movx	@dptr,a
                                   3669 ;	board/zbs29_BW_uc/../uc8151.c:725: rbuffer[1] = x % 8;  // offset
      000EC1 90r00r01         [24] 3670 	mov	dptr,#(_rbuffer + 0x0001)
      000EC4 ED               [12] 3671 	mov	a,r5
      000EC5 F0               [24] 3672 	movx	@dptr,a
                                   3673 ;	board/zbs29_BW_uc/../uc8151.c:726: rbuffer[2] = 0;      // current byte counter;
      000EC6 90r00r02         [24] 3674 	mov	dptr,#(_rbuffer + 0x0002)
      000EC9 E4               [12] 3675 	clr	a
      000ECA F0               [24] 3676 	movx	@dptr,a
                                   3677 ;	board/zbs29_BW_uc/../uc8151.c:727: rbuffer[3] = (epdCharSize * 2);
      000ECB 90r00r00         [24] 3678 	mov	dptr,#_epdCharSize
      000ECE E0               [24] 3679 	movx	a,@dptr
      000ECF 25 E0            [12] 3680 	add	a,acc
      000ED1 FF               [12] 3681 	mov	r7,a
      000ED2 90r00r03         [24] 3682 	mov	dptr,#(_rbuffer + 0x0003)
      000ED5 F0               [24] 3683 	movx	@dptr,a
      000ED6 80 05            [24] 3684 	sjmp	00103$
      000ED8                       3685 00102$:
                                   3686 ;	board/zbs29_BW_uc/../uc8151.c:729: rbuffer[1] = 0;
      000ED8 90r00r01         [24] 3687 	mov	dptr,#(_rbuffer + 0x0001)
      000EDB E4               [12] 3688 	clr	a
      000EDC F0               [24] 3689 	movx	@dptr,a
      000EDD                       3690 00103$:
                                   3691 ;	board/zbs29_BW_uc/../uc8151.c:733: if (epdCharSize == 2) {
      000EDD 90r00r00         [24] 3692 	mov	dptr,#_epdCharSize
      000EE0 E0               [24] 3693 	movx	a,@dptr
      000EE1 FF               [12] 3694 	mov	r7,a
      000EE2 BF 02 55         [24] 3695 	cjne	r7,#0x02,00105$
                                   3696 ;	board/zbs29_BW_uc/../uc8151.c:734: setWindowXY(x, x + 32 + extra, SCREEN_HEIGHT - y, SCREEN_HEIGHT);
      000EE5 90r00rEA         [24] 3697 	mov	dptr,#_epdPrintBegin_x_65536_271
      000EE8 E0               [24] 3698 	movx	a,@dptr
      000EE9 FD               [12] 3699 	mov	r5,a
      000EEA A3               [24] 3700 	inc	dptr
      000EEB E0               [24] 3701 	movx	a,@dptr
      000EEC FF               [12] 3702 	mov	r7,a
      000EED 8D 03            [24] 3703 	mov	ar3,r5
      000EEF 8F 04            [24] 3704 	mov	ar4,r7
      000EF1 74 20            [12] 3705 	mov	a,#0x20
      000EF3 2B               [12] 3706 	add	a,r3
      000EF4 FB               [12] 3707 	mov	r3,a
      000EF5 E4               [12] 3708 	clr	a
      000EF6 3C               [12] 3709 	addc	a,r4
      000EF7 FC               [12] 3710 	mov	r4,a
      000EF8 90r00rEC         [24] 3711 	mov	dptr,#_epdPrintBegin_extra_131072_273
      000EFB E0               [24] 3712 	movx	a,@dptr
      000EFC F9               [12] 3713 	mov	r1,a
      000EFD 7A 00            [12] 3714 	mov	r2,#0x00
      000EFF E9               [12] 3715 	mov	a,r1
      000F00 2B               [12] 3716 	add	a,r3
      000F01 FB               [12] 3717 	mov	r3,a
      000F02 EA               [12] 3718 	mov	a,r2
      000F03 3C               [12] 3719 	addc	a,r4
      000F04 FC               [12] 3720 	mov	r4,a
      000F05 90r00rE5         [24] 3721 	mov	dptr,#_epdPrintBegin_PARM_2
      000F08 E0               [24] 3722 	movx	a,@dptr
      000F09 F9               [12] 3723 	mov	r1,a
      000F0A A3               [24] 3724 	inc	dptr
      000F0B E0               [24] 3725 	movx	a,@dptr
      000F0C FA               [12] 3726 	mov	r2,a
      000F0D 74 28            [12] 3727 	mov	a,#0x28
      000F0F C3               [12] 3728 	clr	c
      000F10 99               [12] 3729 	subb	a,r1
      000F11 F9               [12] 3730 	mov	r1,a
      000F12 74 01            [12] 3731 	mov	a,#0x01
      000F14 9A               [12] 3732 	subb	a,r2
      000F15 FA               [12] 3733 	mov	r2,a
      000F16 90r00rB9         [24] 3734 	mov	dptr,#_setWindowXY_PARM_2
      000F19 EB               [12] 3735 	mov	a,r3
      000F1A F0               [24] 3736 	movx	@dptr,a
      000F1B EC               [12] 3737 	mov	a,r4
      000F1C A3               [24] 3738 	inc	dptr
      000F1D F0               [24] 3739 	movx	@dptr,a
      000F1E 90r00rBB         [24] 3740 	mov	dptr,#_setWindowXY_PARM_3
      000F21 E9               [12] 3741 	mov	a,r1
      000F22 F0               [24] 3742 	movx	@dptr,a
      000F23 EA               [12] 3743 	mov	a,r2
      000F24 A3               [24] 3744 	inc	dptr
      000F25 F0               [24] 3745 	movx	@dptr,a
      000F26 90r00rBD         [24] 3746 	mov	dptr,#_setWindowXY_PARM_4
      000F29 74 28            [12] 3747 	mov	a,#0x28
      000F2B F0               [24] 3748 	movx	@dptr,a
      000F2C 74 01            [12] 3749 	mov	a,#0x01
      000F2E A3               [24] 3750 	inc	dptr
      000F2F F0               [24] 3751 	movx	@dptr,a
      000F30 8D 82            [24] 3752 	mov	dpl,r5
      000F32 8F 83            [24] 3753 	mov	dph,r7
      000F34 12r03rD2         [24] 3754 	lcall	_setWindowXY
      000F37 02r10r5C         [24] 3755 	ljmp	00112$
      000F3A                       3756 00105$:
                                   3757 ;	board/zbs29_BW_uc/../uc8151.c:737: setWindowXY(x, x + 16 + extra, SCREEN_HEIGHT - y, SCREEN_HEIGHT);
      000F3A 90r00rEA         [24] 3758 	mov	dptr,#_epdPrintBegin_x_65536_271
      000F3D E0               [24] 3759 	movx	a,@dptr
      000F3E FD               [12] 3760 	mov	r5,a
      000F3F A3               [24] 3761 	inc	dptr
      000F40 E0               [24] 3762 	movx	a,@dptr
      000F41 FF               [12] 3763 	mov	r7,a
      000F42 8D 03            [24] 3764 	mov	ar3,r5
      000F44 8F 04            [24] 3765 	mov	ar4,r7
      000F46 74 10            [12] 3766 	mov	a,#0x10
      000F48 2B               [12] 3767 	add	a,r3
      000F49 FB               [12] 3768 	mov	r3,a
      000F4A E4               [12] 3769 	clr	a
      000F4B 3C               [12] 3770 	addc	a,r4
      000F4C FC               [12] 3771 	mov	r4,a
      000F4D 90r00rEC         [24] 3772 	mov	dptr,#_epdPrintBegin_extra_131072_273
      000F50 E0               [24] 3773 	movx	a,@dptr
      000F51 F9               [12] 3774 	mov	r1,a
      000F52 7A 00            [12] 3775 	mov	r2,#0x00
      000F54 E9               [12] 3776 	mov	a,r1
      000F55 2B               [12] 3777 	add	a,r3
      000F56 FB               [12] 3778 	mov	r3,a
      000F57 EA               [12] 3779 	mov	a,r2
      000F58 3C               [12] 3780 	addc	a,r4
      000F59 FC               [12] 3781 	mov	r4,a
      000F5A 90r00rE5         [24] 3782 	mov	dptr,#_epdPrintBegin_PARM_2
      000F5D E0               [24] 3783 	movx	a,@dptr
      000F5E F9               [12] 3784 	mov	r1,a
      000F5F A3               [24] 3785 	inc	dptr
      000F60 E0               [24] 3786 	movx	a,@dptr
      000F61 FA               [12] 3787 	mov	r2,a
      000F62 74 28            [12] 3788 	mov	a,#0x28
      000F64 C3               [12] 3789 	clr	c
      000F65 99               [12] 3790 	subb	a,r1
      000F66 F9               [12] 3791 	mov	r1,a
      000F67 74 01            [12] 3792 	mov	a,#0x01
      000F69 9A               [12] 3793 	subb	a,r2
      000F6A FA               [12] 3794 	mov	r2,a
      000F6B 90r00rB9         [24] 3795 	mov	dptr,#_setWindowXY_PARM_2
      000F6E EB               [12] 3796 	mov	a,r3
      000F6F F0               [24] 3797 	movx	@dptr,a
      000F70 EC               [12] 3798 	mov	a,r4
      000F71 A3               [24] 3799 	inc	dptr
      000F72 F0               [24] 3800 	movx	@dptr,a
      000F73 90r00rBB         [24] 3801 	mov	dptr,#_setWindowXY_PARM_3
      000F76 E9               [12] 3802 	mov	a,r1
      000F77 F0               [24] 3803 	movx	@dptr,a
      000F78 EA               [12] 3804 	mov	a,r2
      000F79 A3               [24] 3805 	inc	dptr
      000F7A F0               [24] 3806 	movx	@dptr,a
      000F7B 90r00rBD         [24] 3807 	mov	dptr,#_setWindowXY_PARM_4
      000F7E 74 28            [12] 3808 	mov	a,#0x28
      000F80 F0               [24] 3809 	movx	@dptr,a
      000F81 74 01            [12] 3810 	mov	a,#0x01
      000F83 A3               [24] 3811 	inc	dptr
      000F84 F0               [24] 3812 	movx	@dptr,a
      000F85 8D 82            [24] 3813 	mov	dpl,r5
      000F87 8F 83            [24] 3814 	mov	dph,r7
      000F89 12r03rD2         [24] 3815 	lcall	_setWindowXY
      000F8C 02r10r5C         [24] 3816 	ljmp	00112$
      000F8F                       3817 00111$:
                                   3818 ;	board/zbs29_BW_uc/../uc8151.c:742: if (epdCharSize == 2) {
      000F8F BE 02 68         [24] 3819 	cjne	r6,#0x02,00108$
                                   3820 ;	board/zbs29_BW_uc/../uc8151.c:743: x /= 2;
      000F92 90r00rEA         [24] 3821 	mov	dptr,#_epdPrintBegin_x_65536_271
      000F95 E0               [24] 3822 	movx	a,@dptr
      000F96 FE               [12] 3823 	mov	r6,a
      000F97 A3               [24] 3824 	inc	dptr
      000F98 E0               [24] 3825 	movx	a,@dptr
      000F99 C3               [12] 3826 	clr	c
      000F9A 13               [12] 3827 	rrc	a
      000F9B CE               [12] 3828 	xch	a,r6
      000F9C 13               [12] 3829 	rrc	a
      000F9D CE               [12] 3830 	xch	a,r6
      000F9E FF               [12] 3831 	mov	r7,a
      000F9F 90r00rEA         [24] 3832 	mov	dptr,#_epdPrintBegin_x_65536_271
      000FA2 EE               [12] 3833 	mov	a,r6
      000FA3 F0               [24] 3834 	movx	@dptr,a
      000FA4 EF               [12] 3835 	mov	a,r7
      000FA5 A3               [24] 3836 	inc	dptr
      000FA6 F0               [24] 3837 	movx	@dptr,a
                                   3838 ;	board/zbs29_BW_uc/../uc8151.c:744: x *= 2;
      000FA7 90r00rEA         [24] 3839 	mov	dptr,#_epdPrintBegin_x_65536_271
      000FAA E0               [24] 3840 	movx	a,@dptr
      000FAB FE               [12] 3841 	mov	r6,a
      000FAC A3               [24] 3842 	inc	dptr
      000FAD E0               [24] 3843 	movx	a,@dptr
      000FAE FF               [12] 3844 	mov	r7,a
      000FAF EE               [12] 3845 	mov	a,r6
      000FB0 2E               [12] 3846 	add	a,r6
      000FB1 FE               [12] 3847 	mov	r6,a
      000FB2 EF               [12] 3848 	mov	a,r7
      000FB3 33               [12] 3849 	rlc	a
      000FB4 FF               [12] 3850 	mov	r7,a
      000FB5 90r00rEA         [24] 3851 	mov	dptr,#_epdPrintBegin_x_65536_271
      000FB8 EE               [12] 3852 	mov	a,r6
      000FB9 F0               [24] 3853 	movx	@dptr,a
      000FBA EF               [12] 3854 	mov	a,r7
      000FBB A3               [24] 3855 	inc	dptr
      000FBC F0               [24] 3856 	movx	@dptr,a
                                   3857 ;	board/zbs29_BW_uc/../uc8151.c:745: setWindowXY(x, SCREEN_WIDTH, y, y + 32);
      000FBD 90r00rEA         [24] 3858 	mov	dptr,#_epdPrintBegin_x_65536_271
      000FC0 E0               [24] 3859 	movx	a,@dptr
      000FC1 FE               [12] 3860 	mov	r6,a
      000FC2 A3               [24] 3861 	inc	dptr
      000FC3 E0               [24] 3862 	movx	a,@dptr
      000FC4 FF               [12] 3863 	mov	r7,a
      000FC5 90r00rE5         [24] 3864 	mov	dptr,#_epdPrintBegin_PARM_2
      000FC8 E0               [24] 3865 	movx	a,@dptr
      000FC9 FC               [12] 3866 	mov	r4,a
      000FCA A3               [24] 3867 	inc	dptr
      000FCB E0               [24] 3868 	movx	a,@dptr
      000FCC FD               [12] 3869 	mov	r5,a
      000FCD 8C 02            [24] 3870 	mov	ar2,r4
      000FCF 8D 03            [24] 3871 	mov	ar3,r5
      000FD1 74 20            [12] 3872 	mov	a,#0x20
      000FD3 2A               [12] 3873 	add	a,r2
      000FD4 FA               [12] 3874 	mov	r2,a
      000FD5 E4               [12] 3875 	clr	a
      000FD6 3B               [12] 3876 	addc	a,r3
      000FD7 FB               [12] 3877 	mov	r3,a
      000FD8 90r00rB9         [24] 3878 	mov	dptr,#_setWindowXY_PARM_2
      000FDB 74 80            [12] 3879 	mov	a,#0x80
      000FDD F0               [24] 3880 	movx	@dptr,a
      000FDE E4               [12] 3881 	clr	a
      000FDF A3               [24] 3882 	inc	dptr
      000FE0 F0               [24] 3883 	movx	@dptr,a
      000FE1 90r00rBB         [24] 3884 	mov	dptr,#_setWindowXY_PARM_3
      000FE4 EC               [12] 3885 	mov	a,r4
      000FE5 F0               [24] 3886 	movx	@dptr,a
      000FE6 ED               [12] 3887 	mov	a,r5
      000FE7 A3               [24] 3888 	inc	dptr
      000FE8 F0               [24] 3889 	movx	@dptr,a
      000FE9 90r00rBD         [24] 3890 	mov	dptr,#_setWindowXY_PARM_4
      000FEC EA               [12] 3891 	mov	a,r2
      000FED F0               [24] 3892 	movx	@dptr,a
      000FEE EB               [12] 3893 	mov	a,r3
      000FEF A3               [24] 3894 	inc	dptr
      000FF0 F0               [24] 3895 	movx	@dptr,a
      000FF1 8E 82            [24] 3896 	mov	dpl,r6
      000FF3 8F 83            [24] 3897 	mov	dph,r7
      000FF5 12r03rD2         [24] 3898 	lcall	_setWindowXY
      000FF8 80 3B            [24] 3899 	sjmp	00109$
      000FFA                       3900 00108$:
                                   3901 ;	board/zbs29_BW_uc/../uc8151.c:747: setWindowXY(x, SCREEN_WIDTH, y, y + 16);
      000FFA 90r00rEA         [24] 3902 	mov	dptr,#_epdPrintBegin_x_65536_271
      000FFD E0               [24] 3903 	movx	a,@dptr
      000FFE FE               [12] 3904 	mov	r6,a
      000FFF A3               [24] 3905 	inc	dptr
      001000 E0               [24] 3906 	movx	a,@dptr
      001001 FF               [12] 3907 	mov	r7,a
      001002 90r00rE5         [24] 3908 	mov	dptr,#_epdPrintBegin_PARM_2
      001005 E0               [24] 3909 	movx	a,@dptr
      001006 FC               [12] 3910 	mov	r4,a
      001007 A3               [24] 3911 	inc	dptr
      001008 E0               [24] 3912 	movx	a,@dptr
      001009 FD               [12] 3913 	mov	r5,a
      00100A 8C 02            [24] 3914 	mov	ar2,r4
      00100C 8D 03            [24] 3915 	mov	ar3,r5
      00100E 74 10            [12] 3916 	mov	a,#0x10
      001010 2A               [12] 3917 	add	a,r2
      001011 FA               [12] 3918 	mov	r2,a
      001012 E4               [12] 3919 	clr	a
      001013 3B               [12] 3920 	addc	a,r3
      001014 FB               [12] 3921 	mov	r3,a
      001015 90r00rB9         [24] 3922 	mov	dptr,#_setWindowXY_PARM_2
      001018 74 80            [12] 3923 	mov	a,#0x80
      00101A F0               [24] 3924 	movx	@dptr,a
      00101B E4               [12] 3925 	clr	a
      00101C A3               [24] 3926 	inc	dptr
      00101D F0               [24] 3927 	movx	@dptr,a
      00101E 90r00rBB         [24] 3928 	mov	dptr,#_setWindowXY_PARM_3
      001021 EC               [12] 3929 	mov	a,r4
      001022 F0               [24] 3930 	movx	@dptr,a
      001023 ED               [12] 3931 	mov	a,r5
      001024 A3               [24] 3932 	inc	dptr
      001025 F0               [24] 3933 	movx	@dptr,a
      001026 90r00rBD         [24] 3934 	mov	dptr,#_setWindowXY_PARM_4
      001029 EA               [12] 3935 	mov	a,r2
      00102A F0               [24] 3936 	movx	@dptr,a
      00102B EB               [12] 3937 	mov	a,r3
      00102C A3               [24] 3938 	inc	dptr
      00102D F0               [24] 3939 	movx	@dptr,a
      00102E 8E 82            [24] 3940 	mov	dpl,r6
      001030 8F 83            [24] 3941 	mov	dph,r7
      001032 12r03rD2         [24] 3942 	lcall	_setWindowXY
      001035                       3943 00109$:
                                   3944 ;	board/zbs29_BW_uc/../uc8151.c:750: fontCurXpos = x;
      001035 90r00rEA         [24] 3945 	mov	dptr,#_epdPrintBegin_x_65536_271
      001038 E0               [24] 3946 	movx	a,@dptr
      001039 FE               [12] 3947 	mov	r6,a
      00103A A3               [24] 3948 	inc	dptr
      00103B E0               [24] 3949 	movx	a,@dptr
      00103C FF               [12] 3950 	mov	r7,a
      00103D 90r00r02         [24] 3951 	mov	dptr,#_fontCurXpos
      001040 EE               [12] 3952 	mov	a,r6
      001041 F0               [24] 3953 	movx	@dptr,a
      001042 EF               [12] 3954 	mov	a,r7
      001043 A3               [24] 3955 	inc	dptr
      001044 F0               [24] 3956 	movx	@dptr,a
                                   3957 ;	board/zbs29_BW_uc/../uc8151.c:753: memset(rbuffer, 0, 32);
      001045 90r00r00         [24] 3958 	mov	dptr,#_memset_PARM_2
      001048 E4               [12] 3959 	clr	a
      001049 F0               [24] 3960 	movx	@dptr,a
      00104A 90r00r00         [24] 3961 	mov	dptr,#_memset_PARM_3
      00104D 74 20            [12] 3962 	mov	a,#0x20
      00104F F0               [24] 3963 	movx	@dptr,a
      001050 E4               [12] 3964 	clr	a
      001051 A3               [24] 3965 	inc	dptr
      001052 F0               [24] 3966 	movx	@dptr,a
      001053 90r00r00         [24] 3967 	mov	dptr,#_rbuffer
      001056 75 F0 00         [24] 3968 	mov	b,#0x00
      001059 12r00r00         [24] 3969 	lcall	_memset
      00105C                       3970 00112$:
                                   3971 ;	board/zbs29_BW_uc/../uc8151.c:755: if (color) {
      00105C 90r00rE9         [24] 3972 	mov	dptr,#_epdPrintBegin_PARM_5
      00105F E0               [24] 3973 	movx	a,@dptr
      001060 60 06            [24] 3974 	jz	00114$
                                   3975 ;	board/zbs29_BW_uc/../uc8151.c:756: commandBegin(CMD_DISPLAY_START_TRANSMISSION_DTM2);
      001062 75 82 13         [24] 3976 	mov	dpl,#0x13
      001065 02r01rFB         [24] 3977 	ljmp	_commandBegin
      001068                       3978 00114$:
                                   3979 ;	board/zbs29_BW_uc/../uc8151.c:758: commandBegin(CMD_DISPLAY_START_TRANSMISSION_DTM1);
      001068 75 82 13         [24] 3980 	mov	dpl,#0x13
                                   3981 ;	board/zbs29_BW_uc/../uc8151.c:760: }
      00106B 02r01rFB         [24] 3982 	ljmp	_commandBegin
                                   3983 ;------------------------------------------------------------
                                   3984 ;Allocation info for local variables in function 'epdPrintEnd'
                                   3985 ;------------------------------------------------------------
                                   3986 ;i                         Allocated with name '_epdPrintEnd_i_196608_285'
                                   3987 ;------------------------------------------------------------
                                   3988 ;	board/zbs29_BW_uc/../uc8151.c:761: void epdPrintEnd() {
                                   3989 ;	-----------------------------------------
                                   3990 ;	 function epdPrintEnd
                                   3991 ;	-----------------------------------------
      00106E                       3992 _epdPrintEnd:
                                   3993 ;	board/zbs29_BW_uc/../uc8151.c:762: if (!directionY && ((fontCurXpos % 8) != 0)) {
      00106E 90r00r01         [24] 3994 	mov	dptr,#_directionY
      001071 E0               [24] 3995 	movx	a,@dptr
      001072 70 49            [24] 3996 	jnz	00105$
      001074 90r00r02         [24] 3997 	mov	dptr,#_fontCurXpos
      001077 E0               [24] 3998 	movx	a,@dptr
      001078 FE               [12] 3999 	mov	r6,a
      001079 A3               [24] 4000 	inc	dptr
      00107A E0               [24] 4001 	movx	a,@dptr
      00107B FF               [12] 4002 	mov	r7,a
      00107C EE               [12] 4003 	mov	a,r6
      00107D 54 07            [12] 4004 	anl	a,#0x07
      00107F 60 3C            [24] 4005 	jz	00105$
                                   4006 ;	board/zbs29_BW_uc/../uc8151.c:763: for (uint8_t i = 0; i < (16 * epdCharSize); i++) {
      001081 7F 00            [12] 4007 	mov	r7,#0x00
      001083                       4008 00109$:
      001083 90r00r00         [24] 4009 	mov	dptr,#_epdCharSize
      001086 E0               [24] 4010 	movx	a,@dptr
      001087 FE               [12] 4011 	mov	r6,a
      001088 E4               [12] 4012 	clr	a
      001089 C4               [12] 4013 	swap	a
      00108A 54 F0            [12] 4014 	anl	a,#0xf0
      00108C CE               [12] 4015 	xch	a,r6
      00108D C4               [12] 4016 	swap	a
      00108E CE               [12] 4017 	xch	a,r6
      00108F 6E               [12] 4018 	xrl	a,r6
      001090 CE               [12] 4019 	xch	a,r6
      001091 54 F0            [12] 4020 	anl	a,#0xf0
      001093 CE               [12] 4021 	xch	a,r6
      001094 6E               [12] 4022 	xrl	a,r6
      001095 FD               [12] 4023 	mov	r5,a
      001096 8F 03            [24] 4024 	mov	ar3,r7
      001098 7C 00            [12] 4025 	mov	r4,#0x00
      00109A C3               [12] 4026 	clr	c
      00109B EB               [12] 4027 	mov	a,r3
      00109C 9E               [12] 4028 	subb	a,r6
      00109D EC               [12] 4029 	mov	a,r4
      00109E 64 80            [12] 4030 	xrl	a,#0x80
      0010A0 8D F0            [24] 4031 	mov	b,r5
      0010A2 63 F0 80         [24] 4032 	xrl	b,#0x80
      0010A5 95 F0            [12] 4033 	subb	a,b
      0010A7 50 14            [24] 4034 	jnc	00105$
                                   4035 ;	board/zbs29_BW_uc/../uc8151.c:764: epdSend(rbuffer[i]);
      0010A9 EF               [12] 4036 	mov	a,r7
      0010AA 24r00            [12] 4037 	add	a,#_rbuffer
      0010AC F5 82            [12] 4038 	mov	dpl,a
      0010AE E4               [12] 4039 	clr	a
      0010AF 34s00            [12] 4040 	addc	a,#(_rbuffer >> 8)
      0010B1 F5 83            [12] 4041 	mov	dph,a
      0010B3 E0               [24] 4042 	movx	a,@dptr
      0010B4 FE               [12] 4043 	mov	r6,a
      0010B5 F5 82            [12] 4044 	mov	dpl,a
      0010B7 12r00r00         [24] 4045 	lcall	_spiTXByte
                                   4046 ;	board/zbs29_BW_uc/../uc8151.c:763: for (uint8_t i = 0; i < (16 * epdCharSize); i++) {
      0010BA 0F               [12] 4047 	inc	r7
                                   4048 ;	board/zbs29_BW_uc/../uc8151.c:767: commandEnd();
      0010BB 80 C6            [24] 4049 	sjmp	00109$
      0010BD                       4050 00105$:
                                   4051 ;	assignBit
      0010BD D2 97            [12] 4052 	setb	_P1_7
                                   4053 ;	board/zbs29_BW_uc/../uc8151.c:768: shortCommand(CMD_PARTIAL_OUT);
      0010BF 75 82 92         [24] 4054 	mov	dpl,#0x92
      0010C2 12r01r9A         [24] 4055 	lcall	_shortCommand
                                   4056 ;	board/zbs29_BW_uc/../uc8151.c:769: epdDrawDirection(true);
      0010C5 75 82 01         [24] 4057 	mov	dpl,#0x01
                                   4058 ;	board/zbs29_BW_uc/../uc8151.c:770: }
      0010C8 02r02rAA         [24] 4059 	ljmp	_epdDrawDirection
                                   4060 	.area CSEG    (CODE)
                                   4061 	.area CONST   (CODE)
      000000                       4062 _font:
      000000 00                    4063 	.db #0x00	; 0
      000001 00                    4064 	.db #0x00	; 0
      000002 00                    4065 	.db #0x00	; 0
      000003 00                    4066 	.db #0x00	; 0
      000004 00                    4067 	.db #0x00	; 0
      000005 00                    4068 	.db #0x00	; 0
      000006 00                    4069 	.db #0x00	; 0
      000007 00                    4070 	.db #0x00	; 0
      000008 00                    4071 	.db #0x00	; 0
      000009 00                    4072 	.db #0x00	; 0
      00000A 00                    4073 	.db #0x00	; 0
      00000B 00                    4074 	.db #0x00	; 0
      00000C 00                    4075 	.db #0x00	; 0
      00000D 00                    4076 	.db #0x00	; 0
      00000E 00                    4077 	.db #0x00	; 0
      00000F 00                    4078 	.db #0x00	; 0
      000010 00                    4079 	.db #0x00	; 0
      000011 00                    4080 	.db #0x00	; 0
      000012 00                    4081 	.db #0x00	; 0
      000013 00                    4082 	.db #0x00	; 0
      000014 00                    4083 	.db #0x00	; 0
      000015 00                    4084 	.db #0x00	; 0
      000016 00                    4085 	.db #0x00	; 0
      000017 00                    4086 	.db #0x00	; 0
      000018 00                    4087 	.db #0x00	; 0
      000019 00                    4088 	.db #0x00	; 0
      00001A 00                    4089 	.db #0x00	; 0
      00001B 00                    4090 	.db #0x00	; 0
      00001C D8                    4091 	.db #0xd8	; 216
      00001D 7F                    4092 	.db #0x7f	; 127
      00001E 00                    4093 	.db #0x00	; 0
      00001F 00                    4094 	.db #0x00	; 0
      000020 00                    4095 	.db #0x00	; 0
      000021 00                    4096 	.db #0x00	; 0
      000022 00                    4097 	.db #0x00	; 0
      000023 00                    4098 	.db #0x00	; 0
      000024 00                    4099 	.db #0x00	; 0
      000025 00                    4100 	.db #0x00	; 0
      000026 00                    4101 	.db #0x00	; 0
      000027 00                    4102 	.db #0x00	; 0
      000028 00                    4103 	.db #0x00	; 0
      000029 00                    4104 	.db #0x00	; 0
      00002A 00                    4105 	.db #0x00	; 0
      00002B 00                    4106 	.db #0x00	; 0
      00002C 00                    4107 	.db #0x00	; 0
      00002D 78                    4108 	.db #0x78	; 120	'x'
      00002E 00                    4109 	.db #0x00	; 0
      00002F 00                    4110 	.db #0x00	; 0
      000030 00                    4111 	.db #0x00	; 0
      000031 00                    4112 	.db #0x00	; 0
      000032 00                    4113 	.db #0x00	; 0
      000033 00                    4114 	.db #0x00	; 0
      000034 00                    4115 	.db #0x00	; 0
      000035 78                    4116 	.db #0x78	; 120	'x'
      000036 00                    4117 	.db #0x00	; 0
      000037 00                    4118 	.db #0x00	; 0
      000038 00                    4119 	.db #0x00	; 0
      000039 00                    4120 	.db #0x00	; 0
      00003A 00                    4121 	.db #0x00	; 0
      00003B 00                    4122 	.db #0x00	; 0
      00003C 80                    4123 	.db #0x80	; 128
      00003D 00                    4124 	.db #0x00	; 0
      00003E 98                    4125 	.db #0x98	; 152
      00003F 04                    4126 	.db #0x04	; 4
      000040 E0                    4127 	.db #0xe0	; 224
      000041 05                    4128 	.db #0x05	; 5
      000042 80                    4129 	.db #0x80	; 128
      000043 1E                    4130 	.db #0x1e	; 30
      000044 98                    4131 	.db #0x98	; 152
      000045 64                    4132 	.db #0x64	; 100	'd'
      000046 E0                    4133 	.db #0xe0	; 224
      000047 05                    4134 	.db #0x05	; 5
      000048 80                    4135 	.db #0x80	; 128
      000049 1E                    4136 	.db #0x1e	; 30
      00004A 80                    4137 	.db #0x80	; 128
      00004B 64                    4138 	.db #0x64	; 100	'd'
      00004C 80                    4139 	.db #0x80	; 128
      00004D 04                    4140 	.db #0x04	; 4
      00004E 00                    4141 	.db #0x00	; 0
      00004F 00                    4142 	.db #0x00	; 0
      000050 00                    4143 	.db #0x00	; 0
      000051 00                    4144 	.db #0x00	; 0
      000052 00                    4145 	.db #0x00	; 0
      000053 00                    4146 	.db #0x00	; 0
      000054 18                    4147 	.db #0x18	; 24
      000055 38                    4148 	.db #0x38	; 56	'8'
      000056 08                    4149 	.db #0x08	; 8
      000057 64                    4150 	.db #0x64	; 100	'd'
      000058 08                    4151 	.db #0x08	; 8
      000059 42                    4152 	.db #0x42	; 66	'B'
      00005A FC                    4153 	.db #0xfc	; 252
      00005B FF                    4154 	.db #0xff	; 255
      00005C 88                    4155 	.db #0x88	; 136
      00005D 41                    4156 	.db #0x41	; 65	'A'
      00005E F0                    4157 	.db #0xf0	; 240
      00005F 40                    4158 	.db #0x40	; 64
      000060 00                    4159 	.db #0x00	; 0
      000061 00                    4160 	.db #0x00	; 0
      000062 00                    4161 	.db #0x00	; 0
      000063 00                    4162 	.db #0x00	; 0
      000064 08                    4163 	.db #0x08	; 8
      000065 38                    4164 	.db #0x38	; 56	'8'
      000066 10                    4165 	.db #0x10	; 16
      000067 44                    4166 	.db #0x44	; 68	'D'
      000068 20                    4167 	.db #0x20	; 32
      000069 44                    4168 	.db #0x44	; 68	'D'
      00006A C0                    4169 	.db #0xc0	; 192
      00006B 44                    4170 	.db #0x44	; 68	'D'
      00006C 00                    4171 	.db #0x00	; 0
      00006D 39                    4172 	.db #0x39	; 57	'9'
      00006E 70                    4173 	.db #0x70	; 112	'p'
      00006F 02                    4174 	.db #0x02	; 2
      000070 88                    4175 	.db #0x88	; 136
      000071 0C                    4176 	.db #0x0c	; 12
      000072 88                    4177 	.db #0x88	; 136
      000073 10                    4178 	.db #0x10	; 16
      000074 88                    4179 	.db #0x88	; 136
      000075 20                    4180 	.db #0x20	; 32
      000076 70                    4181 	.db #0x70	; 112	'p'
      000077 40                    4182 	.db #0x40	; 64
      000078 E0                    4183 	.db #0xe0	; 224
      000079 00                    4184 	.db #0x00	; 0
      00007A 10                    4185 	.db #0x10	; 16
      00007B 01                    4186 	.db #0x01	; 1
      00007C 08                    4187 	.db #0x08	; 8
      00007D 3A                    4188 	.db #0x3a	; 58
      00007E 08                    4189 	.db #0x08	; 8
      00007F 46                    4190 	.db #0x46	; 70	'F'
      000080 88                    4191 	.db #0x88	; 136
      000081 45                    4192 	.db #0x45	; 69	'E'
      000082 C8                    4193 	.db #0xc8	; 200
      000083 4C                    4194 	.db #0x4c	; 76	'L'
      000084 38                    4195 	.db #0x38	; 56	'8'
      000085 38                    4196 	.db #0x38	; 56	'8'
      000086 18                    4197 	.db #0x18	; 24
      000087 00                    4198 	.db #0x00	; 0
      000088 68                    4199 	.db #0x68	; 104	'h'
      000089 00                    4200 	.db #0x00	; 0
      00008A 80                    4201 	.db #0x80	; 128
      00008B 01                    4202 	.db #0x01	; 1
      00008C 00                    4203 	.db #0x00	; 0
      00008D 00                    4204 	.db #0x00	; 0
      00008E 00                    4205 	.db #0x00	; 0
      00008F 00                    4206 	.db #0x00	; 0
      000090 00                    4207 	.db #0x00	; 0
      000091 00                    4208 	.db #0x00	; 0
      000092 00                    4209 	.db #0x00	; 0
      000093 00                    4210 	.db #0x00	; 0
      000094 00                    4211 	.db #0x00	; 0
      000095 78                    4212 	.db #0x78	; 120	'x'
      000096 00                    4213 	.db #0x00	; 0
      000097 00                    4214 	.db #0x00	; 0
      000098 00                    4215 	.db #0x00	; 0
      000099 00                    4216 	.db #0x00	; 0
      00009A 00                    4217 	.db #0x00	; 0
      00009B 00                    4218 	.db #0x00	; 0
      00009C 00                    4219 	.db #0x00	; 0
      00009D 00                    4220 	.db #0x00	; 0
      00009E 00                    4221 	.db #0x00	; 0
      00009F 00                    4222 	.db #0x00	; 0
      0000A0 00                    4223 	.db #0x00	; 0
      0000A1 00                    4224 	.db #0x00	; 0
      0000A2 00                    4225 	.db #0x00	; 0
      0000A3 00                    4226 	.db #0x00	; 0
      0000A4 00                    4227 	.db #0x00	; 0
      0000A5 00                    4228 	.db #0x00	; 0
      0000A6 E0                    4229 	.db #0xe0	; 224
      0000A7 07                    4230 	.db #0x07	; 7
      0000A8 18                    4231 	.db #0x18	; 24
      0000A9 18                    4232 	.db #0x18	; 24
      0000AA 0C                    4233 	.db #0x0c	; 12
      0000AB 30                    4234 	.db #0x30	; 48	'0'
      0000AC 04                    4235 	.db #0x04	; 4
      0000AD 20                    4236 	.db #0x20	; 32
      0000AE 02                    4237 	.db #0x02	; 2
      0000AF 40                    4238 	.db #0x40	; 64
      0000B0 02                    4239 	.db #0x02	; 2
      0000B1 40                    4240 	.db #0x40	; 64
      0000B2 00                    4241 	.db #0x00	; 0
      0000B3 00                    4242 	.db #0x00	; 0
      0000B4 00                    4243 	.db #0x00	; 0
      0000B5 00                    4244 	.db #0x00	; 0
      0000B6 02                    4245 	.db #0x02	; 2
      0000B7 40                    4246 	.db #0x40	; 64
      0000B8 02                    4247 	.db #0x02	; 2
      0000B9 40                    4248 	.db #0x40	; 64
      0000BA 04                    4249 	.db #0x04	; 4
      0000BB 20                    4250 	.db #0x20	; 32
      0000BC 0C                    4251 	.db #0x0c	; 12
      0000BD 30                    4252 	.db #0x30	; 48	'0'
      0000BE 18                    4253 	.db #0x18	; 24
      0000BF 18                    4254 	.db #0x18	; 24
      0000C0 E0                    4255 	.db #0xe0	; 224
      0000C1 07                    4256 	.db #0x07	; 7
      0000C2 00                    4257 	.db #0x00	; 0
      0000C3 00                    4258 	.db #0x00	; 0
      0000C4 00                    4259 	.db #0x00	; 0
      0000C5 00                    4260 	.db #0x00	; 0
      0000C6 00                    4261 	.db #0x00	; 0
      0000C7 00                    4262 	.db #0x00	; 0
      0000C8 00                    4263 	.db #0x00	; 0
      0000C9 00                    4264 	.db #0x00	; 0
      0000CA 00                    4265 	.db #0x00	; 0
      0000CB 10                    4266 	.db #0x10	; 16
      0000CC 00                    4267 	.db #0x00	; 0
      0000CD 18                    4268 	.db #0x18	; 24
      0000CE 00                    4269 	.db #0x00	; 0
      0000CF 0F                    4270 	.db #0x0f	; 15
      0000D0 00                    4271 	.db #0x00	; 0
      0000D1 72                    4272 	.db #0x72	; 114	'r'
      0000D2 00                    4273 	.db #0x00	; 0
      0000D3 0F                    4274 	.db #0x0f	; 15
      0000D4 00                    4275 	.db #0x00	; 0
      0000D5 18                    4276 	.db #0x18	; 24
      0000D6 00                    4277 	.db #0x00	; 0
      0000D7 10                    4278 	.db #0x10	; 16
      0000D8 00                    4279 	.db #0x00	; 0
      0000D9 00                    4280 	.db #0x00	; 0
      0000DA 00                    4281 	.db #0x00	; 0
      0000DB 00                    4282 	.db #0x00	; 0
      0000DC 40                    4283 	.db #0x40	; 64
      0000DD 00                    4284 	.db #0x00	; 0
      0000DE 40                    4285 	.db #0x40	; 64
      0000DF 00                    4286 	.db #0x00	; 0
      0000E0 40                    4287 	.db #0x40	; 64
      0000E1 00                    4288 	.db #0x00	; 0
      0000E2 40                    4289 	.db #0x40	; 64
      0000E3 00                    4290 	.db #0x00	; 0
      0000E4 F8                    4291 	.db #0xf8	; 248
      0000E5 07                    4292 	.db #0x07	; 7
      0000E6 40                    4293 	.db #0x40	; 64
      0000E7 00                    4294 	.db #0x00	; 0
      0000E8 40                    4295 	.db #0x40	; 64
      0000E9 00                    4296 	.db #0x00	; 0
      0000EA 40                    4297 	.db #0x40	; 64
      0000EB 00                    4298 	.db #0x00	; 0
      0000EC 40                    4299 	.db #0x40	; 64
      0000ED 00                    4300 	.db #0x00	; 0
      0000EE 00                    4301 	.db #0x00	; 0
      0000EF 00                    4302 	.db #0x00	; 0
      0000F0 00                    4303 	.db #0x00	; 0
      0000F1 00                    4304 	.db #0x00	; 0
      0000F2 00                    4305 	.db #0x00	; 0
      0000F3 00                    4306 	.db #0x00	; 0
      0000F4 00                    4307 	.db #0x00	; 0
      0000F5 00                    4308 	.db #0x00	; 0
      0000F6 19                    4309 	.db #0x19	; 25
      0000F7 00                    4310 	.db #0x00	; 0
      0000F8 1E                    4311 	.db #0x1e	; 30
      0000F9 00                    4312 	.db #0x00	; 0
      0000FA 00                    4313 	.db #0x00	; 0
      0000FB 00                    4314 	.db #0x00	; 0
      0000FC 00                    4315 	.db #0x00	; 0
      0000FD 00                    4316 	.db #0x00	; 0
      0000FE 00                    4317 	.db #0x00	; 0
      0000FF 00                    4318 	.db #0x00	; 0
      000100 00                    4319 	.db #0x00	; 0
      000101 00                    4320 	.db #0x00	; 0
      000102 00                    4321 	.db #0x00	; 0
      000103 00                    4322 	.db #0x00	; 0
      000104 00                    4323 	.db #0x00	; 0
      000105 00                    4324 	.db #0x00	; 0
      000106 00                    4325 	.db #0x00	; 0
      000107 00                    4326 	.db #0x00	; 0
      000108 80                    4327 	.db #0x80	; 128
      000109 00                    4328 	.db #0x00	; 0
      00010A 80                    4329 	.db #0x80	; 128
      00010B 00                    4330 	.db #0x00	; 0
      00010C 80                    4331 	.db #0x80	; 128
      00010D 00                    4332 	.db #0x00	; 0
      00010E 80                    4333 	.db #0x80	; 128
      00010F 00                    4334 	.db #0x00	; 0
      000110 80                    4335 	.db #0x80	; 128
      000111 00                    4336 	.db #0x00	; 0
      000112 80                    4337 	.db #0x80	; 128
      000113 00                    4338 	.db #0x00	; 0
      000114 00                    4339 	.db #0x00	; 0
      000115 00                    4340 	.db #0x00	; 0
      000116 00                    4341 	.db #0x00	; 0
      000117 00                    4342 	.db #0x00	; 0
      000118 00                    4343 	.db #0x00	; 0
      000119 00                    4344 	.db #0x00	; 0
      00011A 00                    4345 	.db #0x00	; 0
      00011B 00                    4346 	.db #0x00	; 0
      00011C 00                    4347 	.db #0x00	; 0
      00011D 00                    4348 	.db #0x00	; 0
      00011E 18                    4349 	.db #0x18	; 24
      00011F 00                    4350 	.db #0x00	; 0
      000120 18                    4351 	.db #0x18	; 24
      000121 00                    4352 	.db #0x00	; 0
      000122 00                    4353 	.db #0x00	; 0
      000123 00                    4354 	.db #0x00	; 0
      000124 00                    4355 	.db #0x00	; 0
      000125 00                    4356 	.db #0x00	; 0
      000126 00                    4357 	.db #0x00	; 0
      000127 00                    4358 	.db #0x00	; 0
      000128 00                    4359 	.db #0x00	; 0
      000129 00                    4360 	.db #0x00	; 0
      00012A 00                    4361 	.db #0x00	; 0
      00012B 00                    4362 	.db #0x00	; 0
      00012C 00                    4363 	.db #0x00	; 0
      00012D 00                    4364 	.db #0x00	; 0
      00012E 02                    4365 	.db #0x02	; 2
      00012F 00                    4366 	.db #0x00	; 0
      000130 0C                    4367 	.db #0x0c	; 12
      000131 00                    4368 	.db #0x00	; 0
      000132 30                    4369 	.db #0x30	; 48	'0'
      000133 00                    4370 	.db #0x00	; 0
      000134 C0                    4371 	.db #0xc0	; 192
      000135 00                    4372 	.db #0x00	; 0
      000136 00                    4373 	.db #0x00	; 0
      000137 03                    4374 	.db #0x03	; 3
      000138 00                    4375 	.db #0x00	; 0
      000139 0C                    4376 	.db #0x0c	; 12
      00013A 00                    4377 	.db #0x00	; 0
      00013B 30                    4378 	.db #0x30	; 48	'0'
      00013C 00                    4379 	.db #0x00	; 0
      00013D 40                    4380 	.db #0x40	; 64
      00013E 00                    4381 	.db #0x00	; 0
      00013F 00                    4382 	.db #0x00	; 0
      000140 00                    4383 	.db #0x00	; 0
      000141 00                    4384 	.db #0x00	; 0
      000142 C0                    4385 	.db #0xc0	; 192
      000143 0F                    4386 	.db #0x0f	; 15
      000144 30                    4387 	.db #0x30	; 48	'0'
      000145 30                    4388 	.db #0x30	; 48	'0'
      000146 08                    4389 	.db #0x08	; 8
      000147 40                    4390 	.db #0x40	; 64
      000148 08                    4391 	.db #0x08	; 8
      000149 40                    4392 	.db #0x40	; 64
      00014A 08                    4393 	.db #0x08	; 8
      00014B 40                    4394 	.db #0x40	; 64
      00014C 30                    4395 	.db #0x30	; 48	'0'
      00014D 30                    4396 	.db #0x30	; 48	'0'
      00014E C0                    4397 	.db #0xc0	; 192
      00014F 0F                    4398 	.db #0x0f	; 15
      000150 00                    4399 	.db #0x00	; 0
      000151 00                    4400 	.db #0x00	; 0
      000152 00                    4401 	.db #0x00	; 0
      000153 00                    4402 	.db #0x00	; 0
      000154 00                    4403 	.db #0x00	; 0
      000155 00                    4404 	.db #0x00	; 0
      000156 08                    4405 	.db #0x08	; 8
      000157 20                    4406 	.db #0x20	; 32
      000158 08                    4407 	.db #0x08	; 8
      000159 20                    4408 	.db #0x20	; 32
      00015A 08                    4409 	.db #0x08	; 8
      00015B 20                    4410 	.db #0x20	; 32
      00015C F8                    4411 	.db #0xf8	; 248
      00015D 7F                    4412 	.db #0x7f	; 127
      00015E 08                    4413 	.db #0x08	; 8
      00015F 00                    4414 	.db #0x00	; 0
      000160 08                    4415 	.db #0x08	; 8
      000161 00                    4416 	.db #0x00	; 0
      000162 08                    4417 	.db #0x08	; 8
      000163 00                    4418 	.db #0x00	; 0
      000164 00                    4419 	.db #0x00	; 0
      000165 00                    4420 	.db #0x00	; 0
      000166 00                    4421 	.db #0x00	; 0
      000167 00                    4422 	.db #0x00	; 0
      000168 00                    4423 	.db #0x00	; 0
      000169 00                    4424 	.db #0x00	; 0
      00016A 18                    4425 	.db #0x18	; 24
      00016B 60                    4426 	.db #0x60	; 96
      00016C 28                    4427 	.db #0x28	; 40
      00016D 40                    4428 	.db #0x40	; 64
      00016E 48                    4429 	.db #0x48	; 72	'H'
      00016F 40                    4430 	.db #0x40	; 64
      000170 88                    4431 	.db #0x88	; 136
      000171 40                    4432 	.db #0x40	; 64
      000172 08                    4433 	.db #0x08	; 8
      000173 43                    4434 	.db #0x43	; 67	'C'
      000174 08                    4435 	.db #0x08	; 8
      000175 3C                    4436 	.db #0x3c	; 60
      000176 00                    4437 	.db #0x00	; 0
      000177 00                    4438 	.db #0x00	; 0
      000178 00                    4439 	.db #0x00	; 0
      000179 00                    4440 	.db #0x00	; 0
      00017A 00                    4441 	.db #0x00	; 0
      00017B 00                    4442 	.db #0x00	; 0
      00017C 00                    4443 	.db #0x00	; 0
      00017D 00                    4444 	.db #0x00	; 0
      00017E 00                    4445 	.db #0x00	; 0
      00017F 00                    4446 	.db #0x00	; 0
      000180 08                    4447 	.db #0x08	; 8
      000181 40                    4448 	.db #0x40	; 64
      000182 08                    4449 	.db #0x08	; 8
      000183 42                    4450 	.db #0x42	; 66	'B'
      000184 08                    4451 	.db #0x08	; 8
      000185 42                    4452 	.db #0x42	; 66	'B'
      000186 08                    4453 	.db #0x08	; 8
      000187 42                    4454 	.db #0x42	; 66	'B'
      000188 F0                    4455 	.db #0xf0	; 240
      000189 3D                    4456 	.db #0x3d	; 61
      00018A 00                    4457 	.db #0x00	; 0
      00018B 00                    4458 	.db #0x00	; 0
      00018C 00                    4459 	.db #0x00	; 0
      00018D 00                    4460 	.db #0x00	; 0
      00018E 00                    4461 	.db #0x00	; 0
      00018F 00                    4462 	.db #0x00	; 0
      000190 C0                    4463 	.db #0xc0	; 192
      000191 00                    4464 	.db #0x00	; 0
      000192 40                    4465 	.db #0x40	; 64
      000193 03                    4466 	.db #0x03	; 3
      000194 40                    4467 	.db #0x40	; 64
      000195 04                    4468 	.db #0x04	; 4
      000196 40                    4469 	.db #0x40	; 64
      000197 18                    4470 	.db #0x18	; 24
      000198 40                    4471 	.db #0x40	; 64
      000199 20                    4472 	.db #0x20	; 32
      00019A F8                    4473 	.db #0xf8	; 248
      00019B 7F                    4474 	.db #0x7f	; 127
      00019C 40                    4475 	.db #0x40	; 64
      00019D 00                    4476 	.db #0x00	; 0
      00019E 40                    4477 	.db #0x40	; 64
      00019F 00                    4478 	.db #0x00	; 0
      0001A0 00                    4479 	.db #0x00	; 0
      0001A1 00                    4480 	.db #0x00	; 0
      0001A2 00                    4481 	.db #0x00	; 0
      0001A3 00                    4482 	.db #0x00	; 0
      0001A4 00                    4483 	.db #0x00	; 0
      0001A5 00                    4484 	.db #0x00	; 0
      0001A6 00                    4485 	.db #0x00	; 0
      0001A7 00                    4486 	.db #0x00	; 0
      0001A8 08                    4487 	.db #0x08	; 8
      0001A9 7C                    4488 	.db #0x7c	; 124
      0001AA 08                    4489 	.db #0x08	; 8
      0001AB 44                    4490 	.db #0x44	; 68	'D'
      0001AC 08                    4491 	.db #0x08	; 8
      0001AD 44                    4492 	.db #0x44	; 68	'D'
      0001AE 10                    4493 	.db #0x10	; 16
      0001AF 42                    4494 	.db #0x42	; 66	'B'
      0001B0 E0                    4495 	.db #0xe0	; 224
      0001B1 41                    4496 	.db #0x41	; 65	'A'
      0001B2 00                    4497 	.db #0x00	; 0
      0001B3 00                    4498 	.db #0x00	; 0
      0001B4 00                    4499 	.db #0x00	; 0
      0001B5 00                    4500 	.db #0x00	; 0
      0001B6 00                    4501 	.db #0x00	; 0
      0001B7 00                    4502 	.db #0x00	; 0
      0001B8 00                    4503 	.db #0x00	; 0
      0001B9 00                    4504 	.db #0x00	; 0
      0001BA E0                    4505 	.db #0xe0	; 224
      0001BB 0F                    4506 	.db #0x0f	; 15
      0001BC 10                    4507 	.db #0x10	; 16
      0001BD 32                    4508 	.db #0x32	; 50	'2'
      0001BE 08                    4509 	.db #0x08	; 8
      0001BF 44                    4510 	.db #0x44	; 68	'D'
      0001C0 08                    4511 	.db #0x08	; 8
      0001C1 44                    4512 	.db #0x44	; 68	'D'
      0001C2 08                    4513 	.db #0x08	; 8
      0001C3 44                    4514 	.db #0x44	; 68	'D'
      0001C4 10                    4515 	.db #0x10	; 16
      0001C5 42                    4516 	.db #0x42	; 66	'B'
      0001C6 E0                    4517 	.db #0xe0	; 224
      0001C7 01                    4518 	.db #0x01	; 1
      0001C8 00                    4519 	.db #0x00	; 0
      0001C9 00                    4520 	.db #0x00	; 0
      0001CA 00                    4521 	.db #0x00	; 0
      0001CB 00                    4522 	.db #0x00	; 0
      0001CC 00                    4523 	.db #0x00	; 0
      0001CD 00                    4524 	.db #0x00	; 0
      0001CE 00                    4525 	.db #0x00	; 0
      0001CF 40                    4526 	.db #0x40	; 64
      0001D0 18                    4527 	.db #0x18	; 24
      0001D1 40                    4528 	.db #0x40	; 64
      0001D2 E0                    4529 	.db #0xe0	; 224
      0001D3 40                    4530 	.db #0x40	; 64
      0001D4 00                    4531 	.db #0x00	; 0
      0001D5 43                    4532 	.db #0x43	; 67	'C'
      0001D6 00                    4533 	.db #0x00	; 0
      0001D7 4C                    4534 	.db #0x4c	; 76	'L'
      0001D8 00                    4535 	.db #0x00	; 0
      0001D9 50                    4536 	.db #0x50	; 80	'P'
      0001DA 00                    4537 	.db #0x00	; 0
      0001DB 60                    4538 	.db #0x60	; 96
      0001DC 00                    4539 	.db #0x00	; 0
      0001DD 00                    4540 	.db #0x00	; 0
      0001DE 00                    4541 	.db #0x00	; 0
      0001DF 00                    4542 	.db #0x00	; 0
      0001E0 00                    4543 	.db #0x00	; 0
      0001E1 00                    4544 	.db #0x00	; 0
      0001E2 F0                    4545 	.db #0xf0	; 240
      0001E3 38                    4546 	.db #0x38	; 56	'8'
      0001E4 08                    4547 	.db #0x08	; 8
      0001E5 45                    4548 	.db #0x45	; 69	'E'
      0001E6 08                    4549 	.db #0x08	; 8
      0001E7 42                    4550 	.db #0x42	; 66	'B'
      0001E8 08                    4551 	.db #0x08	; 8
      0001E9 42                    4552 	.db #0x42	; 66	'B'
      0001EA 08                    4553 	.db #0x08	; 8
      0001EB 45                    4554 	.db #0x45	; 69	'E'
      0001EC 90                    4555 	.db #0x90	; 144
      0001ED 45                    4556 	.db #0x45	; 69	'E'
      0001EE 60                    4557 	.db #0x60	; 96
      0001EF 38                    4558 	.db #0x38	; 56	'8'
      0001F0 00                    4559 	.db #0x00	; 0
      0001F1 00                    4560 	.db #0x00	; 0
      0001F2 00                    4561 	.db #0x00	; 0
      0001F3 00                    4562 	.db #0x00	; 0
      0001F4 00                    4563 	.db #0x00	; 0
      0001F5 00                    4564 	.db #0x00	; 0
      0001F6 00                    4565 	.db #0x00	; 0
      0001F7 1E                    4566 	.db #0x1e	; 30
      0001F8 08                    4567 	.db #0x08	; 8
      0001F9 21                    4568 	.db #0x21	; 33
      0001FA 88                    4569 	.db #0x88	; 136
      0001FB 40                    4570 	.db #0x40	; 64
      0001FC 88                    4571 	.db #0x88	; 136
      0001FD 40                    4572 	.db #0x40	; 64
      0001FE 88                    4573 	.db #0x88	; 136
      0001FF 40                    4574 	.db #0x40	; 64
      000200 30                    4575 	.db #0x30	; 48	'0'
      000201 21                    4576 	.db #0x21	; 33
      000202 C0                    4577 	.db #0xc0	; 192
      000203 1F                    4578 	.db #0x1f	; 31
      000204 00                    4579 	.db #0x00	; 0
      000205 00                    4580 	.db #0x00	; 0
      000206 00                    4581 	.db #0x00	; 0
      000207 00                    4582 	.db #0x00	; 0
      000208 00                    4583 	.db #0x00	; 0
      000209 00                    4584 	.db #0x00	; 0
      00020A 00                    4585 	.db #0x00	; 0
      00020B 00                    4586 	.db #0x00	; 0
      00020C 00                    4587 	.db #0x00	; 0
      00020D 00                    4588 	.db #0x00	; 0
      00020E 18                    4589 	.db #0x18	; 24
      00020F 06                    4590 	.db #0x06	; 6
      000210 18                    4591 	.db #0x18	; 24
      000211 06                    4592 	.db #0x06	; 6
      000212 00                    4593 	.db #0x00	; 0
      000213 00                    4594 	.db #0x00	; 0
      000214 00                    4595 	.db #0x00	; 0
      000215 00                    4596 	.db #0x00	; 0
      000216 00                    4597 	.db #0x00	; 0
      000217 00                    4598 	.db #0x00	; 0
      000218 00                    4599 	.db #0x00	; 0
      000219 00                    4600 	.db #0x00	; 0
      00021A 00                    4601 	.db #0x00	; 0
      00021B 00                    4602 	.db #0x00	; 0
      00021C 00                    4603 	.db #0x00	; 0
      00021D 00                    4604 	.db #0x00	; 0
      00021E 00                    4605 	.db #0x00	; 0
      00021F 00                    4606 	.db #0x00	; 0
      000220 00                    4607 	.db #0x00	; 0
      000221 00                    4608 	.db #0x00	; 0
      000222 19                    4609 	.db #0x19	; 25
      000223 06                    4610 	.db #0x06	; 6
      000224 1E                    4611 	.db #0x1e	; 30
      000225 06                    4612 	.db #0x06	; 6
      000226 00                    4613 	.db #0x00	; 0
      000227 00                    4614 	.db #0x00	; 0
      000228 00                    4615 	.db #0x00	; 0
      000229 00                    4616 	.db #0x00	; 0
      00022A 00                    4617 	.db #0x00	; 0
      00022B 00                    4618 	.db #0x00	; 0
      00022C 00                    4619 	.db #0x00	; 0
      00022D 00                    4620 	.db #0x00	; 0
      00022E 00                    4621 	.db #0x00	; 0
      00022F 00                    4622 	.db #0x00	; 0
      000230 00                    4623 	.db #0x00	; 0
      000231 00                    4624 	.db #0x00	; 0
      000232 00                    4625 	.db #0x00	; 0
      000233 00                    4626 	.db #0x00	; 0
      000234 C0                    4627 	.db #0xc0	; 192
      000235 00                    4628 	.db #0x00	; 0
      000236 C0                    4629 	.db #0xc0	; 192
      000237 00                    4630 	.db #0x00	; 0
      000238 20                    4631 	.db #0x20	; 32
      000239 01                    4632 	.db #0x01	; 1
      00023A 20                    4633 	.db #0x20	; 32
      00023B 01                    4634 	.db #0x01	; 1
      00023C 10                    4635 	.db #0x10	; 16
      00023D 02                    4636 	.db #0x02	; 2
      00023E 10                    4637 	.db #0x10	; 16
      00023F 02                    4638 	.db #0x02	; 2
      000240 08                    4639 	.db #0x08	; 8
      000241 04                    4640 	.db #0x04	; 4
      000242 00                    4641 	.db #0x00	; 0
      000243 00                    4642 	.db #0x00	; 0
      000244 00                    4643 	.db #0x00	; 0
      000245 00                    4644 	.db #0x00	; 0
      000246 20                    4645 	.db #0x20	; 32
      000247 01                    4646 	.db #0x01	; 1
      000248 20                    4647 	.db #0x20	; 32
      000249 01                    4648 	.db #0x01	; 1
      00024A 20                    4649 	.db #0x20	; 32
      00024B 01                    4650 	.db #0x01	; 1
      00024C 20                    4651 	.db #0x20	; 32
      00024D 01                    4652 	.db #0x01	; 1
      00024E 20                    4653 	.db #0x20	; 32
      00024F 01                    4654 	.db #0x01	; 1
      000250 20                    4655 	.db #0x20	; 32
      000251 01                    4656 	.db #0x01	; 1
      000252 20                    4657 	.db #0x20	; 32
      000253 01                    4658 	.db #0x01	; 1
      000254 20                    4659 	.db #0x20	; 32
      000255 01                    4660 	.db #0x01	; 1
      000256 00                    4661 	.db #0x00	; 0
      000257 00                    4662 	.db #0x00	; 0
      000258 00                    4663 	.db #0x00	; 0
      000259 00                    4664 	.db #0x00	; 0
      00025A 08                    4665 	.db #0x08	; 8
      00025B 04                    4666 	.db #0x04	; 4
      00025C 10                    4667 	.db #0x10	; 16
      00025D 02                    4668 	.db #0x02	; 2
      00025E 10                    4669 	.db #0x10	; 16
      00025F 02                    4670 	.db #0x02	; 2
      000260 20                    4671 	.db #0x20	; 32
      000261 01                    4672 	.db #0x01	; 1
      000262 20                    4673 	.db #0x20	; 32
      000263 01                    4674 	.db #0x01	; 1
      000264 C0                    4675 	.db #0xc0	; 192
      000265 00                    4676 	.db #0x00	; 0
      000266 C0                    4677 	.db #0xc0	; 192
      000267 00                    4678 	.db #0x00	; 0
      000268 00                    4679 	.db #0x00	; 0
      000269 00                    4680 	.db #0x00	; 0
      00026A 00                    4681 	.db #0x00	; 0
      00026B 00                    4682 	.db #0x00	; 0
      00026C 00                    4683 	.db #0x00	; 0
      00026D 00                    4684 	.db #0x00	; 0
      00026E 00                    4685 	.db #0x00	; 0
      00026F 70                    4686 	.db #0x70	; 112	'p'
      000270 00                    4687 	.db #0x00	; 0
      000271 40                    4688 	.db #0x40	; 64
      000272 D8                    4689 	.db #0xd8	; 216
      000273 40                    4690 	.db #0x40	; 64
      000274 00                    4691 	.db #0x00	; 0
      000275 41                    4692 	.db #0x41	; 65	'A'
      000276 00                    4693 	.db #0x00	; 0
      000277 42                    4694 	.db #0x42	; 66	'B'
      000278 00                    4695 	.db #0x00	; 0
      000279 64                    4696 	.db #0x64	; 100	'd'
      00027A 00                    4697 	.db #0x00	; 0
      00027B 38                    4698 	.db #0x38	; 56	'8'
      00027C 00                    4699 	.db #0x00	; 0
      00027D 00                    4700 	.db #0x00	; 0
      00027E 00                    4701 	.db #0x00	; 0
      00027F 00                    4702 	.db #0x00	; 0
      000280 C0                    4703 	.db #0xc0	; 192
      000281 0F                    4704 	.db #0x0f	; 15
      000282 30                    4705 	.db #0x30	; 48	'0'
      000283 18                    4706 	.db #0x18	; 24
      000284 18                    4707 	.db #0x18	; 24
      000285 20                    4708 	.db #0x20	; 32
      000286 C8                    4709 	.db #0xc8	; 200
      000287 47                    4710 	.db #0x47	; 71	'G'
      000288 28                    4711 	.db #0x28	; 40
      000289 48                    4712 	.db #0x48	; 72	'H'
      00028A 68                    4713 	.db #0x68	; 104	'h'
      00028B 50                    4714 	.db #0x50	; 80	'P'
      00028C D8                    4715 	.db #0xd8	; 216
      00028D 51                    4716 	.db #0x51	; 81	'Q'
      00028E E0                    4717 	.db #0xe0	; 224
      00028F 3F                    4718 	.db #0x3f	; 63
      000290 20                    4719 	.db #0x20	; 32
      000291 00                    4720 	.db #0x00	; 0
      000292 20                    4721 	.db #0x20	; 32
      000293 00                    4722 	.db #0x00	; 0
      000294 08                    4723 	.db #0x08	; 8
      000295 00                    4724 	.db #0x00	; 0
      000296 70                    4725 	.db #0x70	; 112	'p'
      000297 00                    4726 	.db #0x00	; 0
      000298 C0                    4727 	.db #0xc0	; 192
      000299 01                    4728 	.db #0x01	; 1
      00029A 40                    4729 	.db #0x40	; 64
      00029B 0E                    4730 	.db #0x0e	; 14
      00029C 40                    4731 	.db #0x40	; 64
      00029D 18                    4732 	.db #0x18	; 24
      00029E 40                    4733 	.db #0x40	; 64
      00029F 0C                    4734 	.db #0x0c	; 12
      0002A0 40                    4735 	.db #0x40	; 64
      0002A1 03                    4736 	.db #0x03	; 3
      0002A2 C0                    4737 	.db #0xc0	; 192
      0002A3 00                    4738 	.db #0x00	; 0
      0002A4 30                    4739 	.db #0x30	; 48	'0'
      0002A5 00                    4740 	.db #0x00	; 0
      0002A6 08                    4741 	.db #0x08	; 8
      0002A7 00                    4742 	.db #0x00	; 0
      0002A8 00                    4743 	.db #0x00	; 0
      0002A9 00                    4744 	.db #0x00	; 0
      0002AA F8                    4745 	.db #0xf8	; 248
      0002AB 1F                    4746 	.db #0x1f	; 31
      0002AC 08                    4747 	.db #0x08	; 8
      0002AD 11                    4748 	.db #0x11	; 17
      0002AE 08                    4749 	.db #0x08	; 8
      0002AF 11                    4750 	.db #0x11	; 17
      0002B0 08                    4751 	.db #0x08	; 8
      0002B1 11                    4752 	.db #0x11	; 17
      0002B2 08                    4753 	.db #0x08	; 8
      0002B3 11                    4754 	.db #0x11	; 17
      0002B4 88                    4755 	.db #0x88	; 136
      0002B5 12                    4756 	.db #0x12	; 18
      0002B6 70                    4757 	.db #0x70	; 112	'p'
      0002B7 0C                    4758 	.db #0x0c	; 12
      0002B8 00                    4759 	.db #0x00	; 0
      0002B9 00                    4760 	.db #0x00	; 0
      0002BA 00                    4761 	.db #0x00	; 0
      0002BB 00                    4762 	.db #0x00	; 0
      0002BC C0                    4763 	.db #0xc0	; 192
      0002BD 03                    4764 	.db #0x03	; 3
      0002BE 30                    4765 	.db #0x30	; 48	'0'
      0002BF 0C                    4766 	.db #0x0c	; 12
      0002C0 10                    4767 	.db #0x10	; 16
      0002C1 08                    4768 	.db #0x08	; 8
      0002C2 08                    4769 	.db #0x08	; 8
      0002C3 10                    4770 	.db #0x10	; 16
      0002C4 08                    4771 	.db #0x08	; 8
      0002C5 10                    4772 	.db #0x10	; 16
      0002C6 08                    4773 	.db #0x08	; 8
      0002C7 10                    4774 	.db #0x10	; 16
      0002C8 08                    4775 	.db #0x08	; 8
      0002C9 10                    4776 	.db #0x10	; 16
      0002CA 08                    4777 	.db #0x08	; 8
      0002CB 18                    4778 	.db #0x18	; 24
      0002CC 00                    4779 	.db #0x00	; 0
      0002CD 00                    4780 	.db #0x00	; 0
      0002CE 00                    4781 	.db #0x00	; 0
      0002CF 00                    4782 	.db #0x00	; 0
      0002D0 00                    4783 	.db #0x00	; 0
      0002D1 00                    4784 	.db #0x00	; 0
      0002D2 F8                    4785 	.db #0xf8	; 248
      0002D3 1F                    4786 	.db #0x1f	; 31
      0002D4 08                    4787 	.db #0x08	; 8
      0002D5 10                    4788 	.db #0x10	; 16
      0002D6 08                    4789 	.db #0x08	; 8
      0002D7 10                    4790 	.db #0x10	; 16
      0002D8 08                    4791 	.db #0x08	; 8
      0002D9 10                    4792 	.db #0x10	; 16
      0002DA 08                    4793 	.db #0x08	; 8
      0002DB 10                    4794 	.db #0x10	; 16
      0002DC 10                    4795 	.db #0x10	; 16
      0002DD 08                    4796 	.db #0x08	; 8
      0002DE E0                    4797 	.db #0xe0	; 224
      0002DF 07                    4798 	.db #0x07	; 7
      0002E0 00                    4799 	.db #0x00	; 0
      0002E1 00                    4800 	.db #0x00	; 0
      0002E2 00                    4801 	.db #0x00	; 0
      0002E3 00                    4802 	.db #0x00	; 0
      0002E4 00                    4803 	.db #0x00	; 0
      0002E5 00                    4804 	.db #0x00	; 0
      0002E6 F8                    4805 	.db #0xf8	; 248
      0002E7 1F                    4806 	.db #0x1f	; 31
      0002E8 88                    4807 	.db #0x88	; 136
      0002E9 10                    4808 	.db #0x10	; 16
      0002EA 88                    4809 	.db #0x88	; 136
      0002EB 10                    4810 	.db #0x10	; 16
      0002EC 88                    4811 	.db #0x88	; 136
      0002ED 10                    4812 	.db #0x10	; 16
      0002EE 88                    4813 	.db #0x88	; 136
      0002EF 10                    4814 	.db #0x10	; 16
      0002F0 88                    4815 	.db #0x88	; 136
      0002F1 10                    4816 	.db #0x10	; 16
      0002F2 08                    4817 	.db #0x08	; 8
      0002F3 10                    4818 	.db #0x10	; 16
      0002F4 00                    4819 	.db #0x00	; 0
      0002F5 00                    4820 	.db #0x00	; 0
      0002F6 00                    4821 	.db #0x00	; 0
      0002F7 00                    4822 	.db #0x00	; 0
      0002F8 00                    4823 	.db #0x00	; 0
      0002F9 00                    4824 	.db #0x00	; 0
      0002FA F8                    4825 	.db #0xf8	; 248
      0002FB 1F                    4826 	.db #0x1f	; 31
      0002FC 80                    4827 	.db #0x80	; 128
      0002FD 10                    4828 	.db #0x10	; 16
      0002FE 80                    4829 	.db #0x80	; 128
      0002FF 10                    4830 	.db #0x10	; 16
      000300 80                    4831 	.db #0x80	; 128
      000301 10                    4832 	.db #0x10	; 16
      000302 80                    4833 	.db #0x80	; 128
      000303 10                    4834 	.db #0x10	; 16
      000304 80                    4835 	.db #0x80	; 128
      000305 10                    4836 	.db #0x10	; 16
      000306 00                    4837 	.db #0x00	; 0
      000307 10                    4838 	.db #0x10	; 16
      000308 00                    4839 	.db #0x00	; 0
      000309 00                    4840 	.db #0x00	; 0
      00030A 00                    4841 	.db #0x00	; 0
      00030B 00                    4842 	.db #0x00	; 0
      00030C 00                    4843 	.db #0x00	; 0
      00030D 00                    4844 	.db #0x00	; 0
      00030E C0                    4845 	.db #0xc0	; 192
      00030F 03                    4846 	.db #0x03	; 3
      000310 30                    4847 	.db #0x30	; 48	'0'
      000311 0C                    4848 	.db #0x0c	; 12
      000312 10                    4849 	.db #0x10	; 16
      000313 08                    4850 	.db #0x08	; 8
      000314 08                    4851 	.db #0x08	; 8
      000315 10                    4852 	.db #0x10	; 16
      000316 08                    4853 	.db #0x08	; 8
      000317 10                    4854 	.db #0x10	; 16
      000318 88                    4855 	.db #0x88	; 136
      000319 10                    4856 	.db #0x10	; 16
      00031A 88                    4857 	.db #0x88	; 136
      00031B 10                    4858 	.db #0x10	; 16
      00031C F8                    4859 	.db #0xf8	; 248
      00031D 18                    4860 	.db #0x18	; 24
      00031E 00                    4861 	.db #0x00	; 0
      00031F 00                    4862 	.db #0x00	; 0
      000320 00                    4863 	.db #0x00	; 0
      000321 00                    4864 	.db #0x00	; 0
      000322 F8                    4865 	.db #0xf8	; 248
      000323 1F                    4866 	.db #0x1f	; 31
      000324 80                    4867 	.db #0x80	; 128
      000325 00                    4868 	.db #0x00	; 0
      000326 80                    4869 	.db #0x80	; 128
      000327 00                    4870 	.db #0x00	; 0
      000328 80                    4871 	.db #0x80	; 128
      000329 00                    4872 	.db #0x00	; 0
      00032A 80                    4873 	.db #0x80	; 128
      00032B 00                    4874 	.db #0x00	; 0
      00032C 80                    4875 	.db #0x80	; 128
      00032D 00                    4876 	.db #0x00	; 0
      00032E F8                    4877 	.db #0xf8	; 248
      00032F 1F                    4878 	.db #0x1f	; 31
      000330 00                    4879 	.db #0x00	; 0
      000331 00                    4880 	.db #0x00	; 0
      000332 00                    4881 	.db #0x00	; 0
      000333 00                    4882 	.db #0x00	; 0
      000334 00                    4883 	.db #0x00	; 0
      000335 00                    4884 	.db #0x00	; 0
      000336 08                    4885 	.db #0x08	; 8
      000337 10                    4886 	.db #0x10	; 16
      000338 08                    4887 	.db #0x08	; 8
      000339 10                    4888 	.db #0x10	; 16
      00033A 08                    4889 	.db #0x08	; 8
      00033B 10                    4890 	.db #0x10	; 16
      00033C F8                    4891 	.db #0xf8	; 248
      00033D 1F                    4892 	.db #0x1f	; 31
      00033E 08                    4893 	.db #0x08	; 8
      00033F 10                    4894 	.db #0x10	; 16
      000340 08                    4895 	.db #0x08	; 8
      000341 10                    4896 	.db #0x10	; 16
      000342 08                    4897 	.db #0x08	; 8
      000343 10                    4898 	.db #0x10	; 16
      000344 00                    4899 	.db #0x00	; 0
      000345 00                    4900 	.db #0x00	; 0
      000346 00                    4901 	.db #0x00	; 0
      000347 00                    4902 	.db #0x00	; 0
      000348 00                    4903 	.db #0x00	; 0
      000349 00                    4904 	.db #0x00	; 0
      00034A 00                    4905 	.db #0x00	; 0
      00034B 00                    4906 	.db #0x00	; 0
      00034C 08                    4907 	.db #0x08	; 8
      00034D 00                    4908 	.db #0x00	; 0
      00034E 08                    4909 	.db #0x08	; 8
      00034F 10                    4910 	.db #0x10	; 16
      000350 08                    4911 	.db #0x08	; 8
      000351 10                    4912 	.db #0x10	; 16
      000352 08                    4913 	.db #0x08	; 8
      000353 10                    4914 	.db #0x10	; 16
      000354 F0                    4915 	.db #0xf0	; 240
      000355 1F                    4916 	.db #0x1f	; 31
      000356 00                    4917 	.db #0x00	; 0
      000357 00                    4918 	.db #0x00	; 0
      000358 00                    4919 	.db #0x00	; 0
      000359 00                    4920 	.db #0x00	; 0
      00035A 00                    4921 	.db #0x00	; 0
      00035B 00                    4922 	.db #0x00	; 0
      00035C 00                    4923 	.db #0x00	; 0
      00035D 00                    4924 	.db #0x00	; 0
      00035E F8                    4925 	.db #0xf8	; 248
      00035F 1F                    4926 	.db #0x1f	; 31
      000360 00                    4927 	.db #0x00	; 0
      000361 01                    4928 	.db #0x01	; 1
      000362 80                    4929 	.db #0x80	; 128
      000363 01                    4930 	.db #0x01	; 1
      000364 40                    4931 	.db #0x40	; 64
      000365 02                    4932 	.db #0x02	; 2
      000366 20                    4933 	.db #0x20	; 32
      000367 04                    4934 	.db #0x04	; 4
      000368 20                    4935 	.db #0x20	; 32
      000369 08                    4936 	.db #0x08	; 8
      00036A 10                    4937 	.db #0x10	; 16
      00036B 10                    4938 	.db #0x10	; 16
      00036C 08                    4939 	.db #0x08	; 8
      00036D 00                    4940 	.db #0x00	; 0
      00036E 00                    4941 	.db #0x00	; 0
      00036F 00                    4942 	.db #0x00	; 0
      000370 00                    4943 	.db #0x00	; 0
      000371 00                    4944 	.db #0x00	; 0
      000372 F8                    4945 	.db #0xf8	; 248
      000373 1F                    4946 	.db #0x1f	; 31
      000374 08                    4947 	.db #0x08	; 8
      000375 00                    4948 	.db #0x00	; 0
      000376 08                    4949 	.db #0x08	; 8
      000377 00                    4950 	.db #0x00	; 0
      000378 08                    4951 	.db #0x08	; 8
      000379 00                    4952 	.db #0x00	; 0
      00037A 08                    4953 	.db #0x08	; 8
      00037B 00                    4954 	.db #0x00	; 0
      00037C 08                    4955 	.db #0x08	; 8
      00037D 00                    4956 	.db #0x00	; 0
      00037E 08                    4957 	.db #0x08	; 8
      00037F 00                    4958 	.db #0x00	; 0
      000380 00                    4959 	.db #0x00	; 0
      000381 00                    4960 	.db #0x00	; 0
      000382 00                    4961 	.db #0x00	; 0
      000383 00                    4962 	.db #0x00	; 0
      000384 F8                    4963 	.db #0xf8	; 248
      000385 1F                    4964 	.db #0x1f	; 31
      000386 00                    4965 	.db #0x00	; 0
      000387 1C                    4966 	.db #0x1c	; 28
      000388 80                    4967 	.db #0x80	; 128
      000389 07                    4968 	.db #0x07	; 7
      00038A E0                    4969 	.db #0xe0	; 224
      00038B 00                    4970 	.db #0x00	; 0
      00038C 60                    4971 	.db #0x60	; 96
      00038D 00                    4972 	.db #0x00	; 0
      00038E 80                    4973 	.db #0x80	; 128
      00038F 03                    4974 	.db #0x03	; 3
      000390 00                    4975 	.db #0x00	; 0
      000391 1C                    4976 	.db #0x1c	; 28
      000392 F8                    4977 	.db #0xf8	; 248
      000393 1F                    4978 	.db #0x1f	; 31
      000394 00                    4979 	.db #0x00	; 0
      000395 00                    4980 	.db #0x00	; 0
      000396 00                    4981 	.db #0x00	; 0
      000397 00                    4982 	.db #0x00	; 0
      000398 00                    4983 	.db #0x00	; 0
      000399 00                    4984 	.db #0x00	; 0
      00039A F8                    4985 	.db #0xf8	; 248
      00039B 1F                    4986 	.db #0x1f	; 31
      00039C 00                    4987 	.db #0x00	; 0
      00039D 08                    4988 	.db #0x08	; 8
      00039E 00                    4989 	.db #0x00	; 0
      00039F 06                    4990 	.db #0x06	; 6
      0003A0 80                    4991 	.db #0x80	; 128
      0003A1 01                    4992 	.db #0x01	; 1
      0003A2 60                    4993 	.db #0x60	; 96
      0003A3 00                    4994 	.db #0x00	; 0
      0003A4 10                    4995 	.db #0x10	; 16
      0003A5 00                    4996 	.db #0x00	; 0
      0003A6 F8                    4997 	.db #0xf8	; 248
      0003A7 1F                    4998 	.db #0x1f	; 31
      0003A8 00                    4999 	.db #0x00	; 0
      0003A9 00                    5000 	.db #0x00	; 0
      0003AA 00                    5001 	.db #0x00	; 0
      0003AB 00                    5002 	.db #0x00	; 0
      0003AC 00                    5003 	.db #0x00	; 0
      0003AD 00                    5004 	.db #0x00	; 0
      0003AE E0                    5005 	.db #0xe0	; 224
      0003AF 07                    5006 	.db #0x07	; 7
      0003B0 10                    5007 	.db #0x10	; 16
      0003B1 08                    5008 	.db #0x08	; 8
      0003B2 08                    5009 	.db #0x08	; 8
      0003B3 10                    5010 	.db #0x10	; 16
      0003B4 08                    5011 	.db #0x08	; 8
      0003B5 10                    5012 	.db #0x10	; 16
      0003B6 08                    5013 	.db #0x08	; 8
      0003B7 10                    5014 	.db #0x10	; 16
      0003B8 08                    5015 	.db #0x08	; 8
      0003B9 10                    5016 	.db #0x10	; 16
      0003BA 10                    5017 	.db #0x10	; 16
      0003BB 08                    5018 	.db #0x08	; 8
      0003BC E0                    5019 	.db #0xe0	; 224
      0003BD 07                    5020 	.db #0x07	; 7
      0003BE 00                    5021 	.db #0x00	; 0
      0003BF 00                    5022 	.db #0x00	; 0
      0003C0 00                    5023 	.db #0x00	; 0
      0003C1 00                    5024 	.db #0x00	; 0
      0003C2 F8                    5025 	.db #0xf8	; 248
      0003C3 1F                    5026 	.db #0x1f	; 31
      0003C4 80                    5027 	.db #0x80	; 128
      0003C5 10                    5028 	.db #0x10	; 16
      0003C6 80                    5029 	.db #0x80	; 128
      0003C7 10                    5030 	.db #0x10	; 16
      0003C8 80                    5031 	.db #0x80	; 128
      0003C9 10                    5032 	.db #0x10	; 16
      0003CA 80                    5033 	.db #0x80	; 128
      0003CB 10                    5034 	.db #0x10	; 16
      0003CC 00                    5035 	.db #0x00	; 0
      0003CD 11                    5036 	.db #0x11	; 17
      0003CE 00                    5037 	.db #0x00	; 0
      0003CF 0E                    5038 	.db #0x0e	; 14
      0003D0 00                    5039 	.db #0x00	; 0
      0003D1 00                    5040 	.db #0x00	; 0
      0003D2 00                    5041 	.db #0x00	; 0
      0003D3 00                    5042 	.db #0x00	; 0
      0003D4 00                    5043 	.db #0x00	; 0
      0003D5 00                    5044 	.db #0x00	; 0
      0003D6 E0                    5045 	.db #0xe0	; 224
      0003D7 07                    5046 	.db #0x07	; 7
      0003D8 10                    5047 	.db #0x10	; 16
      0003D9 08                    5048 	.db #0x08	; 8
      0003DA 08                    5049 	.db #0x08	; 8
      0003DB 10                    5050 	.db #0x10	; 16
      0003DC 08                    5051 	.db #0x08	; 8
      0003DD 10                    5052 	.db #0x10	; 16
      0003DE 08                    5053 	.db #0x08	; 8
      0003DF 10                    5054 	.db #0x10	; 16
      0003E0 0C                    5055 	.db #0x0c	; 12
      0003E1 10                    5056 	.db #0x10	; 16
      0003E2 12                    5057 	.db #0x12	; 18
      0003E3 08                    5058 	.db #0x08	; 8
      0003E4 E2                    5059 	.db #0xe2	; 226
      0003E5 07                    5060 	.db #0x07	; 7
      0003E6 00                    5061 	.db #0x00	; 0
      0003E7 00                    5062 	.db #0x00	; 0
      0003E8 00                    5063 	.db #0x00	; 0
      0003E9 00                    5064 	.db #0x00	; 0
      0003EA F8                    5065 	.db #0xf8	; 248
      0003EB 1F                    5066 	.db #0x1f	; 31
      0003EC 80                    5067 	.db #0x80	; 128
      0003ED 10                    5068 	.db #0x10	; 16
      0003EE 80                    5069 	.db #0x80	; 128
      0003EF 10                    5070 	.db #0x10	; 16
      0003F0 C0                    5071 	.db #0xc0	; 192
      0003F1 10                    5072 	.db #0x10	; 16
      0003F2 20                    5073 	.db #0x20	; 32
      0003F3 11                    5074 	.db #0x11	; 17
      0003F4 10                    5075 	.db #0x10	; 16
      0003F5 0E                    5076 	.db #0x0e	; 14
      0003F6 08                    5077 	.db #0x08	; 8
      0003F7 00                    5078 	.db #0x00	; 0
      0003F8 00                    5079 	.db #0x00	; 0
      0003F9 00                    5080 	.db #0x00	; 0
      0003FA 00                    5081 	.db #0x00	; 0
      0003FB 00                    5082 	.db #0x00	; 0
      0003FC 00                    5083 	.db #0x00	; 0
      0003FD 00                    5084 	.db #0x00	; 0
      0003FE 18                    5085 	.db #0x18	; 24
      0003FF 0E                    5086 	.db #0x0e	; 14
      000400 08                    5087 	.db #0x08	; 8
      000401 12                    5088 	.db #0x12	; 18
      000402 08                    5089 	.db #0x08	; 8
      000403 11                    5090 	.db #0x11	; 17
      000404 08                    5091 	.db #0x08	; 8
      000405 11                    5092 	.db #0x11	; 17
      000406 88                    5093 	.db #0x88	; 136
      000407 10                    5094 	.db #0x10	; 16
      000408 90                    5095 	.db #0x90	; 144
      000409 10                    5096 	.db #0x10	; 16
      00040A 70                    5097 	.db #0x70	; 112	'p'
      00040B 18                    5098 	.db #0x18	; 24
      00040C 00                    5099 	.db #0x00	; 0
      00040D 00                    5100 	.db #0x00	; 0
      00040E 00                    5101 	.db #0x00	; 0
      00040F 00                    5102 	.db #0x00	; 0
      000410 00                    5103 	.db #0x00	; 0
      000411 10                    5104 	.db #0x10	; 16
      000412 00                    5105 	.db #0x00	; 0
      000413 10                    5106 	.db #0x10	; 16
      000414 00                    5107 	.db #0x00	; 0
      000415 10                    5108 	.db #0x10	; 16
      000416 00                    5109 	.db #0x00	; 0
      000417 10                    5110 	.db #0x10	; 16
      000418 F8                    5111 	.db #0xf8	; 248
      000419 1F                    5112 	.db #0x1f	; 31
      00041A 00                    5113 	.db #0x00	; 0
      00041B 10                    5114 	.db #0x10	; 16
      00041C 00                    5115 	.db #0x00	; 0
      00041D 10                    5116 	.db #0x10	; 16
      00041E 00                    5117 	.db #0x00	; 0
      00041F 10                    5118 	.db #0x10	; 16
      000420 00                    5119 	.db #0x00	; 0
      000421 10                    5120 	.db #0x10	; 16
      000422 00                    5121 	.db #0x00	; 0
      000423 00                    5122 	.db #0x00	; 0
      000424 00                    5123 	.db #0x00	; 0
      000425 00                    5124 	.db #0x00	; 0
      000426 E0                    5125 	.db #0xe0	; 224
      000427 1F                    5126 	.db #0x1f	; 31
      000428 18                    5127 	.db #0x18	; 24
      000429 00                    5128 	.db #0x00	; 0
      00042A 08                    5129 	.db #0x08	; 8
      00042B 00                    5130 	.db #0x00	; 0
      00042C 08                    5131 	.db #0x08	; 8
      00042D 00                    5132 	.db #0x00	; 0
      00042E 08                    5133 	.db #0x08	; 8
      00042F 00                    5134 	.db #0x00	; 0
      000430 10                    5135 	.db #0x10	; 16
      000431 00                    5136 	.db #0x00	; 0
      000432 E0                    5137 	.db #0xe0	; 224
      000433 1F                    5138 	.db #0x1f	; 31
      000434 00                    5139 	.db #0x00	; 0
      000435 00                    5140 	.db #0x00	; 0
      000436 00                    5141 	.db #0x00	; 0
      000437 00                    5142 	.db #0x00	; 0
      000438 00                    5143 	.db #0x00	; 0
      000439 10                    5144 	.db #0x10	; 16
      00043A 00                    5145 	.db #0x00	; 0
      00043B 0C                    5146 	.db #0x0c	; 12
      00043C 80                    5147 	.db #0x80	; 128
      00043D 03                    5148 	.db #0x03	; 3
      00043E 60                    5149 	.db #0x60	; 96
      00043F 00                    5150 	.db #0x00	; 0
      000440 18                    5151 	.db #0x18	; 24
      000441 00                    5152 	.db #0x00	; 0
      000442 18                    5153 	.db #0x18	; 24
      000443 00                    5154 	.db #0x00	; 0
      000444 E0                    5155 	.db #0xe0	; 224
      000445 00                    5156 	.db #0x00	; 0
      000446 00                    5157 	.db #0x00	; 0
      000447 03                    5158 	.db #0x03	; 3
      000448 00                    5159 	.db #0x00	; 0
      000449 0C                    5160 	.db #0x0c	; 12
      00044A 00                    5161 	.db #0x00	; 0
      00044B 10                    5162 	.db #0x10	; 16
      00044C 00                    5163 	.db #0x00	; 0
      00044D 18                    5164 	.db #0x18	; 24
      00044E C0                    5165 	.db #0xc0	; 192
      00044F 07                    5166 	.db #0x07	; 7
      000450 38                    5167 	.db #0x38	; 56	'8'
      000451 00                    5168 	.db #0x00	; 0
      000452 F0                    5169 	.db #0xf0	; 240
      000453 00                    5170 	.db #0x00	; 0
      000454 00                    5171 	.db #0x00	; 0
      000455 07                    5172 	.db #0x07	; 7
      000456 80                    5173 	.db #0x80	; 128
      000457 03                    5174 	.db #0x03	; 3
      000458 70                    5175 	.db #0x70	; 112	'p'
      000459 00                    5176 	.db #0x00	; 0
      00045A 38                    5177 	.db #0x38	; 56	'8'
      00045B 00                    5178 	.db #0x00	; 0
      00045C C0                    5179 	.db #0xc0	; 192
      00045D 07                    5180 	.db #0x07	; 7
      00045E 00                    5181 	.db #0x00	; 0
      00045F 18                    5182 	.db #0x18	; 24
      000460 08                    5183 	.db #0x08	; 8
      000461 10                    5184 	.db #0x10	; 16
      000462 10                    5185 	.db #0x10	; 16
      000463 08                    5186 	.db #0x08	; 8
      000464 20                    5187 	.db #0x20	; 32
      000465 04                    5188 	.db #0x04	; 4
      000466 40                    5189 	.db #0x40	; 64
      000467 02                    5190 	.db #0x02	; 2
      000468 80                    5191 	.db #0x80	; 128
      000469 01                    5192 	.db #0x01	; 1
      00046A 80                    5193 	.db #0x80	; 128
      00046B 01                    5194 	.db #0x01	; 1
      00046C 40                    5195 	.db #0x40	; 64
      00046D 02                    5196 	.db #0x02	; 2
      00046E 20                    5197 	.db #0x20	; 32
      00046F 04                    5198 	.db #0x04	; 4
      000470 10                    5199 	.db #0x10	; 16
      000471 08                    5200 	.db #0x08	; 8
      000472 08                    5201 	.db #0x08	; 8
      000473 10                    5202 	.db #0x10	; 16
      000474 00                    5203 	.db #0x00	; 0
      000475 10                    5204 	.db #0x10	; 16
      000476 00                    5205 	.db #0x00	; 0
      000477 08                    5206 	.db #0x08	; 8
      000478 00                    5207 	.db #0x00	; 0
      000479 06                    5208 	.db #0x06	; 6
      00047A 00                    5209 	.db #0x00	; 0
      00047B 01                    5210 	.db #0x01	; 1
      00047C F8                    5211 	.db #0xf8	; 248
      00047D 00                    5212 	.db #0x00	; 0
      00047E 00                    5213 	.db #0x00	; 0
      00047F 01                    5214 	.db #0x01	; 1
      000480 00                    5215 	.db #0x00	; 0
      000481 02                    5216 	.db #0x02	; 2
      000482 00                    5217 	.db #0x00	; 0
      000483 04                    5218 	.db #0x04	; 4
      000484 00                    5219 	.db #0x00	; 0
      000485 08                    5220 	.db #0x08	; 8
      000486 00                    5221 	.db #0x00	; 0
      000487 10                    5222 	.db #0x10	; 16
      000488 00                    5223 	.db #0x00	; 0
      000489 00                    5224 	.db #0x00	; 0
      00048A 18                    5225 	.db #0x18	; 24
      00048B 10                    5226 	.db #0x10	; 16
      00048C 28                    5227 	.db #0x28	; 40
      00048D 10                    5228 	.db #0x10	; 16
      00048E 48                    5229 	.db #0x48	; 72	'H'
      00048F 10                    5230 	.db #0x10	; 16
      000490 88                    5231 	.db #0x88	; 136
      000491 10                    5232 	.db #0x10	; 16
      000492 08                    5233 	.db #0x08	; 8
      000493 11                    5234 	.db #0x11	; 17
      000494 08                    5235 	.db #0x08	; 8
      000495 12                    5236 	.db #0x12	; 18
      000496 08                    5237 	.db #0x08	; 8
      000497 14                    5238 	.db #0x14	; 20
      000498 08                    5239 	.db #0x08	; 8
      000499 18                    5240 	.db #0x18	; 24
      00049A 00                    5241 	.db #0x00	; 0
      00049B 00                    5242 	.db #0x00	; 0
      00049C 00                    5243 	.db #0x00	; 0
      00049D 00                    5244 	.db #0x00	; 0
      00049E 00                    5245 	.db #0x00	; 0
      00049F 00                    5246 	.db #0x00	; 0
      0004A0 00                    5247 	.db #0x00	; 0
      0004A1 00                    5248 	.db #0x00	; 0
      0004A2 FE                    5249 	.db #0xfe	; 254
      0004A3 7F                    5250 	.db #0x7f	; 127
      0004A4 02                    5251 	.db #0x02	; 2
      0004A5 40                    5252 	.db #0x40	; 64
      0004A6 02                    5253 	.db #0x02	; 2
      0004A7 40                    5254 	.db #0x40	; 64
      0004A8 02                    5255 	.db #0x02	; 2
      0004A9 40                    5256 	.db #0x40	; 64
      0004AA 02                    5257 	.db #0x02	; 2
      0004AB 40                    5258 	.db #0x40	; 64
      0004AC 00                    5259 	.db #0x00	; 0
      0004AD 00                    5260 	.db #0x00	; 0
      0004AE 00                    5261 	.db #0x00	; 0
      0004AF 00                    5262 	.db #0x00	; 0
      0004B0 00                    5263 	.db #0x00	; 0
      0004B1 00                    5264 	.db #0x00	; 0
      0004B2 00                    5265 	.db #0x00	; 0
      0004B3 40                    5266 	.db #0x40	; 64
      0004B4 00                    5267 	.db #0x00	; 0
      0004B5 30                    5268 	.db #0x30	; 48	'0'
      0004B6 00                    5269 	.db #0x00	; 0
      0004B7 0C                    5270 	.db #0x0c	; 12
      0004B8 00                    5271 	.db #0x00	; 0
      0004B9 03                    5272 	.db #0x03	; 3
      0004BA C0                    5273 	.db #0xc0	; 192
      0004BB 00                    5274 	.db #0x00	; 0
      0004BC 30                    5275 	.db #0x30	; 48	'0'
      0004BD 00                    5276 	.db #0x00	; 0
      0004BE 0C                    5277 	.db #0x0c	; 12
      0004BF 00                    5278 	.db #0x00	; 0
      0004C0 02                    5279 	.db #0x02	; 2
      0004C1 00                    5280 	.db #0x00	; 0
      0004C2 00                    5281 	.db #0x00	; 0
      0004C3 00                    5282 	.db #0x00	; 0
      0004C4 00                    5283 	.db #0x00	; 0
      0004C5 00                    5284 	.db #0x00	; 0
      0004C6 02                    5285 	.db #0x02	; 2
      0004C7 40                    5286 	.db #0x40	; 64
      0004C8 02                    5287 	.db #0x02	; 2
      0004C9 40                    5288 	.db #0x40	; 64
      0004CA 02                    5289 	.db #0x02	; 2
      0004CB 40                    5290 	.db #0x40	; 64
      0004CC 02                    5291 	.db #0x02	; 2
      0004CD 40                    5292 	.db #0x40	; 64
      0004CE FE                    5293 	.db #0xfe	; 254
      0004CF 7F                    5294 	.db #0x7f	; 127
      0004D0 00                    5295 	.db #0x00	; 0
      0004D1 00                    5296 	.db #0x00	; 0
      0004D2 00                    5297 	.db #0x00	; 0
      0004D3 00                    5298 	.db #0x00	; 0
      0004D4 00                    5299 	.db #0x00	; 0
      0004D5 00                    5300 	.db #0x00	; 0
      0004D6 00                    5301 	.db #0x00	; 0
      0004D7 00                    5302 	.db #0x00	; 0
      0004D8 00                    5303 	.db #0x00	; 0
      0004D9 00                    5304 	.db #0x00	; 0
      0004DA 20                    5305 	.db #0x20	; 32
      0004DB 00                    5306 	.db #0x00	; 0
      0004DC C0                    5307 	.db #0xc0	; 192
      0004DD 00                    5308 	.db #0x00	; 0
      0004DE 00                    5309 	.db #0x00	; 0
      0004DF 07                    5310 	.db #0x07	; 7
      0004E0 00                    5311 	.db #0x00	; 0
      0004E1 1C                    5312 	.db #0x1c	; 28
      0004E2 00                    5313 	.db #0x00	; 0
      0004E3 70                    5314 	.db #0x70	; 112	'p'
      0004E4 00                    5315 	.db #0x00	; 0
      0004E5 0E                    5316 	.db #0x0e	; 14
      0004E6 C0                    5317 	.db #0xc0	; 192
      0004E7 01                    5318 	.db #0x01	; 1
      0004E8 20                    5319 	.db #0x20	; 32
      0004E9 00                    5320 	.db #0x00	; 0
      0004EA 00                    5321 	.db #0x00	; 0
      0004EB 00                    5322 	.db #0x00	; 0
      0004EC 04                    5323 	.db #0x04	; 4
      0004ED 00                    5324 	.db #0x00	; 0
      0004EE 04                    5325 	.db #0x04	; 4
      0004EF 00                    5326 	.db #0x00	; 0
      0004F0 04                    5327 	.db #0x04	; 4
      0004F1 00                    5328 	.db #0x00	; 0
      0004F2 04                    5329 	.db #0x04	; 4
      0004F3 00                    5330 	.db #0x00	; 0
      0004F4 04                    5331 	.db #0x04	; 4
      0004F5 00                    5332 	.db #0x00	; 0
      0004F6 04                    5333 	.db #0x04	; 4
      0004F7 00                    5334 	.db #0x00	; 0
      0004F8 04                    5335 	.db #0x04	; 4
      0004F9 00                    5336 	.db #0x00	; 0
      0004FA 04                    5337 	.db #0x04	; 4
      0004FB 00                    5338 	.db #0x00	; 0
      0004FC 04                    5339 	.db #0x04	; 4
      0004FD 00                    5340 	.db #0x00	; 0
      0004FE 04                    5341 	.db #0x04	; 4
      0004FF 00                    5342 	.db #0x00	; 0
      000500 00                    5343 	.db #0x00	; 0
      000501 00                    5344 	.db #0x00	; 0
      000502 00                    5345 	.db #0x00	; 0
      000503 00                    5346 	.db #0x00	; 0
      000504 00                    5347 	.db #0x00	; 0
      000505 00                    5348 	.db #0x00	; 0
      000506 00                    5349 	.db #0x00	; 0
      000507 00                    5350 	.db #0x00	; 0
      000508 00                    5351 	.db #0x00	; 0
      000509 80                    5352 	.db #0x80	; 128
      00050A 00                    5353 	.db #0x00	; 0
      00050B 40                    5354 	.db #0x40	; 64
      00050C 00                    5355 	.db #0x00	; 0
      00050D 00                    5356 	.db #0x00	; 0
      00050E 00                    5357 	.db #0x00	; 0
      00050F 00                    5358 	.db #0x00	; 0
      000510 00                    5359 	.db #0x00	; 0
      000511 00                    5360 	.db #0x00	; 0
      000512 00                    5361 	.db #0x00	; 0
      000513 00                    5362 	.db #0x00	; 0
      000514 00                    5363 	.db #0x00	; 0
      000515 00                    5364 	.db #0x00	; 0
      000516 30                    5365 	.db #0x30	; 48	'0'
      000517 00                    5366 	.db #0x00	; 0
      000518 48                    5367 	.db #0x48	; 72	'H'
      000519 04                    5368 	.db #0x04	; 4
      00051A 88                    5369 	.db #0x88	; 136
      00051B 04                    5370 	.db #0x04	; 4
      00051C 88                    5371 	.db #0x88	; 136
      00051D 04                    5372 	.db #0x04	; 4
      00051E 90                    5373 	.db #0x90	; 144
      00051F 04                    5374 	.db #0x04	; 4
      000520 F8                    5375 	.db #0xf8	; 248
      000521 03                    5376 	.db #0x03	; 3
      000522 08                    5377 	.db #0x08	; 8
      000523 00                    5378 	.db #0x00	; 0
      000524 00                    5379 	.db #0x00	; 0
      000525 00                    5380 	.db #0x00	; 0
      000526 00                    5381 	.db #0x00	; 0
      000527 00                    5382 	.db #0x00	; 0
      000528 00                    5383 	.db #0x00	; 0
      000529 00                    5384 	.db #0x00	; 0
      00052A F8                    5385 	.db #0xf8	; 248
      00052B 7F                    5386 	.db #0x7f	; 127
      00052C 10                    5387 	.db #0x10	; 16
      00052D 02                    5388 	.db #0x02	; 2
      00052E 08                    5389 	.db #0x08	; 8
      00052F 04                    5390 	.db #0x04	; 4
      000530 08                    5391 	.db #0x08	; 8
      000531 04                    5392 	.db #0x04	; 4
      000532 08                    5393 	.db #0x08	; 8
      000533 04                    5394 	.db #0x04	; 4
      000534 10                    5395 	.db #0x10	; 16
      000535 06                    5396 	.db #0x06	; 6
      000536 E0                    5397 	.db #0xe0	; 224
      000537 01                    5398 	.db #0x01	; 1
      000538 00                    5399 	.db #0x00	; 0
      000539 00                    5400 	.db #0x00	; 0
      00053A 00                    5401 	.db #0x00	; 0
      00053B 00                    5402 	.db #0x00	; 0
      00053C 00                    5403 	.db #0x00	; 0
      00053D 00                    5404 	.db #0x00	; 0
      00053E E0                    5405 	.db #0xe0	; 224
      00053F 01                    5406 	.db #0x01	; 1
      000540 10                    5407 	.db #0x10	; 16
      000541 02                    5408 	.db #0x02	; 2
      000542 08                    5409 	.db #0x08	; 8
      000543 04                    5410 	.db #0x04	; 4
      000544 08                    5411 	.db #0x08	; 8
      000545 04                    5412 	.db #0x04	; 4
      000546 08                    5413 	.db #0x08	; 8
      000547 04                    5414 	.db #0x04	; 4
      000548 08                    5415 	.db #0x08	; 8
      000549 04                    5416 	.db #0x04	; 4
      00054A 08                    5417 	.db #0x08	; 8
      00054B 04                    5418 	.db #0x04	; 4
      00054C 00                    5419 	.db #0x00	; 0
      00054D 00                    5420 	.db #0x00	; 0
      00054E 00                    5421 	.db #0x00	; 0
      00054F 00                    5422 	.db #0x00	; 0
      000550 00                    5423 	.db #0x00	; 0
      000551 00                    5424 	.db #0x00	; 0
      000552 E0                    5425 	.db #0xe0	; 224
      000553 01                    5426 	.db #0x01	; 1
      000554 18                    5427 	.db #0x18	; 24
      000555 02                    5428 	.db #0x02	; 2
      000556 08                    5429 	.db #0x08	; 8
      000557 04                    5430 	.db #0x04	; 4
      000558 08                    5431 	.db #0x08	; 8
      000559 04                    5432 	.db #0x04	; 4
      00055A 08                    5433 	.db #0x08	; 8
      00055B 04                    5434 	.db #0x04	; 4
      00055C 10                    5435 	.db #0x10	; 16
      00055D 02                    5436 	.db #0x02	; 2
      00055E F8                    5437 	.db #0xf8	; 248
      00055F 7F                    5438 	.db #0x7f	; 127
      000560 00                    5439 	.db #0x00	; 0
      000561 00                    5440 	.db #0x00	; 0
      000562 00                    5441 	.db #0x00	; 0
      000563 00                    5442 	.db #0x00	; 0
      000564 00                    5443 	.db #0x00	; 0
      000565 00                    5444 	.db #0x00	; 0
      000566 E0                    5445 	.db #0xe0	; 224
      000567 01                    5446 	.db #0x01	; 1
      000568 90                    5447 	.db #0x90	; 144
      000569 02                    5448 	.db #0x02	; 2
      00056A 88                    5449 	.db #0x88	; 136
      00056B 04                    5450 	.db #0x04	; 4
      00056C 88                    5451 	.db #0x88	; 136
      00056D 04                    5452 	.db #0x04	; 4
      00056E 88                    5453 	.db #0x88	; 136
      00056F 04                    5454 	.db #0x04	; 4
      000570 88                    5455 	.db #0x88	; 136
      000571 04                    5456 	.db #0x04	; 4
      000572 88                    5457 	.db #0x88	; 136
      000573 03                    5458 	.db #0x03	; 3
      000574 00                    5459 	.db #0x00	; 0
      000575 00                    5460 	.db #0x00	; 0
      000576 00                    5461 	.db #0x00	; 0
      000577 00                    5462 	.db #0x00	; 0
      000578 00                    5463 	.db #0x00	; 0
      000579 00                    5464 	.db #0x00	; 0
      00057A 00                    5465 	.db #0x00	; 0
      00057B 04                    5466 	.db #0x04	; 4
      00057C 00                    5467 	.db #0x00	; 0
      00057D 04                    5468 	.db #0x04	; 4
      00057E F8                    5469 	.db #0xf8	; 248
      00057F 3F                    5470 	.db #0x3f	; 63
      000580 00                    5471 	.db #0x00	; 0
      000581 24                    5472 	.db #0x24	; 36
      000582 00                    5473 	.db #0x00	; 0
      000583 44                    5474 	.db #0x44	; 68	'D'
      000584 00                    5475 	.db #0x00	; 0
      000585 44                    5476 	.db #0x44	; 68	'D'
      000586 00                    5477 	.db #0x00	; 0
      000587 44                    5478 	.db #0x44	; 68	'D'
      000588 00                    5479 	.db #0x00	; 0
      000589 44                    5480 	.db #0x44	; 68	'D'
      00058A 00                    5481 	.db #0x00	; 0
      00058B 00                    5482 	.db #0x00	; 0
      00058C 00                    5483 	.db #0x00	; 0
      00058D 00                    5484 	.db #0x00	; 0
      00058E E0                    5485 	.db #0xe0	; 224
      00058F 01                    5486 	.db #0x01	; 1
      000590 19                    5487 	.db #0x19	; 25
      000591 02                    5488 	.db #0x02	; 2
      000592 09                    5489 	.db #0x09	; 9
      000593 04                    5490 	.db #0x04	; 4
      000594 09                    5491 	.db #0x09	; 9
      000595 04                    5492 	.db #0x04	; 4
      000596 09                    5493 	.db #0x09	; 9
      000597 04                    5494 	.db #0x04	; 4
      000598 12                    5495 	.db #0x12	; 18
      000599 02                    5496 	.db #0x02	; 2
      00059A FC                    5497 	.db #0xfc	; 252
      00059B 07                    5498 	.db #0x07	; 7
      00059C 00                    5499 	.db #0x00	; 0
      00059D 00                    5500 	.db #0x00	; 0
      00059E 00                    5501 	.db #0x00	; 0
      00059F 00                    5502 	.db #0x00	; 0
      0005A0 00                    5503 	.db #0x00	; 0
      0005A1 00                    5504 	.db #0x00	; 0
      0005A2 F8                    5505 	.db #0xf8	; 248
      0005A3 7F                    5506 	.db #0x7f	; 127
      0005A4 00                    5507 	.db #0x00	; 0
      0005A5 01                    5508 	.db #0x01	; 1
      0005A6 00                    5509 	.db #0x00	; 0
      0005A7 02                    5510 	.db #0x02	; 2
      0005A8 00                    5511 	.db #0x00	; 0
      0005A9 04                    5512 	.db #0x04	; 4
      0005AA 00                    5513 	.db #0x00	; 0
      0005AB 04                    5514 	.db #0x04	; 4
      0005AC 00                    5515 	.db #0x00	; 0
      0005AD 04                    5516 	.db #0x04	; 4
      0005AE F8                    5517 	.db #0xf8	; 248
      0005AF 03                    5518 	.db #0x03	; 3
      0005B0 00                    5519 	.db #0x00	; 0
      0005B1 00                    5520 	.db #0x00	; 0
      0005B2 00                    5521 	.db #0x00	; 0
      0005B3 00                    5522 	.db #0x00	; 0
      0005B4 00                    5523 	.db #0x00	; 0
      0005B5 00                    5524 	.db #0x00	; 0
      0005B6 00                    5525 	.db #0x00	; 0
      0005B7 04                    5526 	.db #0x04	; 4
      0005B8 00                    5527 	.db #0x00	; 0
      0005B9 04                    5528 	.db #0x04	; 4
      0005BA 00                    5529 	.db #0x00	; 0
      0005BB 64                    5530 	.db #0x64	; 100	'd'
      0005BC F8                    5531 	.db #0xf8	; 248
      0005BD 67                    5532 	.db #0x67	; 103	'g'
      0005BE 00                    5533 	.db #0x00	; 0
      0005BF 00                    5534 	.db #0x00	; 0
      0005C0 00                    5535 	.db #0x00	; 0
      0005C1 00                    5536 	.db #0x00	; 0
      0005C2 00                    5537 	.db #0x00	; 0
      0005C3 00                    5538 	.db #0x00	; 0
      0005C4 00                    5539 	.db #0x00	; 0
      0005C5 00                    5540 	.db #0x00	; 0
      0005C6 00                    5541 	.db #0x00	; 0
      0005C7 00                    5542 	.db #0x00	; 0
      0005C8 00                    5543 	.db #0x00	; 0
      0005C9 00                    5544 	.db #0x00	; 0
      0005CA 01                    5545 	.db #0x01	; 1
      0005CB 00                    5546 	.db #0x00	; 0
      0005CC 01                    5547 	.db #0x01	; 1
      0005CD 04                    5548 	.db #0x04	; 4
      0005CE 01                    5549 	.db #0x01	; 1
      0005CF 04                    5550 	.db #0x04	; 4
      0005D0 01                    5551 	.db #0x01	; 1
      0005D1 64                    5552 	.db #0x64	; 100	'd'
      0005D2 FE                    5553 	.db #0xfe	; 254
      0005D3 67                    5554 	.db #0x67	; 103	'g'
      0005D4 00                    5555 	.db #0x00	; 0
      0005D5 00                    5556 	.db #0x00	; 0
      0005D6 00                    5557 	.db #0x00	; 0
      0005D7 00                    5558 	.db #0x00	; 0
      0005D8 00                    5559 	.db #0x00	; 0
      0005D9 00                    5560 	.db #0x00	; 0
      0005DA 00                    5561 	.db #0x00	; 0
      0005DB 00                    5562 	.db #0x00	; 0
      0005DC 00                    5563 	.db #0x00	; 0
      0005DD 00                    5564 	.db #0x00	; 0
      0005DE F8                    5565 	.db #0xf8	; 248
      0005DF 7F                    5566 	.db #0x7f	; 127
      0005E0 80                    5567 	.db #0x80	; 128
      0005E1 00                    5568 	.db #0x00	; 0
      0005E2 C0                    5569 	.db #0xc0	; 192
      0005E3 00                    5570 	.db #0x00	; 0
      0005E4 20                    5571 	.db #0x20	; 32
      0005E5 01                    5572 	.db #0x01	; 1
      0005E6 20                    5573 	.db #0x20	; 32
      0005E7 02                    5574 	.db #0x02	; 2
      0005E8 10                    5575 	.db #0x10	; 16
      0005E9 02                    5576 	.db #0x02	; 2
      0005EA 08                    5577 	.db #0x08	; 8
      0005EB 04                    5578 	.db #0x04	; 4
      0005EC 00                    5579 	.db #0x00	; 0
      0005ED 00                    5580 	.db #0x00	; 0
      0005EE 00                    5581 	.db #0x00	; 0
      0005EF 00                    5582 	.db #0x00	; 0
      0005F0 00                    5583 	.db #0x00	; 0
      0005F1 00                    5584 	.db #0x00	; 0
      0005F2 00                    5585 	.db #0x00	; 0
      0005F3 00                    5586 	.db #0x00	; 0
      0005F4 00                    5587 	.db #0x00	; 0
      0005F5 40                    5588 	.db #0x40	; 64
      0005F6 00                    5589 	.db #0x00	; 0
      0005F7 40                    5590 	.db #0x40	; 64
      0005F8 00                    5591 	.db #0x00	; 0
      0005F9 40                    5592 	.db #0x40	; 64
      0005FA F8                    5593 	.db #0xf8	; 248
      0005FB 7F                    5594 	.db #0x7f	; 127
      0005FC 00                    5595 	.db #0x00	; 0
      0005FD 00                    5596 	.db #0x00	; 0
      0005FE 00                    5597 	.db #0x00	; 0
      0005FF 00                    5598 	.db #0x00	; 0
      000600 00                    5599 	.db #0x00	; 0
      000601 00                    5600 	.db #0x00	; 0
      000602 00                    5601 	.db #0x00	; 0
      000603 00                    5602 	.db #0x00	; 0
      000604 F8                    5603 	.db #0xf8	; 248
      000605 07                    5604 	.db #0x07	; 7
      000606 00                    5605 	.db #0x00	; 0
      000607 02                    5606 	.db #0x02	; 2
      000608 00                    5607 	.db #0x00	; 0
      000609 04                    5608 	.db #0x04	; 4
      00060A 00                    5609 	.db #0x00	; 0
      00060B 04                    5610 	.db #0x04	; 4
      00060C F8                    5611 	.db #0xf8	; 248
      00060D 03                    5612 	.db #0x03	; 3
      00060E 00                    5613 	.db #0x00	; 0
      00060F 02                    5614 	.db #0x02	; 2
      000610 00                    5615 	.db #0x00	; 0
      000611 04                    5616 	.db #0x04	; 4
      000612 00                    5617 	.db #0x00	; 0
      000613 04                    5618 	.db #0x04	; 4
      000614 F8                    5619 	.db #0xf8	; 248
      000615 03                    5620 	.db #0x03	; 3
      000616 00                    5621 	.db #0x00	; 0
      000617 00                    5622 	.db #0x00	; 0
      000618 00                    5623 	.db #0x00	; 0
      000619 00                    5624 	.db #0x00	; 0
      00061A F8                    5625 	.db #0xf8	; 248
      00061B 07                    5626 	.db #0x07	; 7
      00061C 00                    5627 	.db #0x00	; 0
      00061D 03                    5628 	.db #0x03	; 3
      00061E 00                    5629 	.db #0x00	; 0
      00061F 02                    5630 	.db #0x02	; 2
      000620 00                    5631 	.db #0x00	; 0
      000621 04                    5632 	.db #0x04	; 4
      000622 00                    5633 	.db #0x00	; 0
      000623 04                    5634 	.db #0x04	; 4
      000624 00                    5635 	.db #0x00	; 0
      000625 04                    5636 	.db #0x04	; 4
      000626 F8                    5637 	.db #0xf8	; 248
      000627 03                    5638 	.db #0x03	; 3
      000628 00                    5639 	.db #0x00	; 0
      000629 00                    5640 	.db #0x00	; 0
      00062A 00                    5641 	.db #0x00	; 0
      00062B 00                    5642 	.db #0x00	; 0
      00062C 00                    5643 	.db #0x00	; 0
      00062D 00                    5644 	.db #0x00	; 0
      00062E E0                    5645 	.db #0xe0	; 224
      00062F 01                    5646 	.db #0x01	; 1
      000630 10                    5647 	.db #0x10	; 16
      000631 02                    5648 	.db #0x02	; 2
      000632 08                    5649 	.db #0x08	; 8
      000633 04                    5650 	.db #0x04	; 4
      000634 08                    5651 	.db #0x08	; 8
      000635 04                    5652 	.db #0x04	; 4
      000636 08                    5653 	.db #0x08	; 8
      000637 04                    5654 	.db #0x04	; 4
      000638 10                    5655 	.db #0x10	; 16
      000639 02                    5656 	.db #0x02	; 2
      00063A E0                    5657 	.db #0xe0	; 224
      00063B 01                    5658 	.db #0x01	; 1
      00063C 00                    5659 	.db #0x00	; 0
      00063D 00                    5660 	.db #0x00	; 0
      00063E 00                    5661 	.db #0x00	; 0
      00063F 00                    5662 	.db #0x00	; 0
      000640 00                    5663 	.db #0x00	; 0
      000641 00                    5664 	.db #0x00	; 0
      000642 FF                    5665 	.db #0xff	; 255
      000643 07                    5666 	.db #0x07	; 7
      000644 10                    5667 	.db #0x10	; 16
      000645 02                    5668 	.db #0x02	; 2
      000646 08                    5669 	.db #0x08	; 8
      000647 04                    5670 	.db #0x04	; 4
      000648 08                    5671 	.db #0x08	; 8
      000649 04                    5672 	.db #0x04	; 4
      00064A 08                    5673 	.db #0x08	; 8
      00064B 04                    5674 	.db #0x04	; 4
      00064C 10                    5675 	.db #0x10	; 16
      00064D 06                    5676 	.db #0x06	; 6
      00064E E0                    5677 	.db #0xe0	; 224
      00064F 01                    5678 	.db #0x01	; 1
      000650 00                    5679 	.db #0x00	; 0
      000651 00                    5680 	.db #0x00	; 0
      000652 00                    5681 	.db #0x00	; 0
      000653 00                    5682 	.db #0x00	; 0
      000654 00                    5683 	.db #0x00	; 0
      000655 00                    5684 	.db #0x00	; 0
      000656 E0                    5685 	.db #0xe0	; 224
      000657 01                    5686 	.db #0x01	; 1
      000658 18                    5687 	.db #0x18	; 24
      000659 02                    5688 	.db #0x02	; 2
      00065A 08                    5689 	.db #0x08	; 8
      00065B 04                    5690 	.db #0x04	; 4
      00065C 08                    5691 	.db #0x08	; 8
      00065D 04                    5692 	.db #0x04	; 4
      00065E 08                    5693 	.db #0x08	; 8
      00065F 04                    5694 	.db #0x04	; 4
      000660 10                    5695 	.db #0x10	; 16
      000661 02                    5696 	.db #0x02	; 2
      000662 FF                    5697 	.db #0xff	; 255
      000663 07                    5698 	.db #0x07	; 7
      000664 00                    5699 	.db #0x00	; 0
      000665 00                    5700 	.db #0x00	; 0
      000666 00                    5701 	.db #0x00	; 0
      000667 00                    5702 	.db #0x00	; 0
      000668 00                    5703 	.db #0x00	; 0
      000669 00                    5704 	.db #0x00	; 0
      00066A 00                    5705 	.db #0x00	; 0
      00066B 00                    5706 	.db #0x00	; 0
      00066C F8                    5707 	.db #0xf8	; 248
      00066D 07                    5708 	.db #0x07	; 7
      00066E 00                    5709 	.db #0x00	; 0
      00066F 01                    5710 	.db #0x01	; 1
      000670 00                    5711 	.db #0x00	; 0
      000671 02                    5712 	.db #0x02	; 2
      000672 00                    5713 	.db #0x00	; 0
      000673 04                    5714 	.db #0x04	; 4
      000674 00                    5715 	.db #0x00	; 0
      000675 04                    5716 	.db #0x04	; 4
      000676 00                    5717 	.db #0x00	; 0
      000677 07                    5718 	.db #0x07	; 7
      000678 00                    5719 	.db #0x00	; 0
      000679 00                    5720 	.db #0x00	; 0
      00067A 00                    5721 	.db #0x00	; 0
      00067B 00                    5722 	.db #0x00	; 0
      00067C 00                    5723 	.db #0x00	; 0
      00067D 00                    5724 	.db #0x00	; 0
      00067E 18                    5725 	.db #0x18	; 24
      00067F 03                    5726 	.db #0x03	; 3
      000680 88                    5727 	.db #0x88	; 136
      000681 04                    5728 	.db #0x04	; 4
      000682 88                    5729 	.db #0x88	; 136
      000683 04                    5730 	.db #0x04	; 4
      000684 48                    5731 	.db #0x48	; 72	'H'
      000685 04                    5732 	.db #0x04	; 4
      000686 48                    5733 	.db #0x48	; 72	'H'
      000687 04                    5734 	.db #0x04	; 4
      000688 30                    5735 	.db #0x30	; 48	'0'
      000689 04                    5736 	.db #0x04	; 4
      00068A 00                    5737 	.db #0x00	; 0
      00068B 00                    5738 	.db #0x00	; 0
      00068C 00                    5739 	.db #0x00	; 0
      00068D 00                    5740 	.db #0x00	; 0
      00068E 00                    5741 	.db #0x00	; 0
      00068F 00                    5742 	.db #0x00	; 0
      000690 00                    5743 	.db #0x00	; 0
      000691 00                    5744 	.db #0x00	; 0
      000692 00                    5745 	.db #0x00	; 0
      000693 04                    5746 	.db #0x04	; 4
      000694 00                    5747 	.db #0x00	; 0
      000695 04                    5748 	.db #0x04	; 4
      000696 F0                    5749 	.db #0xf0	; 240
      000697 1F                    5750 	.db #0x1f	; 31
      000698 08                    5751 	.db #0x08	; 8
      000699 04                    5752 	.db #0x04	; 4
      00069A 08                    5753 	.db #0x08	; 8
      00069B 04                    5754 	.db #0x04	; 4
      00069C 08                    5755 	.db #0x08	; 8
      00069D 04                    5756 	.db #0x04	; 4
      00069E 08                    5757 	.db #0x08	; 8
      00069F 04                    5758 	.db #0x04	; 4
      0006A0 00                    5759 	.db #0x00	; 0
      0006A1 00                    5760 	.db #0x00	; 0
      0006A2 00                    5761 	.db #0x00	; 0
      0006A3 00                    5762 	.db #0x00	; 0
      0006A4 00                    5763 	.db #0x00	; 0
      0006A5 00                    5764 	.db #0x00	; 0
      0006A6 F0                    5765 	.db #0xf0	; 240
      0006A7 07                    5766 	.db #0x07	; 7
      0006A8 08                    5767 	.db #0x08	; 8
      0006A9 00                    5768 	.db #0x00	; 0
      0006AA 08                    5769 	.db #0x08	; 8
      0006AB 00                    5770 	.db #0x00	; 0
      0006AC 08                    5771 	.db #0x08	; 8
      0006AD 00                    5772 	.db #0x00	; 0
      0006AE 10                    5773 	.db #0x10	; 16
      0006AF 00                    5774 	.db #0x00	; 0
      0006B0 F8                    5775 	.db #0xf8	; 248
      0006B1 07                    5776 	.db #0x07	; 7
      0006B2 00                    5777 	.db #0x00	; 0
      0006B3 00                    5778 	.db #0x00	; 0
      0006B4 00                    5779 	.db #0x00	; 0
      0006B5 00                    5780 	.db #0x00	; 0
      0006B6 00                    5781 	.db #0x00	; 0
      0006B7 00                    5782 	.db #0x00	; 0
      0006B8 00                    5783 	.db #0x00	; 0
      0006B9 04                    5784 	.db #0x04	; 4
      0006BA 80                    5785 	.db #0x80	; 128
      0006BB 03                    5786 	.db #0x03	; 3
      0006BC 60                    5787 	.db #0x60	; 96
      0006BD 00                    5788 	.db #0x00	; 0
      0006BE 18                    5789 	.db #0x18	; 24
      0006BF 00                    5790 	.db #0x00	; 0
      0006C0 08                    5791 	.db #0x08	; 8
      0006C1 00                    5792 	.db #0x00	; 0
      0006C2 30                    5793 	.db #0x30	; 48	'0'
      0006C3 00                    5794 	.db #0x00	; 0
      0006C4 C0                    5795 	.db #0xc0	; 192
      0006C5 00                    5796 	.db #0x00	; 0
      0006C6 00                    5797 	.db #0x00	; 0
      0006C7 03                    5798 	.db #0x03	; 3
      0006C8 00                    5799 	.db #0x00	; 0
      0006C9 04                    5800 	.db #0x04	; 4
      0006CA 00                    5801 	.db #0x00	; 0
      0006CB 00                    5802 	.db #0x00	; 0
      0006CC 00                    5803 	.db #0x00	; 0
      0006CD 06                    5804 	.db #0x06	; 6
      0006CE E0                    5805 	.db #0xe0	; 224
      0006CF 01                    5806 	.db #0x01	; 1
      0006D0 18                    5807 	.db #0x18	; 24
      0006D1 00                    5808 	.db #0x00	; 0
      0006D2 70                    5809 	.db #0x70	; 112	'p'
      0006D3 00                    5810 	.db #0x00	; 0
      0006D4 80                    5811 	.db #0x80	; 128
      0006D5 03                    5812 	.db #0x03	; 3
      0006D6 80                    5813 	.db #0x80	; 128
      0006D7 01                    5814 	.db #0x01	; 1
      0006D8 70                    5815 	.db #0x70	; 112	'p'
      0006D9 00                    5816 	.db #0x00	; 0
      0006DA 18                    5817 	.db #0x18	; 24
      0006DB 00                    5818 	.db #0x00	; 0
      0006DC E0                    5819 	.db #0xe0	; 224
      0006DD 01                    5820 	.db #0x01	; 1
      0006DE 00                    5821 	.db #0x00	; 0
      0006DF 06                    5822 	.db #0x06	; 6
      0006E0 00                    5823 	.db #0x00	; 0
      0006E1 00                    5824 	.db #0x00	; 0
      0006E2 08                    5825 	.db #0x08	; 8
      0006E3 04                    5826 	.db #0x04	; 4
      0006E4 10                    5827 	.db #0x10	; 16
      0006E5 02                    5828 	.db #0x02	; 2
      0006E6 20                    5829 	.db #0x20	; 32
      0006E7 01                    5830 	.db #0x01	; 1
      0006E8 C0                    5831 	.db #0xc0	; 192
      0006E9 00                    5832 	.db #0x00	; 0
      0006EA C0                    5833 	.db #0xc0	; 192
      0006EB 00                    5834 	.db #0x00	; 0
      0006EC 20                    5835 	.db #0x20	; 32
      0006ED 01                    5836 	.db #0x01	; 1
      0006EE 10                    5837 	.db #0x10	; 16
      0006EF 02                    5838 	.db #0x02	; 2
      0006F0 08                    5839 	.db #0x08	; 8
      0006F1 04                    5840 	.db #0x04	; 4
      0006F2 00                    5841 	.db #0x00	; 0
      0006F3 00                    5842 	.db #0x00	; 0
      0006F4 01                    5843 	.db #0x01	; 1
      0006F5 04                    5844 	.db #0x04	; 4
      0006F6 01                    5845 	.db #0x01	; 1
      0006F7 03                    5846 	.db #0x03	; 3
      0006F8 C1                    5847 	.db #0xc1	; 193
      0006F9 00                    5848 	.db #0x00	; 0
      0006FA 62                    5849 	.db #0x62	; 98	'b'
      0006FB 00                    5850 	.db #0x00	; 0
      0006FC 1C                    5851 	.db #0x1c	; 28
      0006FD 00                    5852 	.db #0x00	; 0
      0006FE 18                    5853 	.db #0x18	; 24
      0006FF 00                    5854 	.db #0x00	; 0
      000700 60                    5855 	.db #0x60	; 96
      000701 00                    5856 	.db #0x00	; 0
      000702 80                    5857 	.db #0x80	; 128
      000703 00                    5858 	.db #0x00	; 0
      000704 00                    5859 	.db #0x00	; 0
      000705 03                    5860 	.db #0x03	; 3
      000706 00                    5861 	.db #0x00	; 0
      000707 04                    5862 	.db #0x04	; 4
      000708 00                    5863 	.db #0x00	; 0
      000709 00                    5864 	.db #0x00	; 0
      00070A 08                    5865 	.db #0x08	; 8
      00070B 04                    5866 	.db #0x04	; 4
      00070C 18                    5867 	.db #0x18	; 24
      00070D 04                    5868 	.db #0x04	; 4
      00070E 28                    5869 	.db #0x28	; 40
      00070F 04                    5870 	.db #0x04	; 4
      000710 48                    5871 	.db #0x48	; 72	'H'
      000711 04                    5872 	.db #0x04	; 4
      000712 88                    5873 	.db #0x88	; 136
      000713 04                    5874 	.db #0x04	; 4
      000714 08                    5875 	.db #0x08	; 8
      000715 05                    5876 	.db #0x05	; 5
      000716 08                    5877 	.db #0x08	; 8
      000717 06                    5878 	.db #0x06	; 6
      000718 08                    5879 	.db #0x08	; 8
      000719 04                    5880 	.db #0x04	; 4
      00071A 00                    5881 	.db #0x00	; 0
      00071B 00                    5882 	.db #0x00	; 0
      00071C 00                    5883 	.db #0x00	; 0
      00071D 00                    5884 	.db #0x00	; 0
      00071E 00                    5885 	.db #0x00	; 0
      00071F 00                    5886 	.db #0x00	; 0
      000720 80                    5887 	.db #0x80	; 128
      000721 00                    5888 	.db #0x00	; 0
      000722 80                    5889 	.db #0x80	; 128
      000723 00                    5890 	.db #0x00	; 0
      000724 7C                    5891 	.db #0x7c	; 124
      000725 3F                    5892 	.db #0x3f	; 63
      000726 02                    5893 	.db #0x02	; 2
      000727 40                    5894 	.db #0x40	; 64
      000728 02                    5895 	.db #0x02	; 2
      000729 40                    5896 	.db #0x40	; 64
      00072A 02                    5897 	.db #0x02	; 2
      00072B 40                    5898 	.db #0x40	; 64
      00072C 00                    5899 	.db #0x00	; 0
      00072D 00                    5900 	.db #0x00	; 0
      00072E 00                    5901 	.db #0x00	; 0
      00072F 00                    5902 	.db #0x00	; 0
      000730 00                    5903 	.db #0x00	; 0
      000731 00                    5904 	.db #0x00	; 0
      000732 00                    5905 	.db #0x00	; 0
      000733 00                    5906 	.db #0x00	; 0
      000734 00                    5907 	.db #0x00	; 0
      000735 00                    5908 	.db #0x00	; 0
      000736 00                    5909 	.db #0x00	; 0
      000737 00                    5910 	.db #0x00	; 0
      000738 FE                    5911 	.db #0xfe	; 254
      000739 7F                    5912 	.db #0x7f	; 127
      00073A 00                    5913 	.db #0x00	; 0
      00073B 00                    5914 	.db #0x00	; 0
      00073C 00                    5915 	.db #0x00	; 0
      00073D 00                    5916 	.db #0x00	; 0
      00073E 00                    5917 	.db #0x00	; 0
      00073F 00                    5918 	.db #0x00	; 0
      000740 00                    5919 	.db #0x00	; 0
      000741 00                    5920 	.db #0x00	; 0
      000742 00                    5921 	.db #0x00	; 0
      000743 00                    5922 	.db #0x00	; 0
      000744 00                    5923 	.db #0x00	; 0
      000745 00                    5924 	.db #0x00	; 0
      000746 00                    5925 	.db #0x00	; 0
      000747 00                    5926 	.db #0x00	; 0
      000748 02                    5927 	.db #0x02	; 2
      000749 40                    5928 	.db #0x40	; 64
      00074A 02                    5929 	.db #0x02	; 2
      00074B 40                    5930 	.db #0x40	; 64
      00074C 02                    5931 	.db #0x02	; 2
      00074D 40                    5932 	.db #0x40	; 64
      00074E 7C                    5933 	.db #0x7c	; 124
      00074F 3F                    5934 	.db #0x3f	; 63
      000750 80                    5935 	.db #0x80	; 128
      000751 00                    5936 	.db #0x00	; 0
      000752 80                    5937 	.db #0x80	; 128
      000753 00                    5938 	.db #0x00	; 0
      000754 00                    5939 	.db #0x00	; 0
      000755 00                    5940 	.db #0x00	; 0
      000756 00                    5941 	.db #0x00	; 0
      000757 00                    5942 	.db #0x00	; 0
      000758 C0                    5943 	.db #0xc0	; 192
      000759 00                    5944 	.db #0x00	; 0
      00075A 00                    5945 	.db #0x00	; 0
      00075B 01                    5946 	.db #0x01	; 1
      00075C 00                    5947 	.db #0x00	; 0
      00075D 01                    5948 	.db #0x01	; 1
      00075E 00                    5949 	.db #0x00	; 0
      00075F 01                    5950 	.db #0x01	; 1
      000760 80                    5951 	.db #0x80	; 128
      000761 00                    5952 	.db #0x00	; 0
      000762 80                    5953 	.db #0x80	; 128
      000763 00                    5954 	.db #0x00	; 0
      000764 40                    5955 	.db #0x40	; 64
      000765 00                    5956 	.db #0x00	; 0
      000766 40                    5957 	.db #0x40	; 64
      000767 00                    5958 	.db #0x00	; 0
      000768 40                    5959 	.db #0x40	; 64
      000769 00                    5960 	.db #0x00	; 0
      00076A 80                    5961 	.db #0x80	; 128
      00076B 01                    5962 	.db #0x01	; 1
      00076C 00                    5963 	.db #0x00	; 0
      00076D 00                    5964 	.db #0x00	; 0
      00076E F8                    5965 	.db #0xf8	; 248
      00076F 01                    5966 	.db #0x01	; 1
      000770 08                    5967 	.db #0x08	; 8
      000771 03                    5968 	.db #0x03	; 3
      000772 08                    5969 	.db #0x08	; 8
      000773 04                    5970 	.db #0x04	; 4
      000774 08                    5971 	.db #0x08	; 8
      000775 08                    5972 	.db #0x08	; 8
      000776 08                    5973 	.db #0x08	; 8
      000777 04                    5974 	.db #0x04	; 4
      000778 08                    5975 	.db #0x08	; 8
      000779 03                    5976 	.db #0x03	; 3
      00077A F8                    5977 	.db #0xf8	; 248
      00077B 01                    5978 	.db #0x01	; 1
      00077C 00                    5979 	.db #0x00	; 0
      00077D 00                    5980 	.db #0x00	; 0
      00077E 00                    5981 	.db #0x00	; 0
      00077F 00                    5982 	.db #0x00	; 0
                                   5983 	.area XINIT   (CODE)
      000000                       5984 __xinit__epdCharSize:
      000000 01                    5985 	.db #0x01	; 1
      000001                       5986 __xinit__directionY:
      000001 01                    5987 	.db #0x01	;  1
      000002                       5988 __xinit__fontCurXpos:
      000002 00 00                 5989 	.byte #0x00, #0x00	; 0
      000004                       5990 __xinit__fontCurYpos:
      000004 00 00                 5991 	.byte #0x00, #0x00	; 0
      000006                       5992 __xinit__currentLut:
      000006 00                    5993 	.db #0x00	; 0
      000007                       5994 __xinit__dispLutSize:
      000007 00                    5995 	.db #0x00	; 0
      000008                       5996 __xinit__drawDirection:
      000008 00                    5997 	.db #0x00	;  0
      000009                       5998 __xinit__isInited:
      000009 00                    5999 	.db #0x00	;  0
      00000A                       6000 __xinit__epdGPIOActive:
      00000A 00                    6001 	.db #0x00	;  0
      00000B                       6002 __xinit__waveform10:
      00000Br20s00 00              6003 	.byte _waveformbuffer, (_waveformbuffer >> 8),#0x00
      00000E                       6004 __xinit__waveform7:
      00000Er20s00 00              6005 	.byte _waveformbuffer, (_waveformbuffer >> 8),#0x00
                                   6006 	.area CABS    (ABS,CODE)
